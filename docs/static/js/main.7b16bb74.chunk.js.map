{"version":3,"sources":["components/PopupEditor.tsx","utils.ts","components/VegaLiteEditor.tsx","components/TooltipTable.tsx","components/SpecPreview.tsx","variables.ts","components/NavigationBar.tsx","components/NewSpec.tsx","components/MainView.tsx","components/ModeBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","textField","marginTop","spacing","marginBottom","width","closeButton","position","right","top","errorMessage","fontStyle","color","PopupEditor","_ref","isOpen","onClose","value","setValue","alias","setAlias","errorMsg","extras","classes","react_default","a","createElement","Dialog","open","aria-labelledby","maxWidth","fullWidth","DialogTitle","disableTypography","TextField","id","label","className","onChange","event","target","margin","Button","onClick","Save_default","IconButton","Close_default","DialogContent","lib_default","language","height","txt","editorDidMount","editor","focus","options","automaticLayout","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","failure","x","tag","examples","data","url","mark","encoding","field","type","y","transform","filter","scale","rangeStep","aggregate","axis","title","VegaLiteEditor","showModal","setShowModal","onSuccess","_useState","useState","_useState2","Object","slicedToArray","setErrorMsg","map","example","i","key","stringify","PopupEditor_PopupEditor","toSave","result","json","JSON","parse","vl","e","SyntaxError","message","stringToSpec","_","keyColumn","textAlign","TooltipTable","table","children","_ref2","_ref3","val","Tooltip","placement","MemoizedVegaLite","React","memo","VegaLite","wrapper","&::after","display","backgroundImage","content","image","overflow","preview","userSelect","border","borderColor","active","borderStyle","center","left","& button","marginRight","bottom","SpecPreview","spec","onToggleActive","onModify","onDelete","_useState3","_useState4","currentSpec","setCurrentSpec","_useState5","_useState6","currentAlias","setCurrentAlias","Fragment","ListItem","disableGutters","TooltipTable_TooltipTable","Fab","size","Edit_default","Delete_default","Divider","VegaLiteEditor_VegaLiteEditor","list","overflowY","overflowX","flexGrow","paddingTop","paddingBottom","NavigationBar","specs","activePreview","setActivePreview","List","SpecPreview_SpecPreview","button","NewSpec","onAdd","PlaylistAdd_default","main","backgroundColor","palette","grey","MainView","ModeBar","onUndo","onRedo","Grid","container","justify","item","Undo_default","Redo_default","root","flexDirection","App","specCount","states","setStates","redoStack","setRedoStack","addState","state","R","NewSpec_NewSpec","_states$","NavigationBar_NavigationBar","ModeBar_ModeBar","length","slice","MainView_MainView","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2aAyBMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,UAAWF,EAAMG,QAAQ,GACzBC,aAAcJ,EAAMG,QAAQ,GAC5BE,MAAO,KAETC,YAAa,CACXC,SAAU,WACVC,MAAOR,EAAMG,QAAQ,GACrBM,IAAKT,EAAMG,QAAQ,IAErBO,aAAc,CACZC,UAAW,SACXC,MAAO,UAIEC,EAA2C,SAAAC,GASlD,IARJC,EAQID,EARJC,OACAC,EAOIF,EAPJE,QACAC,EAMIH,EANJG,MACAC,EAKIJ,EALJI,SACAC,EAIIL,EAJJK,MACAC,EAGIN,EAHJM,SACAC,EAEIP,EAFJO,SACAC,EACIR,EADJQ,OAEMC,EAAUzB,IAIhB,OACE0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,KAAMb,EACNC,QAASA,EACTa,kBAAgB,oBAChBC,SAAS,KACTC,WAAW,GAEXP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAaC,mBAAiB,GAC5BT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,GAAG,gBACHC,MAAM,OACNC,UAAWd,EAAQtB,UACnBgB,MAAOE,EACPmB,SAAU,SAAAC,GAAK,OAAInB,EAASmB,EAAMC,OAAOvB,QACzCwB,OAAO,WAETjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,QAAS,kBAAM3B,GAAQ,KAC7BQ,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,MADF,aAICH,EACDE,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACER,UAAWd,EAAQjB,YACnBqC,QAAS,kBAAM3B,GAAQ,KAEvBQ,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,QAGJD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACEvB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACbb,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CACEwB,SAAS,OACThC,MAAOA,EACPiC,OAnES,IAoETZ,SAAU,SAAAa,GAAG,OAAIjC,EAASiC,IAC1BC,eAtCmC,SAAAC,GAAM,OAAIA,EAAOC,SAuCpDC,QAAS,CACPC,iBAAiB,EACjBC,eAAgB,SAChBC,SAAS,EACTC,oBAAqB,EACrBC,QAAS,CAAEC,SAAS,GACpBC,sBAAsB,EACtBC,SAAU,SAIhBvC,EAAAC,EAAAC,cAAA,QAAMW,UAAWd,EAAQb,cACtBW,GAAsB,SCxGpB2C,EAAU,SAAIC,GAAJ,MAA0B,CAAEC,IAAK,UAAWjD,MAAOgD,aCgBpEE,EAAW,CACf,CACEC,KAAM,CAAEC,IAAK,gDACbC,KAAM,QACNC,SAAU,CACRN,EAAG,CAAEO,MAAO,aAAcC,KAAM,gBAChCC,EAAG,CAAEF,MAAO,mBAAoBC,KAAM,kBAI1C,CACEL,KAAM,CAAEC,IAAK,sDACbM,UAAW,CAAC,CAAEC,OAAQ,uBACtBN,KAAM,MACNC,SAAU,CACRG,EAAG,CACDF,MAAO,MACPC,KAAM,UACNI,MAAO,CAAEC,UAAW,KAEtBb,EAAG,CACDc,UAAW,MACXP,MAAO,SACPC,KAAM,eACNO,KAAM,CAAEC,MAAO,kBAMVC,EAAiD,SAAApE,GAQxD,IAPJqE,EAOIrE,EAPJqE,UACAC,EAMItE,EANJsE,aACAnE,EAKIH,EALJG,MACAC,EAIIJ,EAJJI,SACAC,EAGIL,EAHJK,MACAC,EAEIN,EAFJM,SACAiE,EACIvE,EADJuE,UACIC,EAC4BC,mBAAS,IADrCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACGjE,EADHmE,EAAA,GACaG,EADbH,EAAA,GA8CElE,EAAS6C,EAASyB,IAAI,SAACC,EAASC,GAAV,OAC1BtE,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQqD,IAAKD,EAAGnD,QAAS,kBAAMzB,EAAS8E,IAAUH,MAAlD,WACWC,EAAI,KAIjB,OACEtE,EAAAC,EAAAC,cAACuE,EAAD,CACElF,OAAQoE,EACRnE,QA9BgB,SAACkF,GACnB,IAAIA,EAgBF,OAFAP,EAAY,SACZP,GAAa,GAdb,IAAMe,EAxBW,SAAClF,GACpB,IACE,IAAMmF,EAAOC,KAAKC,MAAMrF,GACxB,MAAM,SAAUmF,GAAW,QAASA,EAAKhC,MAMzCmC,IAAWH,GDnEgC,CAAElC,IAAK,UAAWjD,MCoE9CmF,IANNpC,EAAQ,0CAOjB,MAAOwC,GACP,GAAIA,aAAaC,YACf,OAAOzC,EAAQwC,EAAEE,SACZ,GAAkB,iBAAdF,EAAEE,QACX,OAAO1C,EAAQwC,EAAEE,SAEjB,MAAMF,GAOOG,CAAa1F,GAC5B,OAAQkF,EAAOjC,KACb,IAAK,UAIH,OAHAyB,EAAY,IACZN,EAAUlE,EAAOgF,EAAOlF,YACxBmE,GAAa,GAEf,IAAK,UAGH,YAFAO,EAAYQ,EAAOlF,SAqBvBA,MAAOA,EACPC,SAAUA,EACVC,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVC,OAAQA,cC3GRxB,EAAYC,YAAW,SAAA6G,GAAC,MAAK,CACjCC,UAAW,CAAEC,UAAW,YAGbC,EAA6C,SAAAjG,GAGpD,IAFJkG,EAEIlG,EAFJkG,MACAC,EACInG,EADJmG,SAEM1F,EAAUzB,IACVmF,EACJzD,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACGsF,EAAMpB,IAAI,SAAAsB,GAAA,IAAAC,EAAA1B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GAAEnB,EAAFoB,EAAA,GAAOC,EAAPD,EAAA,UACT3F,EAAAC,EAAAC,cAAA,MAAIqE,IAAKA,GACPvE,EAAAC,EAAAC,cAAA,MAAIW,UAAWd,EAAQsF,WACrBrF,EAAAC,EAAAC,cAAA,cAASqE,GADX,KAGAvE,EAAAC,EAAAC,cAAA,UAAK0F,QAOf,OACE5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAASC,UAAU,MAAMrC,MAAOA,GAC7BgC,+BCdDM,EAAmBC,IAAMC,KAAKC,KAE9B5H,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrC2H,QAAS,CACPzE,OCzBwB,ID0BxB0E,WAAY,CACVC,QAAS,QACTtH,SAAU,WACVL,UAAW,OACXG,MC9BsB,ID+BtByH,gBACE,0EACF5E,OAAQ,MACR6E,QAAS,OAGbC,MAAO,CACLC,SAAU,SACV/E,OCvCwB,KDyC1BgF,QAAS,CACP3H,SAAU,WACV4H,WAAY,OACZC,OAAQ,EACRC,YAAc,SAACC,GAAD,OAAsBA,EAAS,SAAW,SACxDC,YAAa,SAEfC,OAAQ,CACNjI,SAAU,WACVkI,KAAM,MACN9D,UAAW,sBAEblE,IAAK,CACHF,SAAU,WACVC,MAAO,EACPC,IAAK,EACLiI,WAAY,CACVC,YAAa3I,EAAMG,QAAQ,GAC3BD,UAAWF,EAAMG,QAAQ,KAG7ByI,OAAQ,CACNA,OAAQ,GACRhI,MAAO,YAIEiI,EAA2C,SAAA/H,GAMlD,IALJgI,EAKIhI,EALJgI,KACAC,EAIIjI,EAJJiI,eACAC,EAGIlI,EAHJkI,SACAC,EAEInI,EAFJmI,SACAX,EACIxH,EADJwH,OACIhD,EAC8BC,oBAAS,GADvCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACGH,EADHK,EAAA,GACcJ,EADdI,EAAA,GAAA0D,EAEkC3D,mBAAS,IAF3C4D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAEGE,EAFHD,EAAA,GAEgBE,EAFhBF,EAAA,GAAAG,EAGoC/D,mBAAS,IAH7CgE,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAGGE,EAHHD,EAAA,GAGiBE,EAHjBF,EAAA,GAeEhI,EAAUzB,EAAUwI,GAE1B,OACE9G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiI,SAAA,KACElI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CACEC,gBAAc,EACdvH,UAAWd,EAAQ2G,QACnBvF,QAASoG,GAETvH,EAAAC,EAAAC,cAACmI,EAAD,CACE7C,MAAO,CACL,CAAC,WAAY8B,EAAKA,KAAK1E,KAAKC,KAC5B,CAAC,YAAayE,EAAKA,KAAKxE,QAG1B9C,EAAAC,EAAAC,cAAA,OAAKW,UAAWd,EAAQoG,SACtBnG,EAAAC,EAAAC,cAAA,OAAKW,UAAWd,EAAQyG,OACtBxG,EAAAC,EAAAC,cAAC6F,EAAD,CACEuB,KAAMA,EAAKA,KACXzI,MC5GY,ID6GZ6C,OC7GY,SDmHpB1B,EAAAC,EAAAC,cAAA,OAAKW,UAAWd,EAAQd,KACtBe,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKC,KAAK,QAAQnJ,MAAM,UAAU+B,QArCrB,WACnB0G,EAAerD,IAAU8C,EAAKA,OAC9BW,EAAgBX,EAAK3H,OACrBiE,GAAa,KAmCL5D,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,OAEFD,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAKC,KAAK,QAAQnJ,MAAM,YAAY+B,QAlCvB,WACnBsG,MAkCQzH,EAAAC,EAAAC,cAACuI,EAAAxI,EAAD,QAIJD,EAAAC,EAAAC,cAAA,OAAKW,UAAWd,EAAQiH,OAAS,IAAMjH,EAAQqH,QAC5CE,EAAK3H,QAGVK,EAAAC,EAAAC,cAACwI,EAAA,EAAD,MACA1I,EAAAC,EAAAC,cAACyI,EAAD,CACEhF,UAAWA,EACXC,aAAcA,EACdC,UAAW2D,EACX/H,MAAOmI,EACPlI,SAAUmI,EACVlI,MAAOqI,EACPpI,SAAUqI,eE5HZ3J,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCoK,KAAM,CACJC,UAAW,OACXC,UAAW,SACXC,SAAU,EACVC,WAAY,EACZC,cAAe,MAINC,EAA+C,SAAA5J,GAItD,IAHJ6J,EAGI7J,EAHJ6J,MACA3B,EAEIlI,EAFJkI,SACAC,EACInI,EADJmI,SACI3D,EACsCC,mBAAwB,MAD9DC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACGsF,EADHpF,EAAA,GACkBqF,EADlBrF,EAAA,GAMEjE,EAAUzB,IAEhB,OACE0B,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAMzI,UAAWd,EAAQ6I,MACvB5I,EAAAC,EAAAC,cAACwI,EAAA,EAAD,MACCS,EAAM/E,IAAI,SAAAkD,GAAI,OACbtH,EAAAC,EAAAC,cAACqJ,EAAD,CACEhF,IAAK+C,EAAK3G,GACV2G,KAAMA,EACNR,OAAQQ,EAAK3G,KAAOyI,EACpB7B,gBAboB5G,EAae2G,EAAK3G,GAbL,kBACzC0I,EAAiBD,IAAkBzI,EAAK,KAAOA,KAazC6G,SAAUA,EAASF,EAAK3G,IACxB8G,SAAUA,EAASH,EAAK3G,MAfL,IAACA,wBCnBxBrC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCgL,OAAQ,CAAE5K,aAAcJ,EAAMG,QAAQ,OAG3B8K,EAAmC,SAAAnK,GAAe,IAAZoK,EAAYpK,EAAZoK,MAAY5F,EAC3BC,oBAAS,GADkBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtDH,EADsDK,EAAA,GAC3CJ,EAD2CI,EAAA,GAAA0D,EAEvB3D,mBAAS,IAFc4D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAEtDE,EAFsDD,EAAA,GAEzCE,EAFyCF,EAAA,GAAAG,EAGrB/D,mBAAS,IAHYgE,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAGtDE,EAHsDD,EAAA,GAGxCE,EAHwCF,EAAA,GAWvDhI,EAAUzB,IAEhB,OACE0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiI,SAAA,KACElI,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,QAVO,WACjB0G,EAAe,IACfI,EAAgB,IAChBrE,GAAa,IAOkB/C,UAAWd,EAAQyJ,QAC9CxJ,EAAAC,EAAAC,cAACyJ,EAAA1J,EAAD,MADF,kBAGAD,EAAAC,EAAAC,cAACyI,EAAD,CACEhF,UAAWA,EACXC,aAAcA,EACdC,UAAW6F,EACXjK,MAAOmI,EACPlI,SAAUmI,EACVlI,MAAOqI,EACPpI,SAAUqI,MCpCZ3J,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCoL,KAAM,CACJC,gBAAiBrL,EAAMsL,QAAQC,KAAK,KACpCrL,UAAWF,EAAMG,QAAQ,GACzBoK,SAAU,MAIDiB,GAAqB,WAChC,IAAMjK,EAAUzB,KAChB,OAAO0B,EAAAC,EAAAC,cAAA,OAAKW,UAAWd,EAAQ6J,4DCFpBK,GAAmC,SAAA3K,GAAwB,IAArB4K,EAAqB5K,EAArB4K,OAAQC,EAAa7K,EAAb6K,OAAarG,EAChCC,mBAAS,IADuBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAAE,EAAA,GAAAA,EAAA,GAEtE,OACEhE,EAAAC,EAAAC,cAACkK,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,iBACtBtK,EAAAC,EAAAC,cAACkK,GAAA,EAAD,CAAMG,MAAI,GACRvK,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,QAAS,cAAjB,SACAnB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,QAAS,cAAjB,UACAnB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,QAAS,cAAjB,UACAnB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,QAAS,cAAjB,UAEFnB,EAAAC,EAAAC,cAACkK,GAAA,EAAD,CAAMG,MAAI,GACRvK,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,QAAS+I,GACflK,EAAAC,EAAAC,cAACsK,GAAAvK,EAAD,MADF,cAGAD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,QAASgJ,GACfnK,EAAAC,EAAAC,cAACuK,GAAAxK,EAAD,MADF,iBCfF3B,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCkM,KAAM,CACJhJ,OAAQ,IACR2E,QAAS,QAEXY,KAAM,CACJvF,OAAQ,OACR2E,QAAS,OACTsE,cAAe,SACf9L,MLnBwB,IKoBxBsI,YAAa3I,EAAMG,QAAQ,IAE7BK,MAAO,CACL+J,SAAU,EACV1C,QAAS,OACTsE,cAAe,aA8EQC,GA1EL,WAAM,IAAA9G,EACEC,mBAAkB,CAAC,CAAEoF,MAAO,GAAI0B,UAAW,KAD7C7G,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBgH,EADmB9G,EAAA,GACX+G,EADW/G,EAAA,GAAA0D,EAEQ3D,mBAAkB,IAF1B4D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAEnBsD,EAFmBrD,EAAA,GAERsD,EAFQtD,EAAA,GAIpBuD,EAAW,SAACC,GAChBJ,EAAUK,IAAUD,EAAOL,IAC3BG,EAAa,KAgDTlL,EAAUzB,KAEhB,OACE0B,EAAAC,EAAAC,cAAA,OAAKW,UAAWd,EAAQ2K,MACtB1K,EAAAC,EAAAC,cAAA,OAAKW,UAAWd,EAAQkH,MACtBjH,EAAAC,EAAAC,cAACmL,EAAD,CAAS3B,MAlDO,SAAC/J,EAAeiF,GAAc,IAAA0G,EACrBR,EAAO,GAA5B3B,EAD0CmC,EAC1CnC,MAAO0B,EADmCS,EACnCT,UACfK,EAAS,CACP/B,MAAOiC,IAAS,CAAEzK,GAAIkK,EAAWvD,KAAM1C,EAAMjF,SAASwJ,GACtD0B,UAAWA,EAAY,OA+CrB7K,EAAAC,EAAAC,cAACqL,EAAD,CACEpC,MAAO2B,EAAO,GAAG3B,MACjB3B,SA7CiB,SAAC7G,GAAD,OAAgB,SAAChB,EAAeiF,GACvDsG,EACEE,IACEA,IAAW,SACX,SAACjC,GAAD,OACEA,EAAM/E,IACJ,SAAAkD,GAAI,OAAKA,EAAK3G,KAAOA,EAAK,CAAEA,KAAI2G,KAAM1C,EAAMjF,SAAU2H,KAE1DwD,EAAO,OAsCLrD,SAjCiB,SAAC9G,GAAD,OAAgB,WACvCuK,EACEE,IACEA,IAAW,SACX,SAACjC,GAAD,OAAsBA,EAAM/F,OAAO,SAAAkE,GAAI,OAAIA,EAAK3G,KAAOA,KACvDmK,EAAO,UA+BT9K,EAAAC,EAAAC,cAAA,OAAKW,UAAWd,EAAQf,OACtBgB,EAAAC,EAAAC,cAACsL,GAAD,CAAStB,OA3BI,WACbY,EAAOW,OAAS,IAClBR,EAAaG,IAAUN,EAAO,GAAIE,IAClCD,EAAUD,EAAOY,MAAM,MAwBQvB,OApBhB,WACba,EAAUS,OAAS,IACrBV,EAAUK,IAAUJ,EAAU,GAAIF,IAClCG,EAAaD,EAAUU,MAAM,QAkB3B1L,EAAAC,EAAAC,cAACyL,GAAD,SCrFYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlM,EAAAC,EAAAC,cAACiM,GAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7b16bb74.chunk.js","sourcesContent":["import React from 'react';\nimport MonacoEditor, { EditorDidMount } from 'react-monaco-editor';\nimport Close from '@material-ui/icons/Close';\nimport Save from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nexport interface IPopupEditorProps {\n  isOpen: boolean;\n  onClose: (toSave: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  errorMsg?: string;\n  extras: React.ReactNode[];\n}\n\nconst editorHeight = 400;\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(4),\n    width: 300\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n  errorMessage: {\n    fontStyle: 'italic',\n    color: 'red'\n  }\n}));\n\nexport const PopupEditor: React.FC<IPopupEditorProps> = ({\n  isOpen,\n  onClose,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  errorMsg,\n  extras\n}) => {\n  const classes = useStyles();\n\n  const handleEditorDidMount: EditorDidMount = editor => editor.focus();\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"lg\"\n      fullWidth={true}\n    >\n      <DialogTitle disableTypography>\n        <TextField\n          id=\"standard-name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={alias}\n          onChange={event => setAlias(event.target.value)}\n          margin=\"normal\"\n        />\n        <Button onClick={() => onClose(true)}>\n          <Save />\n          &nbsp; Save\n        </Button>\n        {extras}\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => onClose(false)}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className=\"editor\">\n          <MonacoEditor\n            language=\"json\"\n            value={value}\n            height={editorHeight}\n            onChange={txt => setValue(txt)}\n            editorDidMount={handleEditorDidMount}\n            options={{\n              automaticLayout: true,\n              cursorBlinking: 'smooth',\n              folding: true,\n              lineNumbersMinChars: 4,\n              minimap: { enabled: false },\n              scrollBeyondLastLine: false,\n              wordWrap: 'on'\n            }}\n          />\n        </div>\n        <span className={classes.errorMessage}>\n          {errorMsg ? errorMsg : null}\n        </span>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","export const success = <T>(x: T): Success<T> => ({ tag: 'success', value: x });\nexport const failure = <T>(x: T): Failure<T> => ({ tag: 'failure', value: x });\nexport const last = <T>(xs: T[]) => xs[xs.length - 1];\n","import React, { useState } from 'react';\nimport { PopupEditor } from './PopupEditor';\nimport { success, failure } from '../utils';\nimport * as vl from 'vega-lite';\nimport stringify from 'json-stringify-pretty-compact';\nimport Button from '@material-ui/core/Button';\n\nexport interface IVegaLiteEditorProps {\n  showModal: boolean;\n  setShowModal: (val: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  onSuccess: (alias: string, json: any) => void;\n}\n\nconst examples = [\n  {\n    data: { url: 'https://vega.github.io/editor/data/cars.json' },\n    mark: 'point',\n    encoding: {\n      x: { field: 'Horsepower', type: 'quantitative' },\n      y: { field: 'Miles_per_Gallon', type: 'quantitative' }\n    }\n  },\n\n  {\n    data: { url: 'https://vega.github.io/editor/data/population.json' },\n    transform: [{ filter: 'datum.year == 2000' }],\n    mark: 'bar',\n    encoding: {\n      y: {\n        field: 'age',\n        type: 'ordinal',\n        scale: { rangeStep: 17 }\n      },\n      x: {\n        aggregate: 'sum',\n        field: 'people',\n        type: 'quantitative',\n        axis: { title: 'population' }\n      }\n    }\n  }\n];\n\nexport const VegaLiteEditor: React.FC<IVegaLiteEditorProps> = ({\n  showModal,\n  setShowModal,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  onSuccess\n}) => {\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const stringToSpec = (value: string) => {\n    try {\n      const json = JSON.parse(value);\n      if (!('data' in json) || !('url' in json.data)) {\n        return failure('data field must exist and must be url.');\n      }\n\n      // TODO: can we do anything with the output of the compilation?\n      // currently we only call it for side-effect (to see if it errors or not)\n      vl.compile(json);\n      return success(json);\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        return failure(e.message);\n      } else if (e.message === 'Invalid spec') {\n        return failure(e.message);\n      } else {\n        throw e;\n      }\n    }\n  };\n\n  const handleClose = (toSave: boolean) => {\n    if (toSave) {\n      const result = stringToSpec(value);\n      switch (result.tag) {\n        case 'success':\n          setErrorMsg('');\n          onSuccess(alias, result.value);\n          setShowModal(false);\n          return;\n        case 'failure':\n          setErrorMsg(result.value);\n          // NOTE: this does not close the dialog\n          return;\n      }\n    } else {\n      setErrorMsg('');\n      setShowModal(false);\n      return;\n    }\n  };\n\n  const extras = examples.map((example, i) => (\n    <Button key={i} onClick={() => setValue(stringify(example))}>\n      Example {i + 1}\n    </Button>\n  ));\n\n  return (\n    <PopupEditor\n      isOpen={showModal}\n      onClose={handleClose}\n      value={value}\n      setValue={setValue}\n      alias={alias}\n      setAlias={setAlias}\n      errorMsg={errorMsg}\n      extras={extras}\n    />\n  );\n};\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface ITooltipTableProps {\n  table: string[][];\n  children: any;\n}\n\nconst useStyles = makeStyles(_ => ({\n  keyColumn: { textAlign: 'right' }\n}));\n\nexport const TooltipTable: React.FC<ITooltipTableProps> = ({\n  table,\n  children\n}) => {\n  const classes = useStyles();\n  const title = (\n    <table>\n      <tbody>\n        {table.map(([key, val]) => (\n          <tr key={key}>\n            <td className={classes.keyColumn}>\n              <strong>{key}</strong>:\n            </td>\n            <td>{val}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <Tooltip placement=\"top\" title={title}>\n      {children}\n    </Tooltip>\n  );\n};\n","import React, { useState } from 'react';\nimport VegaLite from 'react-vega-lite';\nimport stringify from 'json-stringify-pretty-compact';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { TooltipTable } from './TooltipTable';\nimport Fab from '@material-ui/core/Fab';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { sidebarWidth } from '../variables';\n\nexport interface ISpecPreviewProps {\n  spec: RawSpec;\n  active: boolean;\n  onToggleActive: () => void;\n  onModify: (alise: string, json: any) => void;\n  onDelete: () => void;\n}\n\nconst MemoizedVegaLite = React.memo(VegaLite);\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    height: sidebarWidth,\n    '&::after': {\n      display: 'block',\n      position: 'relative',\n      marginTop: '-57%',\n      width: sidebarWidth,\n      backgroundImage:\n        'linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.75))',\n      height: '75%',\n      content: \"''\"\n    }\n  },\n  image: {\n    overflow: 'hidden',\n    height: sidebarWidth\n  },\n  preview: {\n    position: 'relative',\n    userSelect: 'none',\n    border: 1,\n    borderColor: ((active: boolean) => (active ? 'orange' : 'white')) as any,\n    borderStyle: 'solid'\n  },\n  center: {\n    position: 'absolute',\n    left: '50%',\n    transform: 'translate(-50%, 0)'\n  },\n  top: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    '& button': {\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(1)\n    }\n  },\n  bottom: {\n    bottom: 10,\n    color: 'white'\n  }\n}));\n\nexport const SpecPreview: React.FC<ISpecPreviewProps> = ({\n  spec,\n  onToggleActive,\n  onModify,\n  onDelete,\n  active\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const handleModify = () => {\n    setCurrentSpec(stringify(spec.spec));\n    setCurrentAlias(spec.alias);\n    setShowModal(true);\n  };\n\n  const handleDelete = () => {\n    onDelete();\n  };\n\n  const classes = useStyles(active);\n\n  return (\n    <>\n      <ListItem\n        disableGutters\n        className={classes.preview}\n        onClick={onToggleActive}\n      >\n        <TooltipTable\n          table={[\n            ['Data URL', spec.spec.data.url],\n            ['Mark Type', spec.spec.mark]\n          ]}\n        >\n          <div className={classes.wrapper}>\n            <div className={classes.image}>\n              <MemoizedVegaLite\n                spec={spec.spec}\n                width={sidebarWidth}\n                height={sidebarWidth}\n              />\n            </div>\n          </div>\n        </TooltipTable>\n\n        <div className={classes.top}>\n          <Fab size=\"small\" color=\"primary\" onClick={handleModify}>\n            <Edit />\n          </Fab>\n          <Fab size=\"small\" color=\"secondary\" onClick={handleDelete}>\n            <Delete />\n          </Fab>\n        </div>\n\n        <div className={classes.center + ' ' + classes.bottom}>\n          {spec.alias}\n        </div>\n      </ListItem>\n      <Divider />\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={onModify}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","export const sidebarWidth = 150;\n","import React, { useState } from 'react';\nimport { SpecPreview } from './SpecPreview';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nexport interface INavigationBarProps {\n  specs: RawSpec[];\n  onModify: (id: number) => (alias: string, json: any) => void;\n  onDelete: (id: number) => () => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexGrow: 1,\n    paddingTop: 0,\n    paddingBottom: 0\n  }\n}));\n\nexport const NavigationBar: React.FC<INavigationBarProps> = ({\n  specs,\n  onModify,\n  onDelete\n}) => {\n  const [activePreview, setActivePreview] = useState<number | null>(null);\n\n  const handleToggleActive = (id: number) => () =>\n    setActivePreview(activePreview === id ? null : id);\n\n  const classes = useStyles();\n\n  return (\n    <List className={classes.list}>\n      <Divider />\n      {specs.map(spec => (\n        <SpecPreview\n          key={spec.id}\n          spec={spec}\n          active={spec.id === activePreview}\n          onToggleActive={handleToggleActive(spec.id)}\n          onModify={onModify(spec.id)}\n          onDelete={onDelete(spec.id)}\n        />\n      ))}\n    </List>\n  );\n};\n","import React, { useState } from 'react';\nimport PlaylistAdd from '@material-ui/icons/PlaylistAdd';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface INewSpecProps {\n  onAdd: (alias: string, json: any) => void;\n}\n\nconst useStyles = makeStyles(theme => ({\n  button: { marginBottom: theme.spacing(1) }\n}));\n\nexport const NewSpec: React.FC<INewSpecProps> = ({ onAdd }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const handleOpen = () => {\n    setCurrentSpec('');\n    setCurrentAlias('');\n    setShowModal(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button onClick={handleOpen} className={classes.button}>\n        <PlaylistAdd /> &nbsp; New Spec\n      </Button>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={onAdd}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    backgroundColor: theme.palette.grey[200],\n    marginTop: theme.spacing(1),\n    flexGrow: 1\n  }\n}));\n\nexport const MainView: React.FC = () => {\n  const classes = useStyles();\n  return <div className={classes.main} />;\n};\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Undo from '@material-ui/icons/Undo';\nimport Redo from '@material-ui/icons/Redo';\nimport Grid from '@material-ui/core/Grid';\n\ninterface IModeBarProps {\n  onUndo: () => void;\n  onRedo: () => void;\n}\n\nexport const ModeBar: React.FC<IModeBarProps> = ({ onUndo, onRedo }) => {\n  const [currentMode, setCurrentMode] = useState('');\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <Button onClick={() => {}}>Layer</Button>\n        <Button onClick={() => {}}>Concat</Button>\n        <Button onClick={() => {}}>Repeat</Button>\n        <Button onClick={() => {}}>Facet</Button>\n      </Grid>\n      <Grid item>\n        <Button onClick={onUndo}>\n          <Undo /> &nbsp; Undo\n        </Button>\n        <Button onClick={onRedo}>\n          <Redo /> &nbsp; Redo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useState } from 'react';\nimport { hot } from 'react-hot-loader';\nimport * as R from 'ramda';\nimport { NavigationBar } from './components/NavigationBar';\nimport { NewSpec } from './components/NewSpec';\nimport { MainView } from './components/MainView';\nimport { ModeBar } from './components/ModeBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { sidebarWidth } from './variables';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 600,\n    display: 'flex'\n  },\n  left: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    width: sidebarWidth,\n    marginRight: theme.spacing(1)\n  },\n  right: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst App: React.FC = () => {\n  const [states, setStates] = useState<State[]>([{ specs: [], specCount: 0 }]);\n  const [redoStack, setRedoStack] = useState<State[]>([]);\n\n  const addState = (state: State) => {\n    setStates(R.prepend(state, states));\n    setRedoStack([]);\n  };\n\n  const handleAddSpec = (alias: string, json: any) => {\n    const { specs, specCount } = states[0];\n    addState({\n      specs: R.append({ id: specCount, spec: json, alias }, specs),\n      specCount: specCount + 1\n    });\n  };\n\n  const handleModifySpec = (id: number) => (alias: string, json: any) => {\n    addState(\n      R.over(\n        R.lensProp('specs'),\n        (specs: RawSpec[]) =>\n          specs.map(\n            spec => (spec.id === id ? { id, spec: json, alias } : spec)\n          ),\n        states[0]\n      )\n    );\n  };\n\n  const handleDeleteSpec = (id: number) => () => {\n    addState(\n      R.over(\n        R.lensProp('specs'),\n        (specs: RawSpec[]) => specs.filter(spec => spec.id !== id),\n        states[0]\n      )\n    );\n  };\n\n  const handleUndo = () => {\n    if (states.length > 1) {\n      setRedoStack(R.prepend(states[0], redoStack));\n      setStates(states.slice(1));\n    }\n  };\n\n  const handleRedo = () => {\n    if (redoStack.length > 0) {\n      setStates(R.prepend(redoStack[0], states));\n      setRedoStack(redoStack.slice(1));\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        <NewSpec onAdd={handleAddSpec} />\n        <NavigationBar\n          specs={states[0].specs}\n          onModify={handleModifySpec}\n          onDelete={handleDeleteSpec}\n        />\n      </div>\n      <div className={classes.right}>\n        <ModeBar onUndo={handleUndo} onRedo={handleRedo} />\n        <MainView />\n      </div>\n    </div>\n  );\n};\n\nexport default hot(module)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}