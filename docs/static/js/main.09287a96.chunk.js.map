{"version":3,"sources":["utils.ts","components/PopupEditor.tsx","components/VegaLiteEditor.tsx","components/TooltipTable.tsx","contexts.ts","components/VegaLite.tsx","components/SpecPreview.tsx","variables.ts","components/NavigationBar.tsx","components/NewSpec.tsx","components/MainView.tsx","components/OperationBar.tsx","SyntaxTree/Utils.ts","SyntaxTree/View.ts","reducer.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["failure","x","tag","value","addMarkdownProps","key","description","markdownDescription","hasOwnProperty","vegaLiteSchema","useStyles","makeStyles","theme","textField","marginTop","spacing","marginBottom","width","closeButton","position","right","top","errorMessage","fontStyle","color","schema","uri","PopupEditor","_ref","isOpen","onClose","onChange","alias","setAlias","errorMsg","extras","classes","react_default","a","createElement","Dialog","open","aria-labelledby","maxWidth","fullWidth","DialogTitle","disableTypography","TextField","id","label","className","event","target","margin","Button","onClick","Save_default","IconButton","Close_default","DialogContent","lib_default","language","height","editorDidMount","editor","focus","editorWillMount","monaco","languages","json","jsonDefaults","setDiagnosticsOptions","allowComments","enableSchemaRequest","schemas","validate","options","automaticLayout","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","Fragment","examples","data","url","mark","encoding","field","type","y","transform","filter","scale","rangeStep","aggregate","axis","title","stringToSpec","JSON","parse","vl","e","message","VegaLiteEditor","showModal","setShowModal","setValue","onSuccess","_useState","useState","_useState2","Object","slicedToArray","setErrorMsg","map","example","i","stringify","PopupEditor_PopupEditor","toSave","result","txt","_","keyColumn","textAlign","TooltipTable","table","children","_ref2","_ref3","val","Tooltip","placement","AppDispatch","React","createContext","VegaLite","memo","NativeVegaLite","xSpec","spec","xRest","objectWithoutProperties","ySpec","yRest","shallowequal","Vega","isSameSpec","wrapper","&::after","display","sidebarWidth","backgroundImage","content","bottom","alignSelf","image","overflow","preview","userSelect","marginLeft","marginRight","border","borderColor","active","borderStyle","&:hover","&:active","center","left","& button","SpecPreview","operand1Id","_useState3","_useState4","currentSpec","setCurrentSpec","_useState5","_useState6","currentAlias","setCurrentAlias","dispatch","useContext","ListItem","disableGutters","TooltipTable_TooltipTable","Fab","size","Edit_default","Delete_default","VegaLiteEditor_VegaLiteEditor","list","overflowY","overflowX","flexGrow","paddingTop","paddingBottom","flexDirection","alignContent","NavigationBar","currentState","List","specs","SpecPreview_SpecPreview","button","NewSpec","PlaylistAdd_default","main","backgroundColor","palette","grey","justifyContent","alignItems","MainView","view","export","OperationBar","operand2","operate","operator","forEach","operand1","layerDisabled","concatDisabled","repeatDisabled","facetDisabled","placeDisabled","Grid","container","justify","item","disabled","Undo_default","Redo_default","jsonCopy","obj","UnitViewHolder","_ViewHolder","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","ViewHolder","createClass","UnitView","newGlobalState","oldState","getCurrent","current","undoStack","R","redoStack","reducer","globalState","action","specCount","rest","objectSpread","length","slice","operand","Error","assertNever","initialState","root","App","_useReducer","useReducer","_useReducer2","state","Provider","NewSpec_NewSpec","NavigationBar_NavigationBar","OperationBar_OperationBar","MainView_MainView","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09287a96.chunk.js","sourcesContent":["export const success = <T>(x: T): ISuccess<T> => ({ tag: 'success', value: x });\nexport const failure = <T>(x: T): IFailure<T> => ({ tag: 'failure', value: x });\nexport const last = <T>(xs: T[]) => xs[xs.length - 1];\nexport const assertNever = (x: never): never => {\n  throw new Error('Unexpected object: ' + x);\n};\n","import React from 'react';\nimport MonacoEditor, {\n  EditorDidMount,\n  EditorWillMount,\n  DiffChangeHandler\n} from 'react-monaco-editor';\nimport Close from '@material-ui/icons/Close';\nimport Save from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport vegaLiteSchema from 'vega-lite/build/vega-lite-schema.json';\n\n/**\n * Adds markdownDescription props to a schema. See https://github.com/Microsoft/monaco-editor/issues/885\n */\nconst addMarkdownProps = value => {\n  if (typeof value === 'object' && value !== null) {\n    if (value.description) {\n      value.markdownDescription = value.description;\n    }\n\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        value[key] = addMarkdownProps(value[key]);\n      }\n    }\n  }\n  return value;\n};\n\naddMarkdownProps(vegaLiteSchema);\n\nexport interface IPopupEditorProps {\n  isOpen: boolean;\n  onClose: (toSave: boolean) => void;\n  value: string;\n  onChange: DiffChangeHandler;\n  alias: string;\n  setAlias: (txt: string) => void;\n  errorMsg?: string;\n  extras: React.ReactNode[];\n}\n\nconst editorHeight = 400;\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(4),\n    width: 300\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n  errorMessage: {\n    fontStyle: 'italic',\n    color: 'red'\n  }\n}));\n\nconst schema = [\n  {\n    schema: vegaLiteSchema,\n    uri: 'https://vega.github.io/schema/vega-lite/v3.json'\n  }\n];\n\nexport const PopupEditor: React.FC<IPopupEditorProps> = ({\n  isOpen,\n  onClose,\n  value,\n  onChange,\n  alias,\n  setAlias,\n  errorMsg,\n  extras\n}) => {\n  const classes = useStyles();\n\n  const handleEditorDidMount: EditorDidMount = editor => {\n    editor.focus();\n  };\n\n  const handleEditorWillMount: EditorWillMount = monaco => {\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      allowComments: false,\n      enableSchemaRequest: true,\n      schemas: schema,\n      validate: true\n    });\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"lg\"\n      fullWidth={true}\n    >\n      <DialogTitle disableTypography>\n        <TextField\n          id=\"standard-name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={alias}\n          onChange={event => setAlias(event.target.value)}\n          margin=\"normal\"\n        />\n        <Button onClick={() => onClose(true)}>\n          <Save />\n          &nbsp; Save\n        </Button>\n        {extras}\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => onClose(false)}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className=\"editor\">\n          <MonacoEditor\n            language=\"json\"\n            value={value}\n            height={editorHeight}\n            onChange={onChange}\n            editorDidMount={handleEditorDidMount}\n            editorWillMount={handleEditorWillMount}\n            options={{\n              automaticLayout: true,\n              cursorBlinking: 'smooth',\n              folding: true,\n              lineNumbersMinChars: 4,\n              minimap: { enabled: false },\n              scrollBeyondLastLine: false,\n              wordWrap: 'on'\n            }}\n          />\n        </div>\n        <span className={classes.errorMessage}>\n          {errorMsg !== null ? <>{errorMsg} &nbsp;</> : null}\n        </span>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport * as vl from 'vega-lite';\nimport stringify from 'json-stringify-pretty-compact';\nimport Button from '@material-ui/core/Button';\n\nimport { success, failure } from '../utils';\nimport { PopupEditor } from './PopupEditor';\n\nexport interface IVegaLiteEditorProps {\n  showModal: boolean;\n  setShowModal: (val: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  onSuccess: (alias: string, json: any) => void;\n}\n\nconst examples = [\n  {\n    data: { url: 'https://vega.github.io/editor/data/cars.json' },\n    mark: 'point',\n    encoding: {\n      x: { field: 'Horsepower', type: 'quantitative' },\n      y: { field: 'Miles_per_Gallon', type: 'quantitative' }\n    }\n  },\n\n  {\n    data: { url: 'https://vega.github.io/editor/data/population.json' },\n    transform: [{ filter: 'datum.year == 2000' }],\n    mark: 'bar',\n    encoding: {\n      y: {\n        field: 'age',\n        type: 'ordinal',\n        scale: { rangeStep: 17 }\n      },\n      x: {\n        aggregate: 'sum',\n        field: 'people',\n        type: 'quantitative',\n        axis: { title: 'population' }\n      }\n    }\n  }\n];\n\nconst stringToSpec = (value: string) => {\n  try {\n    const json = JSON.parse(value);\n    if (!('data' in json) || !('url' in json.data)) {\n      return failure('data field must exist and must be url.');\n    }\n\n    // TODO: can we do anything with the output of the compilation?\n    // currently we only call it for side-effect (to see if it errors or not)\n    vl.compile(json);\n    return success(json);\n  } catch (e) {\n    return failure(e.message);\n  }\n};\n\nexport const VegaLiteEditor: React.FC<IVegaLiteEditorProps> = ({\n  showModal,\n  setShowModal,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  onSuccess\n}) => {\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleClose = (toSave: boolean) => {\n    if (toSave) {\n      const result = stringToSpec(value);\n      switch (result.tag) {\n        case 'success':\n          setErrorMsg('');\n          onSuccess(alias, result.value);\n          setShowModal(false);\n          return;\n        case 'failure':\n          setErrorMsg(result.value);\n          // NOTE: this does not close the dialog\n          return;\n      }\n    } else {\n      setErrorMsg('');\n      setShowModal(false);\n      return;\n    }\n  };\n\n  const handleChange = (txt: string) => {\n    const result = stringToSpec(txt);\n    switch (result.tag) {\n      case 'success':\n        setErrorMsg('');\n        break;\n      case 'failure':\n        setErrorMsg(result.value);\n        break;\n    }\n    setValue(txt);\n  };\n\n  const extras = examples.map((example, i) => (\n    <Button key={i} onClick={() => setValue(stringify(example))}>\n      Example {i + 1}\n    </Button>\n  ));\n\n  return (\n    <PopupEditor\n      isOpen={showModal}\n      onClose={handleClose}\n      value={value}\n      onChange={handleChange}\n      alias={alias}\n      setAlias={setAlias}\n      errorMsg={errorMsg}\n      extras={extras}\n    />\n  );\n};\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface ITooltipTableProps {\n  table: string[][];\n  children: any;\n}\n\nconst useStyles = makeStyles(_ => ({\n  keyColumn: { textAlign: 'right' }\n}));\n\nexport const TooltipTable: React.FC<ITooltipTableProps> = ({\n  table,\n  children\n}) => {\n  const classes = useStyles();\n  const title = (\n    <table>\n      <tbody>\n        {table.map(([key, val]) => (\n          <tr key={key}>\n            <td className={classes.keyColumn}>\n              <strong>{key}</strong>:\n            </td>\n            <td>{val}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <Tooltip placement=\"top\" title={title}>\n      {children}\n    </Tooltip>\n  );\n};\n","import React from 'react';\nexport const AppDispatch = React.createContext(\n  (null as unknown) as React.Dispatch<React.ReducerAction<Reducer>>\n);\n","import React from 'react';\nimport shallowequal from 'shallowequal';\nimport Vega from 'react-vega';\nimport NativeVegaLite from 'react-vega-lite';\n\nexport const VegaLite = React.memo(\n  NativeVegaLite,\n  ({ spec: xSpec, ...xRest }, { spec: ySpec, ...yRest }) => {\n    return shallowequal(xRest, yRest) && Vega.isSameSpec(xSpec, ySpec);\n  }\n);\n","import React, { useState, useContext } from 'react';\nimport stringify from 'json-stringify-pretty-compact';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { TooltipTable } from './TooltipTable';\nimport Fab from '@material-ui/core/Fab';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AppDispatch } from '../contexts';\nimport { sidebarWidth, borderWidth } from '../variables';\nimport { VegaLite } from './VegaLite';\n\nexport interface ISpecPreviewProps {\n  spec: IBaseSpec;\n  operand1Id: number | null;\n  active: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    height: sidebarWidth,\n    '&::after': {\n      display: 'block',\n      position: 'absolute',\n      width: sidebarWidth - 2 * borderWidth,\n      backgroundImage:\n        'linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.75))',\n      height: '75%',\n      content: \"''\",\n      bottom: 0,\n      alignSelf: 'center'\n    }\n  },\n  image: {\n    overflow: 'hidden',\n    height: sidebarWidth,\n    width: sidebarWidth - 2 * borderWidth\n  },\n  preview: {\n    position: 'relative',\n    userSelect: 'none',\n    width: sidebarWidth,\n    marginTop: 5,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    border: borderWidth,\n    borderColor: ((active: boolean) =>\n      active ? '#3caea3' : 'lightgrey') as any,\n    borderStyle: 'solid',\n    '&:hover': {\n      borderColor: ((active: boolean) =>\n        active ? '#3caea3' : 'darkgrey') as any\n    },\n    '&:active': {\n      borderColor: ((active: boolean) => 'grey') as any\n    }\n  },\n  center: {\n    position: 'absolute',\n    left: '50%',\n    transform: 'translate(-50%, 0)'\n  },\n  top: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    '& button': {\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(1)\n    }\n  },\n  bottom: {\n    bottom: 10,\n    color: 'white'\n  }\n}));\n\nexport const SpecPreview: React.FC<ISpecPreviewProps> = ({\n  spec,\n  operand1Id,\n  active\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const handleModify = () => {\n    setCurrentSpec(stringify(spec.spec));\n    setCurrentAlias(spec.alias);\n    setShowModal(true);\n  };\n\n  const dispatch = useContext(AppDispatch);\n\n  const handleDelete = () => {\n    dispatch({ type: 'delete-spec', id: spec.id });\n  };\n\n  const handleSuccess = (alias: string, json: any) => {\n    dispatch({ type: 'modify-spec', json, alias, id: spec.id });\n  };\n\n  const handleToggleActive = () => {\n    const { id } = spec;\n    dispatch({ type: 'select-operand1', id: id === operand1Id ? null : id });\n  };\n\n  const classes = useStyles(active);\n\n  return (\n    <>\n      <ListItem\n        disableGutters\n        className={classes.preview}\n        onClick={handleToggleActive}\n      >\n        <TooltipTable\n          table={[\n            ['Data URL', spec.spec.data.url],\n            ['Mark Type', spec.spec.mark]\n          ]}\n        >\n          <div className={classes.wrapper}>\n            <div className={classes.image}>\n              <VegaLite\n                spec={spec.spec}\n                width={sidebarWidth}\n                height={sidebarWidth}\n              />\n            </div>\n          </div>\n        </TooltipTable>\n\n        <div className={classes.top}>\n          <Fab size=\"small\" color=\"primary\" onClick={handleModify}>\n            <Edit />\n          </Fab>\n          <Fab size=\"small\" color=\"secondary\" onClick={handleDelete}>\n            <Delete />\n          </Fab>\n        </div>\n\n        <div className={classes.center + ' ' + classes.bottom}>\n          {spec.alias}\n        </div>\n      </ListItem>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","export const sidebarWidth = 150;\nexport const borderWidth = 2;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SpecPreview } from './SpecPreview';\n\nexport interface INavigationBarProps {\n  currentState: IState;\n}\n\nconst useStyles = makeStyles(_ => ({\n  list: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexGrow: 1,\n    paddingTop: 0,\n    paddingBottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'center'\n  }\n}));\n\nexport const NavigationBar: React.FC<INavigationBarProps> = ({\n  currentState\n}) => {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.list}>\n      {currentState.specs.map(spec => (\n        <SpecPreview\n          key={spec.id}\n          spec={spec}\n          operand1Id={currentState.operand1Id}\n          active={spec.id === currentState.operand1Id}\n        />\n      ))}\n    </List>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport PlaylistAdd from '@material-ui/icons/PlaylistAdd';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AppDispatch } from '../contexts';\nimport { VegaLiteEditor } from './VegaLiteEditor';\n\nconst useStyles = makeStyles(theme => ({\n  button: { marginBottom: theme.spacing(1) }\n}));\n\nexport const NewSpec: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const dispatch = useContext(AppDispatch);\n\n  const handleSuccess = (alias: string, json: any) => {\n    dispatch({ type: 'add-spec', json, alias });\n  };\n\n  const handleOpen = () => {\n    setCurrentSpec('');\n    setCurrentAlias('Untitled');\n    setShowModal(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button onClick={handleOpen} className={classes.button}>\n        <PlaylistAdd /> &nbsp; New Spec\n      </Button>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { VegaLite } from './VegaLite';\n\nexport interface IMainViewProps {\n  view: any;\n}\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    backgroundColor: theme.palette.grey[200],\n    marginTop: theme.spacing(1),\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\n\nexport const MainView: React.FC<IMainViewProps> = ({ view }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.main}>\n      {\n        view ?\n          <VegaLite\n            spec={view.export()} // todo: display each component of the spec\n          /> :\n          \"Empty View\"\n      }\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Undo from '@material-ui/icons/Undo';\nimport Redo from '@material-ui/icons/Redo';\nimport Grid from '@material-ui/core/Grid';\n\nimport { AppDispatch } from '../contexts';\nimport { ViewHolder } from '../SyntaxTree/View';\n\ninterface IOperationBarProps {\n  specs: IBaseSpec[];\n  operand1Id: number | null;\n  operand2: any;\n  result: ViewHolder | null;\n}\n\nexport const OperationBar: React.FC<IOperationBarProps> = ({\n  specs,\n  operand1Id,\n  operand2,\n  result\n}) => {\n  const dispatch = useContext(AppDispatch);\n\n  const handleUndo = () => dispatch({ type: 'undo' });\n  const handleRedo = () => dispatch({ type: 'redo' });\n  const operate = (operator: Operator) => {\n    specs.forEach(spec => {\n      if (spec.id === operand1Id) {\n        dispatch({ type: 'operate', operand1: spec.spec, operand2, operator });\n      }\n    });\n  };\n\n  const layerDisabled = operand1Id === null || operand2 === null;\n  const concatDisabled = operand1Id === null || operand2 === null;\n  const repeatDisabled = operand1Id !== null || operand2 === null;\n  const facetDisabled = operand1Id !== null || operand2 === null;\n  const placeDisabled =\n    operand1Id === null || operand2 !== null || result !== null;\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <Button onClick={() => operate('layer')} disabled={layerDisabled}>\n          Layer\n        </Button>\n        <Button onClick={() => operate('concat')} disabled={concatDisabled}>\n          Concat\n        </Button>\n        <Button onClick={() => operate('repeat')} disabled={repeatDisabled}>\n          Repeat\n        </Button>\n        <Button onClick={() => operate('facet')} disabled={facetDisabled}>\n          Facet\n        </Button>\n        <Button onClick={() => operate('place')} disabled={placeDisabled}>\n          Place\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button onClick={handleUndo}>\n          <Undo /> &nbsp; Undo\n        </Button>\n        <Button onClick={handleRedo}>\n          <Redo /> &nbsp; Redo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","/**\n * Move an element that index `from` to the index `to` and shift the rest to the\n * index `from`.\n * For example: in an array with 4 elements [0, 1, 2, 3], calling\n * rearrange(2, 0) result in the rearrangement of the elements to [2, 0, 1, 3]\n * @param {Array} arr array containing the elements to be moved.\n * @param {number} from the index of the element to be moved from.\n * @param {number} to the index of the element to be moved to.\n */\nexport function moveElement(arr: Array<any>, from: number, to: number) {\n  if (!(from in arr && to in arr)) {\n    throw new Error(`from (=${from}) or to (=${to}) is out of arr bound (=[0,${arr.length - 1}])`);\n  }\n\n  const fromElm = arr[from];\n  if (from < to) {\n    for (let i = from; i < to; i++) {\n      arr[i] = arr[i + 1];\n    }\n  } else {\n    for (let i = from; i > to; i--) {\n      arr[i] = arr[i - 1];\n    }\n  }\n  arr[to] = fromElm;\n}\n\nexport function jsonCopy(obj: {}) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\n// export function isFacetSpec(spec: any): boolean {\n//   return !!spec && spec['facet'] !== undefined;\n// }\n\n// export function isLayerSpec(spec: any): boolean {\n//   return !!spec && spec['layer'] !== undefined;\n// }\n\n// export function isRepeatSpec(spec: any): boolean {\n//   return !!spec && spec['repeat'] !== undefined;\n// }\n\n// export function isConcatSpec(spec: any): boolean {\n//   return !!spec && spec['concat'] !== undefined;\n// }\n\n// export function isVConcatSpec(spec: any): boolean {\n//   return !!spec && spec['vconcat'] !== undefined;\n// }\n\n// export function isHConcatSpec(spec: any): boolean {\n//   return !!spec && spec['hconcat'] !== undefined;\n// }\n\n// export function parse(spec: any): View {\n//   if (isLayerSpec(spec)) {\n//     return new LayerView(spec);\n//   }\n// }","import { jsonCopy } from './Utils';\nexport interface View {\n  /**\n   * export Vega-Lite spec in vl.json format\n   * @returns exported Vega-Lite spec\n   */\n  export: () => object;\n}\n\nexport class ViewHolder {\n  view: View;\n\n  constructor(view: View) {\n    this.view = view;\n  }\n\n  /**\n   * export Vega-Lite spec of the holding view in vl.json format\n   * @returns exported Vega-Lite spec\n   */\n  export() {\n    return this.view.export();\n  }\n}\n\nexport class UnitViewHolder extends ViewHolder {\n  constructor(view: UnitView) {\n    super(view);\n  }\n}\n\n/**\n * An indicator for a view in CompositView.\n * Concat and Layer need a View and UnitView to indicate the appearance of the view,\n * while Repeat only need a string that specify a field to indicate\n * the appearance of the view.\n * Facet only need a field name for each axis to specify facet property, so\n * it should not have a parameter. Thus, we use null.\n * TODO: explain this better!\n */\ntype ViewIndocator = View | string | null;\n\nexport interface CompositeView<V extends ViewIndocator> extends View {\n  /**\n   * Move subview at the position `from` to position `to`.\n   * For example: in composite view with 4 subviews [0, 1, 2, 3], calling\n   * rearrange(2, 0) result in the rearrangement of the subview to [2, 0, 1, 3]\n   * @param {number} form the index of the view to be moved from.\n   * @param {number} to the index of the view to be moved to.\n   * @param {any} option an extra option for rearrangement.\n   */\n  rearrange: (from: number, to: number, option: any) => void;\n\n  /**\n   * Append another view with a ViewIdicator `elm`\n   * @param {V} viewIndicator the ViewIndocator to be appended.\n   * @param {any} option an extra option for appending.\n   */\n  append: (viewIndicator: V, option: any) => void;\n\n  /**\n   * Prepend another view with a ViewIdicator `elm`\n   * @param {V} viewIndicator the ViewIndocator to be prepended.\n   * @param {any} option an extra option for appending.\n   */\n  prepend: (viewIndicator: V, option: any) => void;\n\n  /**\n   * Remove a view from composite view\n   * @param {number} the index of the view to be removed\n   * @param {any} option an extra option for removing\n   */\n  remove: (index: number, option: any) => void;\n\n  /**\n   * Check if `viewIndicator` is competible with the current view\n   * @param {V} viewIndicator a view indicator to be checked\n   * @returns true if `viewIndicator` is competible with the current view\n   *          false otherwise.\n   */\n  isCompatible: (viewIndicator: V) => boolean;\n}\n\nexport class UnitView implements View {\n  private spec: {};\n\n  /**\n   * Construct a unit view with a valid Vega-Lite spec.\n   * @param {object} spec Vega-Lite spec\n   */\n  public constructor(spec: {}) {\n    this.spec = jsonCopy(spec);\n  }\n\n  public edit(spec: {}) {\n    this.spec = jsonCopy(spec);\n  }\n\n  public export() {\n    return jsonCopy(this.spec);\n  }\n}","import * as R from 'ramda';\nimport { UnitViewHolder, UnitView } from './SyntaxTree/View';\nimport { assertNever } from './utils';\n\nconst newGlobalState = (\n  oldState: IGlobalState,\n  getCurrent: (current: IState) => IState\n) => {\n  return {\n    current: getCurrent(oldState.current),\n    undoStack: R.prepend(oldState.current, oldState.undoStack),\n    redoStack: []\n  };\n};\n\nexport const reducer: Reducer = (globalState, action) => {\n  switch (action.type) {\n    case 'add-spec':\n      return newGlobalState(globalState, ({ specs, specCount, ...rest }) => ({\n        specs: R.append(\n          { id: specCount, spec: action.json, alias: action.alias },\n          specs\n        ),\n        specCount: specCount + 1,\n        ...rest\n      }));\n\n    case 'modify-spec':\n      return newGlobalState(\n        globalState,\n        R.over(\n          R.lensProp('specs'),\n          R.map(\n            (spec: IBaseSpec) =>\n              spec.id === action.id\n                ? { id: action.id, spec: action.json, alias: action.alias }\n                : spec\n          )\n        )\n      );\n    case 'delete-spec':\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(\n            R.lensProp('specs'),\n            R.filter((spec: IBaseSpec) => spec.id !== action.id)\n          ),\n          R.over(\n            R.lensProp('operand1Id'),\n            operand1Id => (operand1Id === action.id ? null : operand1Id)\n          )\n        )\n      );\n    case 'undo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (undoStack.length > 0) {\n        return {\n          redoStack: R.prepend(current, redoStack),\n          current: undoStack[0],\n          undoStack: undoStack.slice(1)\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'redo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (redoStack.length > 0) {\n        return {\n          redoStack: redoStack.slice(1),\n          current: redoStack[0],\n          undoStack: R.prepend(current, undoStack)\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'select-operand1': {\n      return newGlobalState(\n        globalState,\n        R.over(R.lensProp('operand1Id'), R.always(action.id))\n      );\n    }\n    case 'select-operand2': {\n      return newGlobalState(\n        globalState,\n        R.over(R.lensProp('operand2'), R.always(action.operand))\n      );\n    }\n    case 'operate': {\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(R.lensProp('result'), result => {\n            switch (action.operator) {\n              case 'place':\n                return new UnitViewHolder(new UnitView(action.operand1));\n              case 'layer':\n                return result;\n              case 'concat':\n                return result;\n              case 'repeat':\n                return result;\n              case 'facet':\n                return result;\n              default:\n                return assertNever(action.operator);\n            }\n          }),\n          R.over(R.lensProp('operand1Id'), R.always(null)),\n          R.over(R.lensProp('operand2'), R.always(null))\n        )\n      );\n    }\n    default:\n      throw new Error('impossible');\n  }\n};\n\nexport const initialState: IGlobalState = {\n  current: {\n    specs: [],\n    specCount: 0,\n    operand1Id: null,\n    operand2: null,\n    result: null\n  },\n  undoStack: [],\n  redoStack: []\n};\n","import React, { useReducer } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { NavigationBar } from './components/NavigationBar';\nimport { NewSpec } from './components/NewSpec';\nimport { MainView } from './components/MainView';\nimport { OperationBar } from './components/OperationBar';\nimport { sidebarWidth } from './variables';\nimport { AppDispatch } from './contexts';\nimport { reducer, initialState } from './reducer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 600,\n    display: 'flex'\n  },\n  left: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    width: sidebarWidth,\n    marginRight: theme.spacing(1)\n  },\n  right: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer<Reducer>(reducer, initialState);\n\n  const classes = useStyles();\n\n  return (\n    <AppDispatch.Provider value={dispatch}>\n      <div className={classes.root}>\n        <div className={classes.left}>\n          <NewSpec />\n          <NavigationBar\n            currentState={state.current}\n          />\n        </div>\n        <div className={classes.right}>\n          <OperationBar\n            specs={state.current.specs}\n            operand1Id={state.current.operand1Id}\n            operand2={state.current.operand2}\n            result={state.current.result}\n          />\n          <MainView view={state.current.result} />\n        </div>\n      </div>\n    </AppDispatch.Provider>\n  );\n};\n\nexport default hot(module)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}