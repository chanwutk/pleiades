{"version":3,"sources":["utils.ts","components/PopupEditor.tsx","components/VegaLiteEditor.tsx","components/TooltipTable.tsx","contexts.ts","components/SpecPreview.tsx","variables.ts","components/NavigationBar.tsx","components/NewSpec.tsx","components/MainView.tsx","components/ModeBar.tsx","reducer.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["failure","x","tag","value","useStyles","makeStyles","theme","textField","marginTop","spacing","marginBottom","width","closeButton","position","right","top","errorMessage","fontStyle","color","PopupEditor","_ref","isOpen","onClose","setValue","alias","setAlias","errorMsg","extras","classes","react_default","a","createElement","Dialog","open","aria-labelledby","maxWidth","fullWidth","DialogTitle","disableTypography","TextField","id","label","className","onChange","event","target","margin","Button","onClick","Save_default","IconButton","Close_default","DialogContent","lib_default","language","height","txt","editorDidMount","editor","focus","options","automaticLayout","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","examples","data","url","mark","encoding","field","type","y","transform","filter","scale","rangeStep","aggregate","axis","title","VegaLiteEditor","showModal","setShowModal","onSuccess","_useState","useState","_useState2","Object","slicedToArray","setErrorMsg","map","example","i","key","stringify","PopupEditor_PopupEditor","toSave","result","json","JSON","parse","vl","e","SyntaxError","message","stringToSpec","_","keyColumn","textAlign","TooltipTable","table","children","_ref2","_ref3","val","Tooltip","placement","AppDispatch","React","createContext","MemoizedVegaLite","memo","VegaLite","xSpec","spec","xRest","objectWithoutProperties","ySpec","yRest","shallowequal","Vega","isSameSpec","wrapper","&::after","display","backgroundImage","content","image","overflow","preview","userSelect","border","borderColor","active","borderStyle","center","left","& button","marginRight","bottom","SpecPreview","onToggleActive","_useState3","_useState4","currentSpec","setCurrentSpec","_useState5","_useState6","currentAlias","setCurrentAlias","dispatch","useContext","Fragment","ListItem","disableGutters","TooltipTable_TooltipTable","Fab","size","Edit_default","Delete_default","Divider","VegaLiteEditor_VegaLiteEditor","list","overflowY","overflowX","flexGrow","paddingTop","paddingBottom","NavigationBar","specs","activePreview","setActivePreview","List","SpecPreview_SpecPreview","button","NewSpec","PlaylistAdd_default","main","backgroundColor","palette","grey","justifyContent","alignItems","MainView","viz","ModeBar","mode","handleSelectMode","Grid","container","justify","item","disabled","Undo_default","Redo_default","newGlobalState","oldState","getCurrent","current","undoStack","R","redoStack","reducer","globalState","action","specCount","rest","objectSpread","length","slice","Error","root","flexDirection","App","_useReducer","useReducer","mainViewElements","_useReducer2","state","Provider","NewSpec_NewSpec","NavigationBar_NavigationBar","ModeBar_ModeBar","MainView_MainView","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f562fee3.chunk.js","sourcesContent":["export const success = <T>(x: T): ISuccess<T> => ({ tag: 'success', value: x });\nexport const failure = <T>(x: T): IFailure<T> => ({ tag: 'failure', value: x });\nexport const last = <T>(xs: T[]) => xs[xs.length - 1];\n","import React from 'react';\nimport MonacoEditor, { EditorDidMount } from 'react-monaco-editor';\nimport Close from '@material-ui/icons/Close';\nimport Save from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nexport interface IPopupEditorProps {\n  isOpen: boolean;\n  onClose: (toSave: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  errorMsg?: string;\n  extras: React.ReactNode[];\n}\n\nconst editorHeight = 400;\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(4),\n    width: 300\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n  errorMessage: {\n    fontStyle: 'italic',\n    color: 'red'\n  }\n}));\n\nexport const PopupEditor: React.FC<IPopupEditorProps> = ({\n  isOpen,\n  onClose,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  errorMsg,\n  extras\n}) => {\n  const classes = useStyles();\n\n  const handleEditorDidMount: EditorDidMount = editor => editor.focus();\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"lg\"\n      fullWidth={true}\n    >\n      <DialogTitle disableTypography>\n        <TextField\n          id=\"standard-name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={alias}\n          onChange={event => setAlias(event.target.value)}\n          margin=\"normal\"\n        />\n        <Button onClick={() => onClose(true)}>\n          <Save />\n          &nbsp; Save\n        </Button>\n        {extras}\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => onClose(false)}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className=\"editor\">\n          <MonacoEditor\n            language=\"json\"\n            value={value}\n            height={editorHeight}\n            onChange={txt => setValue(txt)}\n            editorDidMount={handleEditorDidMount}\n            options={{\n              automaticLayout: true,\n              cursorBlinking: 'smooth',\n              folding: true,\n              lineNumbersMinChars: 4,\n              minimap: { enabled: false },\n              scrollBeyondLastLine: false,\n              wordWrap: 'on'\n            }}\n          />\n        </div>\n        <span className={classes.errorMessage}>\n          {errorMsg ? errorMsg : null}\n        </span>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport * as vl from 'vega-lite';\nimport stringify from 'json-stringify-pretty-compact';\nimport Button from '@material-ui/core/Button';\n\nimport { success, failure } from '../utils';\nimport { PopupEditor } from './PopupEditor';\n\nexport interface IVegaLiteEditorProps {\n  showModal: boolean;\n  setShowModal: (val: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  onSuccess: (alias: string, json: any) => void;\n}\n\nconst examples = [\n  {\n    data: { url: 'https://vega.github.io/editor/data/cars.json' },\n    mark: 'point',\n    encoding: {\n      x: { field: 'Horsepower', type: 'quantitative' },\n      y: { field: 'Miles_per_Gallon', type: 'quantitative' }\n    }\n  },\n\n  {\n    data: { url: 'https://vega.github.io/editor/data/population.json' },\n    transform: [{ filter: 'datum.year == 2000' }],\n    mark: 'bar',\n    encoding: {\n      y: {\n        field: 'age',\n        type: 'ordinal',\n        scale: { rangeStep: 17 }\n      },\n      x: {\n        aggregate: 'sum',\n        field: 'people',\n        type: 'quantitative',\n        axis: { title: 'population' }\n      }\n    }\n  }\n];\n\nexport const VegaLiteEditor: React.FC<IVegaLiteEditorProps> = ({\n  showModal,\n  setShowModal,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  onSuccess\n}) => {\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const stringToSpec = (value: string) => {\n    try {\n      const json = JSON.parse(value);\n      if (!('data' in json) || !('url' in json.data)) {\n        return failure('data field must exist and must be url.');\n      }\n\n      // TODO: can we do anything with the output of the compilation?\n      // currently we only call it for side-effect (to see if it errors or not)\n      vl.compile(json);\n      return success(json);\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        return failure(e.message);\n      } else if (e.message === 'Invalid spec') {\n        return failure(e.message);\n      } else {\n        throw e;\n      }\n    }\n  };\n\n  const handleClose = (toSave: boolean) => {\n    if (toSave) {\n      const result = stringToSpec(value);\n      switch (result.tag) {\n        case 'success':\n          setErrorMsg('');\n          onSuccess(alias, result.value);\n          setShowModal(false);\n          return;\n        case 'failure':\n          setErrorMsg(result.value);\n          // NOTE: this does not close the dialog\n          return;\n      }\n    } else {\n      setErrorMsg('');\n      setShowModal(false);\n      return;\n    }\n  };\n\n  const extras = examples.map((example, i) => (\n    <Button key={i} onClick={() => setValue(stringify(example))}>\n      Example {i + 1}\n    </Button>\n  ));\n\n  return (\n    <PopupEditor\n      isOpen={showModal}\n      onClose={handleClose}\n      value={value}\n      setValue={setValue}\n      alias={alias}\n      setAlias={setAlias}\n      errorMsg={errorMsg}\n      extras={extras}\n    />\n  );\n};\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface ITooltipTableProps {\n  table: string[][];\n  children: any;\n}\n\nconst useStyles = makeStyles(_ => ({\n  keyColumn: { textAlign: 'right' }\n}));\n\nexport const TooltipTable: React.FC<ITooltipTableProps> = ({\n  table,\n  children\n}) => {\n  const classes = useStyles();\n  const title = (\n    <table>\n      <tbody>\n        {table.map(([key, val]) => (\n          <tr key={key}>\n            <td className={classes.keyColumn}>\n              <strong>{key}</strong>:\n            </td>\n            <td>{val}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <Tooltip placement=\"top\" title={title}>\n      {children}\n    </Tooltip>\n  );\n};\n","import React from 'react';\nexport const AppDispatch = React.createContext(\n  (null as unknown) as React.Dispatch<React.ReducerAction<Reducer>>\n);\n","import React, { useState, useContext } from 'react';\nimport shallowequal from 'shallowequal';\nimport VegaLite from 'react-vega-lite';\nimport Vega from 'react-vega';\nimport stringify from 'json-stringify-pretty-compact';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { TooltipTable } from './TooltipTable';\nimport Fab from '@material-ui/core/Fab';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AppDispatch } from '../contexts';\nimport { sidebarWidth } from '../variables';\n\nexport interface ISpecPreviewProps {\n  spec: IBaseSpec;\n  active: boolean;\n  onToggleActive: () => void;\n}\n\nexport const MemoizedVegaLite = React.memo(\n  VegaLite,\n  ({ spec: xSpec, ...xRest }, { spec: ySpec, ...yRest }) => {\n    return shallowequal(xRest, yRest) && Vega.isSameSpec(xSpec, ySpec);\n  }\n);\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    height: sidebarWidth,\n    '&::after': {\n      display: 'block',\n      position: 'relative',\n      marginTop: '-57%',\n      width: sidebarWidth,\n      backgroundImage:\n        'linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.75))',\n      height: '75%',\n      content: \"''\"\n    }\n  },\n  image: {\n    overflow: 'hidden',\n    height: sidebarWidth\n  },\n  preview: {\n    position: 'relative',\n    userSelect: 'none',\n    border: 1,\n    borderColor: ((active: boolean) => (active ? 'orange' : 'white')) as any,\n    borderStyle: 'solid'\n  },\n  center: {\n    position: 'absolute',\n    left: '50%',\n    transform: 'translate(-50%, 0)'\n  },\n  top: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    '& button': {\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(1)\n    }\n  },\n  bottom: {\n    bottom: 10,\n    color: 'white'\n  }\n}));\n\nexport const SpecPreview: React.FC<ISpecPreviewProps> = ({\n  spec,\n  onToggleActive,\n  active\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const handleModify = () => {\n    setCurrentSpec(stringify(spec.spec));\n    setCurrentAlias(spec.alias);\n    setShowModal(true);\n  };\n\n  const dispatch = useContext(AppDispatch);\n\n  const handleDelete = () => {\n    dispatch({ type: 'delete-spec', id: spec.id });\n  };\n\n  const handleSuccess = (alias: string, json: any) => {\n    dispatch({ type: 'modify-spec', json, alias, id: spec.id });\n  };\n\n  const classes = useStyles(active);\n\n  return (\n    <>\n      <ListItem\n        disableGutters\n        className={classes.preview}\n        onClick={onToggleActive}\n      >\n        <TooltipTable\n          table={[\n            ['Data URL', spec.spec.data.url],\n            ['Mark Type', spec.spec.mark]\n          ]}\n        >\n          <div className={classes.wrapper}>\n            <div className={classes.image}>\n              <MemoizedVegaLite\n                spec={spec.spec}\n                width={sidebarWidth}\n                height={sidebarWidth}\n              />\n            </div>\n          </div>\n        </TooltipTable>\n\n        <div className={classes.top}>\n          <Fab size=\"small\" color=\"primary\" onClick={handleModify}>\n            <Edit />\n          </Fab>\n          <Fab size=\"small\" color=\"secondary\" onClick={handleDelete}>\n            <Delete />\n          </Fab>\n        </div>\n\n        <div className={classes.center + ' ' + classes.bottom}>\n          {spec.alias}\n        </div>\n      </ListItem>\n      <Divider />\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","export const sidebarWidth = 150;\n","import React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nimport { SpecPreview } from './SpecPreview';\n\nexport interface INavigationBarProps {\n  specs: IBaseSpec[];\n}\n\nconst useStyles = makeStyles(_ => ({\n  list: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexGrow: 1,\n    paddingTop: 0,\n    paddingBottom: 0\n  }\n}));\n\nexport const NavigationBar: React.FC<INavigationBarProps> = ({ specs }) => {\n  const [activePreview, setActivePreview] = useState<number | null>(null);\n\n  const handleToggleActive = (id: number) => () =>\n    setActivePreview(activePreview === id ? null : id);\n\n  const classes = useStyles();\n\n  return (\n    <List className={classes.list}>\n      <Divider />\n      {specs.map(spec => (\n        <SpecPreview\n          key={spec.id}\n          spec={spec}\n          active={spec.id === activePreview}\n          onToggleActive={handleToggleActive(spec.id)}\n        />\n      ))}\n    </List>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport PlaylistAdd from '@material-ui/icons/PlaylistAdd';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AppDispatch } from '../contexts';\nimport { VegaLiteEditor } from './VegaLiteEditor';\n\nconst useStyles = makeStyles(theme => ({\n  button: { marginBottom: theme.spacing(1) }\n}));\n\nexport const NewSpec: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const dispatch = useContext(AppDispatch);\n\n  const handleSuccess = (alias: string, json: any) => {\n    dispatch({ type: 'add-spec', json, alias });\n  };\n\n  const handleOpen = () => {\n    setCurrentSpec('');\n    setCurrentAlias('Untitled');\n    setShowModal(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button onClick={handleOpen} className={classes.button}>\n        <PlaylistAdd /> &nbsp; New Spec\n      </Button>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface IMainViewProps {\n  viz: JSX.Element;\n}\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    backgroundColor: theme.palette.grey[200],\n    marginTop: theme.spacing(1),\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\n\nexport const MainView: React.FC<IMainViewProps> = ({ viz }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.main}>\n      {viz}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Undo from '@material-ui/icons/Undo';\nimport Redo from '@material-ui/icons/Redo';\nimport Grid from '@material-ui/core/Grid';\n\nimport { AppDispatch } from '../contexts';\n\ninterface IModeBarProps {\n  mode: Mode;\n}\n\nexport const ModeBar: React.FC<IModeBarProps> = ({ mode }) => {\n  const dispatch = useContext(AppDispatch);\n\n  const handleUndo = () => dispatch({ type: 'undo' });\n  const handleRedo = () => dispatch({ type: 'redo' });\n  const handleSelectMode = (mode: Mode) =>\n    dispatch({ type: 'select-mode', mode });\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <Button onClick={() => handleSelectMode('layer')} disabled={!!mode}>\n          Layer\n        </Button>\n        <Button onClick={() => handleSelectMode('concat')} disabled={!!mode}>\n          Concat\n        </Button>\n        <Button onClick={() => handleSelectMode('repeat')} disabled={!!mode}>\n          Repeat\n        </Button>\n        <Button onClick={() => handleSelectMode('facet')} disabled={!!mode}>\n          Facet\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button onClick={handleUndo}>\n          <Undo /> &nbsp; Undo\n        </Button>\n        <Button onClick={handleRedo}>\n          <Redo /> &nbsp; Redo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import * as R from 'ramda';\n\nconst newGlobalState = (\n  oldState: IGlobalState,\n  getCurrent: (current: IState) => IState\n) => {\n  return {\n    current: getCurrent(oldState.current),\n    undoStack: R.prepend(oldState.current, oldState.undoStack),\n    redoStack: []\n  };\n};\n\nexport const reducer: Reducer = (globalState, action) => {\n  switch (action.type) {\n    case 'add-spec':\n      return newGlobalState(globalState, ({ specs, specCount, ...rest }) => ({\n        specs: R.append(\n          { id: specCount, spec: action.json, alias: action.alias },\n          specs\n        ),\n        specCount: specCount + 1,\n        ...rest\n      }));\n\n    case 'modify-spec':\n      return newGlobalState(\n        globalState,\n        R.over(\n          R.lensProp('specs'),\n          R.map(\n            (spec: IBaseSpec) =>\n              spec.id === action.id\n                ? { id: action.id, spec: action.json, alias: action.alias }\n                : spec\n          )\n        )\n      );\n    case 'delete-spec':\n      return newGlobalState(\n        globalState,\n        R.over(\n          R.lensProp('specs'),\n          R.filter((spec: IBaseSpec) => spec.id !== action.id)\n        )\n      );\n    case 'undo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (undoStack.length > 0) {\n        return {\n          redoStack: R.prepend(current, redoStack),\n          current: undoStack[0],\n          undoStack: undoStack.slice(1)\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'redo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (redoStack.length > 0) {\n        return {\n          redoStack: redoStack.slice(1),\n          current: redoStack[0],\n          undoStack: R.prepend(current, undoStack)\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'select-mode': {\n      if (!globalState.current.mode) {\n        return newGlobalState(\n          globalState,\n          R.over(R.lensProp('mode'), _ => action.mode)\n        );\n      } else {\n        return globalState;\n      }\n    }\n    default:\n      throw new Error('impossible');\n  }\n};\n","import React, { useState, useReducer } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { NavigationBar } from './components/NavigationBar';\nimport { NewSpec } from './components/NewSpec';\nimport { MainView } from './components/MainView';\nimport { ModeBar } from './components/ModeBar';\nimport { sidebarWidth } from './variables';\nimport { AppDispatch } from './contexts';\nimport { reducer } from './reducer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 600,\n    display: 'flex'\n  },\n  left: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    width: sidebarWidth,\n    marginRight: theme.spacing(1)\n  },\n  right: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer<Reducer>(reducer, {\n    current: {\n      specs: [],\n      specCount: 0,\n      mode: 'initial',\n      mainViewElements: null\n    },\n    undoStack: [],\n    redoStack: []\n  });\n  const [viz, setViz] = useState<JSX.Element>(<div>Empty View</div>);\n\n  const classes = useStyles();\n\n  return (\n    <AppDispatch.Provider value={dispatch}>\n      <div className={classes.root}>\n        <div className={classes.left}>\n          <NewSpec />\n          <NavigationBar specs={state.current.specs} />\n        </div>\n        <div className={classes.right}>\n          <ModeBar mode={state.current.mode} />\n          <MainView viz={viz} />\n        </div>\n      </div>\n    </AppDispatch.Provider>\n  );\n};\n\nexport default hot(module)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}