{"version":3,"sources":["App.scss","components/FakeButton.tsx","components/PopupEditor.tsx","utils.ts","components/VegaLiteEditor.tsx","components/TooltipTable.tsx","components/SpecPreview.tsx","components/NavigationBar.tsx","components/NewSpec.tsx","components/MainView.tsx","components/ModeBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","previewWidth","FakeButton","_ref","onClick","children","react_default","a","createElement","className","ReactModal","setAppElement","useStyles","makeStyles","theme","textField","marginTop","spacing","marginBottom","width","PopupEditor","isOpen","onClose","contentLabel","value","setValue","alias","setAlias","errorMsg","extras","classes","lib_default","FakeButton_FakeButton","dist","TextField","id","label","onChange","event","target","margin","react_monaco_editor_lib_default","language","txt","editorDidMount","editor","focus","options","automaticLayout","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","failure","x","tag","examples","data","url","mark","encoding","field","type","y","transform","filter","scale","rangeStep","aggregate","axis","title","VegaLiteEditor","showModal","setShowModal","onSuccess","_useState","useState","_useState2","Object","slicedToArray","setErrorMsg","map","example","i","key","stringify","PopupEditor_PopupEditor","toSave","result","json","JSON","parse","vl","e","SyntaxError","message","stringToSpec","TooltipTable","react_tooltip_dist_default","effect","_ref2","_ref3","val","MemoizedVegaLite","React","memo","VegaLite","SpecPreview","spec","active","onActivate","onModify","onDelete","_useState3","_useState4","currentSpec","setCurrentSpec","_useState5","_useState6","currentAlias","setCurrentAlias","Fragment","classNames","preview","data-tip","data-for","height","TooltipTable_TooltipTable","VegaLiteEditor_VegaLiteEditor","NavigationBar","specs","activePreview","setActivePreview","SpecPreview_SpecPreview","NewSpec","onAdd","MainView","ModeBar","onUndo","onRedo","App","specCount","states","setStates","redoStack","setRedoStack","addState","state","R","NewSpec_NewSpec","_states$","NavigationBar_NavigationBar","ModeBar_ModeBar","length","slice","MainView_MainView","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e53c03a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewWidth\":\"150\"};","import React from 'react';\n\nexport interface ISpecPreviewProps {\n  onClick: () => void;\n}\n\nexport const FakeButton: React.FC<ISpecPreviewProps> = ({\n  onClick,\n  children\n}) => {\n  return (\n    <div className=\"fake-button\" onClick={onClick}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport MonacoEditor, { EditorDidMount } from 'react-monaco-editor';\nimport { FakeButton } from './FakeButton';\nimport { X, Save } from 'react-feather';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\n\nReactModal.setAppElement('#root');\n\nexport interface IPopupEditorProps {\n  isOpen: boolean;\n  onClose: (toSave: boolean) => void;\n  contentLabel: string;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  errorMsg?: string;\n  extras: React.ReactNode[];\n}\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(4),\n    width: 300,\n  },\n}));\n\nexport const PopupEditor: React.FC<IPopupEditorProps> = ({\n  isOpen,\n  onClose,\n  contentLabel,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  errorMsg,\n  extras\n}) => {\n  const classes = useStyles();\n\n  const handleEditorDidMount: EditorDidMount = editor => editor.focus();\n\n  return (\n    <ReactModal isOpen={isOpen} contentLabel={contentLabel} className=\"modal\">\n      <div className=\"modal-toolbar\">\n        <div className=\"modal-buttons\">\n          <FakeButton onClick={() => onClose(false)}>\n            <X />\n            &nbsp; Close\n          </FakeButton>\n          <FakeButton onClick={() => onClose(true)}>\n            <Save />\n            &nbsp; Save\n          </FakeButton>\n          {extras}\n        </div>\n        <span className=\"error-msg\">{errorMsg ? errorMsg : null}</span>\n      </div>\n      <TextField\n        id=\"standard-name\"\n        label=\"Name\"\n        className={classes.textField}\n        value={alias}\n        onChange={event => setAlias(event.target.value)}\n        margin=\"normal\"\n      />\n      <div className=\"editor\">\n        <MonacoEditor\n          language=\"json\"\n          value={value}\n          onChange={txt => setValue(txt)}\n          editorDidMount={handleEditorDidMount}\n          options={{\n            automaticLayout: true,\n            cursorBlinking: 'smooth',\n            folding: true,\n            lineNumbersMinChars: 4,\n            minimap: { enabled: false },\n            scrollBeyondLastLine: false,\n            wordWrap: 'on'\n          }}\n        />\n      </div>\n    </ReactModal>\n  );\n};\n","export const success = <T>(x: T): Success<T> => ({ tag: 'success', value: x });\nexport const failure = <T>(x: T): Failure<T> => ({ tag: 'failure', value: x });\nexport const last = <T>(xs: T[]) => xs[xs.length - 1];\n","import React, { useState } from 'react';\nimport { PopupEditor } from './PopupEditor';\nimport { success, failure } from '../utils';\nimport * as vl from 'vega-lite';\nimport stringify from 'json-stringify-pretty-compact';\nimport { FakeButton } from './FakeButton';\n\nexport interface IVegaLiteEditorProps {\n  showModal: boolean;\n  setShowModal: (val: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  contentLabel: string;\n  onSuccess: (alias: string, json: any) => void;\n}\n\nconst examples = [\n  {\n    data: { url: 'https://vega.github.io/editor/data/cars.json' },\n    mark: 'point',\n    encoding: {\n      x: { field: 'Horsepower', type: 'quantitative' },\n      y: { field: 'Miles_per_Gallon', type: 'quantitative' }\n    }\n  },\n\n  {\n    data: { url: 'https://vega.github.io/editor/data/population.json' },\n    transform: [{ filter: 'datum.year == 2000' }],\n    mark: 'bar',\n    encoding: {\n      y: {\n        field: 'age',\n        type: 'ordinal',\n        scale: { rangeStep: 17 }\n      },\n      x: {\n        aggregate: 'sum',\n        field: 'people',\n        type: 'quantitative',\n        axis: { title: 'population' }\n      }\n    }\n  }\n];\n\nexport const VegaLiteEditor: React.FC<IVegaLiteEditorProps> = ({\n  showModal,\n  setShowModal,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  contentLabel,\n  onSuccess\n}) => {\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const stringToSpec = (value: string) => {\n    try {\n      const json = JSON.parse(value);\n      if (!('data' in json) || !('url' in json.data)) {\n        return failure('data field must exist and must be url.');\n      }\n\n      // TODO: can we do anything with the output of the compilation?\n      // currently we only call it for side-effect (to see if it errors or not)\n      vl.compile(json);\n      return success(json);\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        return failure(e.message);\n      } else if (e.message === 'Invalid spec') {\n        return failure(e.message);\n      } else {\n        throw e;\n      }\n    }\n  };\n\n  const handleClose = (toSave: boolean) => {\n    if (toSave) {\n      const result = stringToSpec(value);\n      switch (result.tag) {\n        case 'success':\n          setErrorMsg('');\n          onSuccess(alias, result.value);\n          setShowModal(false);\n          return;\n        case 'failure':\n          setErrorMsg(result.value);\n          // NOTE: this does not close the dialog\n          return;\n      }\n    } else {\n      setErrorMsg('');\n      setShowModal(false);\n      return;\n    }\n  };\n\n  const extras = examples.map((example, i) => (\n    <FakeButton key={i} onClick={() => setValue(stringify(example))}>\n      Example {i + 1}\n    </FakeButton>\n  ));\n\n  return (\n    <PopupEditor\n      isOpen={showModal}\n      contentLabel={contentLabel}\n      onClose={handleClose}\n      value={value}\n      setValue={setValue}\n      alias={alias}\n      setAlias={setAlias}\n      errorMsg={errorMsg}\n      extras={extras}\n    />\n  );\n};\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nexport interface ITooltipTableProps {\n  id: string;\n  children: string[][];\n}\n\nexport const TooltipTable: React.FC<ITooltipTableProps> = ({\n  id,\n  children\n}) => (\n  <ReactTooltip effect=\"solid\" id={id}>\n    <table className=\"tooltip-table\">\n      {children.map(([key, val]) => (\n        <tr>\n          <td>\n            <strong>{key}</strong>:\n          </td>\n          <td>{val}</td>\n        </tr>\n      ))}\n    </table>\n  </ReactTooltip>\n);\n","import React, { useState } from 'react';\nimport VegaLite from 'react-vega-lite';\nimport classNames from 'classnames';\nimport stringify from 'json-stringify-pretty-compact';\nimport { Edit, Trash2 } from 'react-feather';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { FakeButton } from './FakeButton';\nimport { previewWidth } from '../App.scss';\nimport { TooltipTable } from './TooltipTable';\n\nexport interface ISpecPreviewProps {\n  spec: RawSpec;\n  active: boolean;\n  onActivate: () => void;\n  onModify: (alise: string, json: any) => void;\n  onDelete: () => void;\n}\n\nconst MemoizedVegaLite = React.memo(VegaLite);\n\nexport const SpecPreview: React.FC<ISpecPreviewProps> = ({\n  spec,\n  active,\n  onActivate,\n  onModify,\n  onDelete\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const handleModify = () => {\n    setCurrentSpec(stringify(spec.spec));\n    setCurrentAlias(spec.alias);\n    setShowModal(true);\n  };\n\n  const handleDelete = () => {\n    onDelete();\n  };\n\n  return (\n    <>\n      <div\n        className={classNames({ active: active, preview: true })}\n        onClick={onActivate}\n      >\n        <div className=\"preview-image\" data-tip data-for={spec.id + ''}>\n          <MemoizedVegaLite\n            spec={spec.spec}\n            width={+previewWidth}\n            height={+previewWidth}\n          />\n        </div>\n\n        <TooltipTable id={spec.id + ''}>\n          {[['Data URL', spec.spec.data.url], ['Mark Type', spec.spec.mark]]}\n        </TooltipTable>\n\n        <div className=\"preview-side\">\n          <FakeButton onClick={handleModify}>\n            <Edit />\n          </FakeButton>\n          <FakeButton onClick={handleDelete}>\n            <Trash2 />\n          </FakeButton>\n        </div>\n      </div>\n      <div>{spec.alias}</div>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        contentLabel=\"Modify Spec\"\n        onSuccess={onModify}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { SpecPreview } from './SpecPreview';\n\nexport interface INavigationBarProps {\n  specs: RawSpec[];\n  onModify: (id: number) => (alias: string, json: any) => void;\n  onDelete: (id: number) => () => void;\n}\n\nexport const NavigationBar: React.FC<INavigationBarProps> = ({\n  specs,\n  onModify,\n  onDelete\n}) => {\n  const [activePreview, setActivePreview] = useState<number | null>(null);\n\n  const handleActivate = (id: number) => () =>\n    setActivePreview(activePreview === id ? null : id);\n\n  return (\n    <div className=\"nav-bar\">\n      {specs.map(spec => (\n        <SpecPreview\n          key={spec.id}\n          spec={spec}\n          active={spec.id === activePreview}\n          onActivate={handleActivate(spec.id)}\n          onModify={onModify(spec.id)}\n          onDelete={onDelete(spec.id)}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { FakeButton } from './FakeButton';\n\nexport interface INewSpecProps {\n  onAdd: (alias: string, json: any) => void;\n}\n\nexport const NewSpec: React.FC<INewSpecProps> = ({ onAdd }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const handleOpen = () => {\n    setCurrentSpec('');\n    setCurrentAlias('');\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <div className=\"new-spec\">\n        <FakeButton onClick={handleOpen}>\n          <Plus className=\"preview-icon\" />\n          &nbsp; New Spec\n        </FakeButton>\n      </div>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        contentLabel=\"New Spec\"\n        onSuccess={onAdd}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const MainView: React.FC = () => {\n  return <div className=\"main-view\" />;\n};\n","import React, { useState } from 'react';\nimport { RotateCcw, RotateCw } from 'react-feather';\nimport { FakeButton } from './FakeButton';\n\ninterface IModeBarProps {\n  onUndo: () => void;\n  onRedo: () => void;\n}\n\nexport const ModeBar: React.FC<IModeBarProps> = ({ onUndo, onRedo }) => {\n  const [currentMode, setCurrentMode] = useState('');\n\n  return (\n    <div className=\"mode-bar\">\n      <div className=\"mode-group\">\n        <FakeButton onClick={(() => { })}>Layer</FakeButton>\n        <FakeButton onClick={(() => { })}>Concat</FakeButton>\n        <FakeButton onClick={(() => { })}>Repeat</FakeButton>\n        <FakeButton onClick={(() => { })}>Facet</FakeButton>\n      </div>\n      <div className=\"undo-redo-group\">\n        <FakeButton onClick={onUndo}>\n          <RotateCcw />\n          &nbsp; Undo\n        </FakeButton>\n        <FakeButton onClick={onRedo}>\n          <RotateCw />\n          &nbsp; Redo\n        </FakeButton>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport * as R from 'ramda';\nimport { NavigationBar } from './components/NavigationBar';\nimport { NewSpec } from './components/NewSpec';\nimport { MainView } from './components/MainView';\nimport { ModeBar } from './components/ModeBar';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const [states, setStates] = useState<State[]>([{ specs: [], specCount: 0 }]);\n  const [redoStack, setRedoStack] = useState<State[]>([]);\n\n  const addState = (state: State) => {\n    setStates(R.prepend(state, states));\n    setRedoStack([]);\n  };\n\n  const handleAddSpec = (alias: string, json: any) => {\n    const { specs, specCount } = states[0];\n    addState({\n      specs: R.append({ id: specCount, spec: json, alias }, specs),\n      specCount: specCount + 1,\n    });\n  };\n\n  const handleModifySpec = (id: number) => (alias: string, json: any) => {\n    addState(\n      R.over(\n        R.lensProp('specs'),\n        (specs: RawSpec[]) =>\n          specs.map(spec => (spec.id === id ? { id, spec: json, alias } : spec)),\n        states[0]\n      )\n    );\n  };\n\n  const handleDeleteSpec = (id: number) => () => {\n    addState(\n      R.over(\n        R.lensProp('specs'),\n        (specs: RawSpec[]) => specs.filter(spec => spec.id !== id),\n        states[0]\n      )\n    );\n  };\n\n  const handleUndo = () => {\n    if (states.length > 1) {\n      setRedoStack(R.prepend(states[0], redoStack));\n      setStates(states.slice(1));\n    }\n  };\n\n  const handleRedo = () => {\n    if (redoStack.length > 0) {\n      setStates(R.prepend(redoStack[0], states));\n      setRedoStack(redoStack.slice(1));\n    }\n  };\n\n  return (\n    <div id=\"main\">\n      <div className=\"left-side\">\n        <NewSpec onAdd={handleAddSpec} />\n        <NavigationBar\n          specs={states[0].specs}\n          onModify={handleModifySpec}\n          onDelete={handleDeleteSpec}\n        />\n      </div>\n      <div className=\"right-side\">\n        <ModeBar onUndo={handleUndo} onRedo={handleRedo} />\n        <MainView />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}