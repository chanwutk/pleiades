{"version":3,"sources":["App.scss","utils.ts","components/FakeButton.tsx","components/PopupEditor.tsx","components/VegaLiteEditor.tsx","components/SpecPreview.tsx","components/NavigationBar.tsx","components/NewSpec.tsx","components/MainView.tsx","components/ModeBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","previewWidth","failure","x","tag","value","last","xs","length","FakeButton","_ref","onClick","children","react_default","a","createElement","className","ReactModal","setAppElement","examples","$schema","description","data","values","b","mark","encoding","field","type","y","url","transform","filter","scale","rangeStep","aggregate","axis","title","PopupEditor","isOpen","onClose","contentLabel","setValue","errorMsg","lib_default","FakeButton_FakeButton","dist","map","example","i","key","stringify","react_monaco_editor_lib_default","language","onChange","txt","editorDidMount","editor","focus","options","automaticLayout","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","VegaLiteEditor","showModal","setShowModal","onSuccess","_useState","useState","_useState2","Object","slicedToArray","setErrorMsg","PopupEditor_PopupEditor","toSave","result","json","JSON","parse","vl","e","SyntaxError","message","stringToSpec","MemoizedVegaLite","React","memo","VegaLite","SpecPreview","spec","active","onActivate","onModify","onDelete","_useState3","_useState4","currentSpec","setCurrentSpec","Fragment","classNames","preview","width","height","VegaLiteEditor_VegaLiteEditor","NavigationBar","specs","activePreview","setActivePreview","SpecPreview_SpecPreview","id","NewSpec","onAdd","MainView","ModeBar","onUndo","App","specCount","states","setStates","NewSpec_NewSpec","_last","concat","NavigationBar_NavigationBar","_last2","_last3","ModeBar_ModeBar","slice","MainView_MainView","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de51b832.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewWidth\":\"150\"};","export const success = <T>(x: T): Success<T> => ({ tag: 'success', value: x });\nexport const failure = <T>(x: T): Failure<T> => ({ tag: 'failure', value: x });\nexport const last = <T>(xs: T[]) => xs[xs.length - 1];\n","import React from 'react';\n\nexport interface ISpecPreviewProps {\n  onClick: () => void;\n}\n\nexport const FakeButton: React.FC<ISpecPreviewProps> = ({ onClick, children }) => {\n  return (\n    <div className=\"fake-button\" onClick={onClick}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport MonacoEditor, {\n  EditorDidMount,\n} from 'react-monaco-editor';\nimport stringify from 'json-stringify-pretty-compact';\nimport { FakeButton } from './FakeButton';\nimport { X, Save } from 'react-feather';\n\nReactModal.setAppElement('#root');\n\nexport interface IPopupEditorProps {\n  isOpen: boolean;\n  onClose: (toSave: boolean) => void;\n  contentLabel: string;\n  value: string;\n  setValue: (txt: string) => void;\n  errorMsg?: string;\n}\n\nconst examples = [\n  {\n    \"$schema\": \"https://vega.github.io/schema/vega-lite/v3.json\",\n    \"description\": \"A simple bar chart with embedded data.\",\n    \"data\": {\n      \"values\": [\n        { \"a\": \"A\", \"b\": 28 }, { \"a\": \"B\", \"b\": 55 }, { \"a\": \"C\", \"b\": 43 },\n        { \"a\": \"D\", \"b\": 91 }, { \"a\": \"E\", \"b\": 81 }, { \"a\": \"F\", \"b\": 53 },\n        { \"a\": \"G\", \"b\": 19 }, { \"a\": \"H\", \"b\": 87 }, { \"a\": \"I\", \"b\": 52 }\n      ]\n    },\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"x\": { \"field\": \"a\", \"type\": \"ordinal\" },\n      \"y\": { \"field\": \"b\", \"type\": \"quantitative\" }\n    }\n  },\n\n  {\n    \"$schema\": \"https://vega.github.io/schema/vega-lite/v3.json\",\n    \"description\": \"A bar chart showing the US population distribution of age groups in 2000.\",\n    \"data\": { \"url\": \"https://vega.github.io/editor/data/population.json\" },\n    \"transform\": [{ \"filter\": \"datum.year == 2000\" }],\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"y\": {\n        \"field\": \"age\", \"type\": \"ordinal\",\n        \"scale\": { \"rangeStep\": 17 }\n      },\n      \"x\": {\n        \"aggregate\": \"sum\", \"field\": \"people\", \"type\": \"quantitative\",\n        \"axis\": { \"title\": \"population\" }\n      }\n    }\n  }\n\n]\n\nexport const PopupEditor: React.FC<IPopupEditorProps> = ({\n  isOpen,\n  onClose,\n  contentLabel,\n  value,\n  setValue,\n  errorMsg\n}) => {\n  const handleEditorDidMount: EditorDidMount = editor => {\n    editor.focus();\n  };\n\n  return (\n    <ReactModal isOpen={isOpen} contentLabel={contentLabel} className=\"modal\">\n      <div className=\"modal-toolbar\">\n        <div className=\"modal-buttons\">\n          <FakeButton onClick={() => onClose(false)}>\n            <X />\n            &nbsp; Close\n          </FakeButton>\n          <FakeButton onClick={() => onClose(true)}>\n            <Save />\n            &nbsp; Save\n          </FakeButton>\n          {\n            examples.map((example, i) => (\n              <FakeButton key={i} onClick={() => setValue(stringify(example))}>\n                Example {i + 1}\n              </FakeButton>\n            ))\n          }\n        </div>\n        <span className=\"error-msg\">\n          {errorMsg ? errorMsg : null}\n        </span>\n      </div>\n      <div className=\"editor\">\n        <MonacoEditor\n          language=\"json\"\n          value={value}\n          onChange={txt => setValue(txt)}\n          editorDidMount={handleEditorDidMount}\n          options={{\n            automaticLayout: true,\n            cursorBlinking: 'smooth',\n            folding: true,\n            lineNumbersMinChars: 4,\n            minimap: { enabled: false },\n            scrollBeyondLastLine: false,\n            wordWrap: 'on',\n          }}\n        />\n      </div>\n    </ReactModal>\n  );\n};\n","import React, { useState } from 'react';\nimport { PopupEditor } from './PopupEditor';\nimport { success, failure } from '../utils';\nimport * as vl from 'vega-lite';\n\nexport interface IVegaLiteEditorProps {\n  showModal: boolean;\n  setShowModal: (val: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  contentLabel: string;\n  onSuccess: (json: any) => void;\n}\n\nexport const VegaLiteEditor: React.FC<IVegaLiteEditorProps> = ({ showModal, setShowModal, value, setValue, contentLabel, onSuccess }) => {\n\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const stringToSpec = (value: string) => {\n    try {\n      const json = JSON.parse(value);\n      if (!('data' in json)) {\n        return failure('data field must exist.');\n      }\n\n      // TODO: can we do anything with the output of the compilation?\n      // currently we only call it for side-effect (to see if it errors or not)\n      vl.compile(json);\n      return success(json);\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        return failure(e.message);\n      } else if (e.message === 'Invalid spec') {\n        return failure(e.message);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  const handleClose = (toSave: boolean) => {\n    if (toSave) {\n      const result = stringToSpec(value);\n      switch (result.tag) {\n        case 'success':\n          setErrorMsg('');\n          onSuccess(result.value);\n          setShowModal(false); return;\n        case 'failure':\n          setErrorMsg(result.value);\n          // NOTE: this does not close the dialog\n          return;\n      }\n    } else {\n      setErrorMsg('');\n      setShowModal(false); return;\n    }\n  }\n\n  return (\n    <PopupEditor\n      isOpen={showModal}\n      contentLabel={contentLabel}\n      onClose={handleClose}\n      value={value}\n      setValue={setValue}\n      errorMsg={errorMsg}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport VegaLite from 'react-vega-lite';\nimport classNames from 'classnames';\nimport stringify from 'json-stringify-pretty-compact';\nimport { Edit, Trash2 } from 'react-feather';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { FakeButton } from './FakeButton';\nimport { previewWidth } from '../App.scss';\n\nexport interface ISpecPreviewProps {\n  spec: RawSpec;\n  active: boolean;\n  onActivate: () => void;\n  onModify: (json: any) => void;\n  onDelete: () => void;\n}\n\nconst MemoizedVegaLite = React.memo(VegaLite);\n\nexport const SpecPreview: React.FC<ISpecPreviewProps> = ({\n  spec,\n  active,\n  onActivate,\n  onModify,\n  onDelete\n}) => {\n\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n\n  const handleModify = () => {\n    setCurrentSpec(stringify(spec.spec));\n    setShowModal(true);\n  };\n\n  const handleDelete = () => {\n    onDelete();\n  };\n\n  return (\n    <>\n      <div\n        className={classNames({\n          'active': active,\n          'preview': true\n        })}\n        onClick={onActivate} >\n        <div className=\"preview-image\">\n          <MemoizedVegaLite\n            spec={spec.spec}\n            width={+previewWidth}\n            height={+previewWidth}\n          />\n        </div>\n        <div className=\"preview-side\">\n          <FakeButton onClick={handleModify}>\n            <Edit />\n          </FakeButton>\n          <FakeButton onClick={handleDelete} >\n            <Trash2 />\n          </FakeButton>\n        </div>\n      </div>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        contentLabel=\"Modify Spec\"\n        onSuccess={onModify}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n      />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { SpecPreview } from './SpecPreview';\n\nexport interface INavigationBarProps {\n  specs: RawSpec[];\n  onModify: (id: number) => (json: any) => void;\n  onDelete: (id: number) => () => void;\n}\n\nexport const NavigationBar: React.FC<INavigationBarProps> = ({ specs, onModify, onDelete }) => {\n  const [activePreview, setActivePreview] = useState(null);\n\n  const handleActivate = id => () => {\n    if (activePreview === id) {\n      setActivePreview(null);\n    } else {\n      setActivePreview(id);\n    }\n  }\n\n  return (\n    <div className=\"nav-bar\">\n      {specs.map((spec) => (\n        <SpecPreview\n          key={spec.id}\n          spec={spec}\n          active={spec.id === activePreview}\n          onActivate={handleActivate(spec.id)}\n          onModify={onModify(spec.id)}\n          onDelete={onDelete(spec.id)}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { FakeButton } from './FakeButton';\n\nexport interface INewSpecProps {\n  onAdd: (json: any) => void;\n}\n\nexport const NewSpec: React.FC<INewSpecProps> = ({ onAdd }) => {\n\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n\n  const handleOpen = () => {\n    setCurrentSpec('');\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <div className=\"new-spec\">\n        <FakeButton onClick={handleOpen}>\n          <Plus className=\"preview-icon\" />\n          &nbsp; New Spec\n        </FakeButton>\n      </div>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        contentLabel=\"New Spec\"\n        onSuccess={onAdd}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const MainView: React.FC = () => {\n  return (\n    <div className=\"main-view\" />\n  );\n};\n","import React from 'react';\nimport { RotateCcw } from 'react-feather';\nimport { FakeButton } from './FakeButton';\n\ninterface IModeBarProps {\n  onUndo: () => void;\n}\n\nexport const ModeBar: React.FC<IModeBarProps> = ({ onUndo }) => {\n  return (\n    <div className=\"mode-bar\">\n      <FakeButton onClick={onUndo}>\n        <RotateCcw />\n        &nbsp; Undo\n      </FakeButton>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { last } from './utils';\nimport { NavigationBar } from './components/NavigationBar';\nimport { NewSpec } from './components/NewSpec';\nimport { MainView } from './components/MainView';\nimport { ModeBar } from './components/ModeBar';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const [states, setStates] = useState([{ specs: [], specCount: 0 }] as State[]);\n\n  const handleAdd = (json: any) => {\n    const { specs, specCount } = last(states);\n    setStates(states.concat([{\n      specs: specs.concat([{\n        id: specCount,\n        spec: json,\n      }]),\n      specCount: specCount + 1\n    }]));\n  };\n\n  const handleModify = (id: number) => (json: any) => {\n    const { specs, specCount } = last(states);\n    setStates(states.concat([{\n      specs: specs.map(spec => {\n        if (spec.id === id) {\n          return { id, spec: json };\n        } else {\n          return spec;\n        }\n      }),\n      specCount: specCount\n    }]));\n  };\n\n  const handleDelete = (id: number) => () => {\n    const { specs, specCount } = last(states);\n    setStates(states.concat([{\n      specs: specs.filter(spec => spec.id !== id),\n      specCount: specCount\n    }]));\n  }\n\n  const handleUndo = () => {\n    if (states.length > 1) {\n      setStates(states.slice(0, states.length - 1));\n    }\n  }\n\n  return (\n    <div id=\"main\">\n      <div className=\"left-side\">\n        <NewSpec onAdd={handleAdd} />\n        <NavigationBar\n          specs={last(states).specs}\n          onModify={handleModify}\n          onDelete={handleDelete}\n        />\n\n      </div>\n      <div className=\"right-side\">\n        <ModeBar onUndo={handleUndo} />\n        <MainView />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}