{"version":3,"sources":["utils.ts","components/PopupEditor.tsx","components/VegaLiteEditor.tsx","components/TooltipTable.tsx","contexts.ts","components/VegaLite.tsx","components/SpecPreview.tsx","variables.ts","components/NavigationBar.tsx","components/NewSpec.tsx","components/views/ViewComponent.tsx","components/views/UnitComponent.tsx","components/views/LayerComponent.tsx","components/MainView.tsx","components/OperationBar.tsx","SyntaxTree/Utils.ts","SyntaxTree/View.ts","SyntaxTree/LayerView.ts","reducer.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["failure","x","tag","value","addMarkdownProps","key","description","markdownDescription","hasOwnProperty","vegaLiteSchema","useStyles","makeStyles","theme","textField","marginTop","spacing","marginBottom","width","closeButton","position","right","top","errorMessage","fontStyle","color","schema","uri","PopupEditor","_ref","isOpen","onClose","onChange","alias","setAlias","errorMsg","extras","classes","react_default","a","createElement","Dialog","open","aria-labelledby","maxWidth","fullWidth","DialogTitle","disableTypography","TextField","id","label","className","event","target","margin","Button","onClick","Save_default","IconButton","Close_default","DialogContent","lib_default","language","height","editorDidMount","editor","focus","editorWillMount","monaco","languages","json","jsonDefaults","setDiagnosticsOptions","allowComments","enableSchemaRequest","schemas","validate","options","automaticLayout","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","Fragment","examples","$schema","data","url","mark","encoding","field","type","y","transform","filter","scale","rangeStep","aggregate","axis","title","stringToSpec","JSON","parse","vl","e","message","VegaLiteEditor","showModal","setShowModal","setValue","onSuccess","_useState","useState","_useState2","Object","slicedToArray","setErrorMsg","map","example","i","stringify","PopupEditor_PopupEditor","toSave","result","txt","_","keyColumn","textAlign","TooltipTable","table","children","_ref2","_ref3","val","Tooltip","placement","AppDispatch","React","createContext","VegaLite","memo","NativeVegaLite","xSpec","spec","xRest","objectWithoutProperties","ySpec","yRest","shallowequal","Vega","isSameSpec","wrapper","&::after","display","sidebarWidth","backgroundImage","content","bottom","alignSelf","image","overflow","preview","userSelect","marginLeft","marginRight","border","borderColor","active","borderStyle","&:hover","&:active","center","left","& button","SpecPreview","operand1Id","_useState3","_useState4","currentSpec","setCurrentSpec","_useState5","_useState6","currentAlias","setCurrentAlias","_useState7","_useState8","isDeleting","setIsDeleting","dispatch","useContext","ListItem","disableGutters","TooltipTable_TooltipTable","Fab","size","Edit_default","onMouseEnter","onMouseLeave","Delete_default","VegaLiteEditor_VegaLiteEditor","list","overflowY","overflowX","flexGrow","paddingTop","paddingBottom","flexDirection","alignContent","NavigationBar","currentState","List","specs","SpecPreview_SpecPreview","button","NewSpec","PlaylistAdd_default","main","padding","backgroundColor","justifyContent","alignItems","UnitComponent","view","operand2Id","thisId","getId","operandId","export","LayerComponent","palette","grey","MainView","tree","viewHolder","getType","UnitComponent_UnitComponent","LayerComponent_LayerComponent","Error","concat","makeViewComponent","OperationBar","operate","operator","forEach","operand1","layerDisabled","concatDisabled","repeatDisabled","facetDisabled","placeDisabled","Grid","container","justify","item","disabled","Undo_default","Redo_default","jsonCopy","obj","idCounter","View","classCallCheck","this","createClass","ViewHolder","clone","findView","CompositeView","_View","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","UnitView","_View2","_this","call","cloned","_id","LayerView","_CompositeView","layer","l","push","unshift","index","splice","from","to","arr","length","fromElm","moveElement","newGlobalState","oldState","getCurrent","current","undoStack","R","redoStack","reducer","globalState","action","specCount","rest","objectSpread","slice","oldTree","newTree","operand2ViewHolder","operand1View","isCompatible","append","assertNever","initialState","root","App","_useReducer","useReducer","_useReducer2","state","Provider","NewSpec_NewSpec","NavigationBar_NavigationBar","OperationBar_OperationBar","MainView_MainView","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6e0ac44.chunk.js","sourcesContent":["export const success = <T>(x: T): ISuccess<T> => ({ tag: 'success', value: x });\nexport const failure = <T>(x: T): IFailure<T> => ({ tag: 'failure', value: x });\nexport const last = <T>(xs: T[]) => xs[xs.length - 1];\nexport const assertNever = (x: never): never => {\n  throw new Error('Unexpected object: ' + x);\n};\n","import React from 'react';\nimport MonacoEditor, {\n  EditorDidMount,\n  EditorWillMount,\n  DiffChangeHandler,\n} from 'react-monaco-editor';\nimport Close from '@material-ui/icons/Close';\nimport Save from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport vegaLiteSchema from 'vega-lite/build/vega-lite-schema.json';\n\n/**\n * Adds markdownDescription props to a schema. See https://github.com/Microsoft/monaco-editor/issues/885\n */\nconst addMarkdownProps = value => {\n  if (typeof value === 'object' && value !== null) {\n    if (value.description) {\n      value.markdownDescription = value.description;\n    }\n\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        value[key] = addMarkdownProps(value[key]);\n      }\n    }\n  }\n  return value;\n};\n\naddMarkdownProps(vegaLiteSchema);\n\nexport interface IPopupEditorProps {\n  isOpen: boolean;\n  onClose: (toSave: boolean) => void;\n  value: string;\n  onChange: DiffChangeHandler;\n  alias: string;\n  setAlias: (txt: string) => void;\n  errorMsg?: string;\n  extras: React.ReactNode[];\n}\n\nconst editorHeight = 400;\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(4),\n    width: 300,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n  },\n  errorMessage: {\n    fontStyle: 'italic',\n    color: 'red',\n  },\n}));\n\nconst schema = [\n  {\n    schema: vegaLiteSchema,\n    uri: 'https://vega.github.io/schema/vega-lite/v3.json',\n  },\n];\n\nexport const PopupEditor: React.FC<IPopupEditorProps> = ({\n  isOpen,\n  onClose,\n  value,\n  onChange,\n  alias,\n  setAlias,\n  errorMsg,\n  extras,\n}) => {\n  const classes = useStyles();\n\n  const handleEditorDidMount: EditorDidMount = editor => {\n    editor.focus();\n  };\n\n  const handleEditorWillMount: EditorWillMount = monaco => {\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      allowComments: false,\n      enableSchemaRequest: true,\n      schemas: schema,\n      validate: true,\n    });\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"lg\"\n      fullWidth={true}\n    >\n      <DialogTitle disableTypography>\n        <TextField\n          id=\"standard-name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={alias}\n          onChange={event => setAlias(event.target.value)}\n          margin=\"normal\"\n        />\n        <Button onClick={() => onClose(true)}>\n          <Save />\n          &nbsp; Save\n        </Button>\n        {extras}\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => onClose(false)}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className=\"editor\">\n          <MonacoEditor\n            language=\"json\"\n            value={value}\n            height={editorHeight}\n            onChange={onChange}\n            editorDidMount={handleEditorDidMount}\n            editorWillMount={handleEditorWillMount}\n            options={{\n              automaticLayout: true,\n              cursorBlinking: 'smooth',\n              folding: true,\n              lineNumbersMinChars: 4,\n              minimap: { enabled: false },\n              scrollBeyondLastLine: false,\n              wordWrap: 'on',\n            }}\n          />\n        </div>\n        <span className={classes.errorMessage}>\n          {errorMsg !== null ? <>{errorMsg} &nbsp;</> : null}\n        </span>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport * as vl from 'vega-lite';\nimport stringify from 'json-stringify-pretty-compact';\nimport Button from '@material-ui/core/Button';\n\nimport { success, failure } from '../utils';\nimport { PopupEditor } from './PopupEditor';\n\nexport interface IVegaLiteEditorProps {\n  showModal: boolean;\n  setShowModal: (val: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  onSuccess: (alias: string, json: any) => void;\n}\n\nconst examples = [\n  {\n    $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n    data: { url: 'https://vega.github.io/editor/data/cars.json' },\n    mark: 'point',\n    encoding: {\n      x: { field: 'Horsepower', type: 'quantitative' },\n      y: { field: 'Miles_per_Gallon', type: 'quantitative' },\n    },\n  },\n\n  {\n    $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n    data: { url: 'https://vega.github.io/editor/data/population.json' },\n    transform: [{ filter: 'datum.year == 2000' }],\n    mark: 'bar',\n    encoding: {\n      y: {\n        field: 'age',\n        type: 'ordinal',\n        scale: { rangeStep: 17 },\n      },\n      x: {\n        aggregate: 'sum',\n        field: 'people',\n        type: 'quantitative',\n        axis: { title: 'population' },\n      },\n    },\n  },\n];\n\nconst stringToSpec = (value: string) => {\n  try {\n    const json = JSON.parse(value);\n    if (!('data' in json) || !('url' in json.data || 'values' in json.data)) {\n      return failure('data field must exist and must be url.');\n    }\n\n    // TODO: can we do anything with the output of the compilation?\n    // currently we only call it for side-effect (to see if it errors or not)\n    vl.compile(json);\n    return success(json);\n  } catch (e) {\n    return failure(e.message);\n  }\n};\n\nexport const VegaLiteEditor: React.FC<IVegaLiteEditorProps> = ({\n  showModal,\n  setShowModal,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  onSuccess,\n}) => {\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleClose = (toSave: boolean) => {\n    if (toSave) {\n      const result = stringToSpec(value);\n      switch (result.tag) {\n        case 'success':\n          setErrorMsg('');\n          onSuccess(alias, result.value);\n          setShowModal(false);\n          return;\n        case 'failure':\n          setErrorMsg(result.value);\n          // NOTE: this does not close the dialog\n          return;\n      }\n    } else {\n      setErrorMsg('');\n      setShowModal(false);\n      return;\n    }\n  };\n\n  const handleChange = (txt: string) => {\n    // NOTE: need to setValue before setErrorMsg\n    setValue(txt);\n    const result = stringToSpec(txt);\n    switch (result.tag) {\n      case 'success':\n        setErrorMsg('');\n        break;\n      case 'failure':\n        setErrorMsg(result.value);\n        break;\n    }\n  };\n\n  const extras = examples.map((example, i) => (\n    <Button key={i} onClick={() => setValue(stringify(example))}>\n      Example {i + 1}\n    </Button>\n  ));\n\n  return (\n    <PopupEditor\n      isOpen={showModal}\n      onClose={handleClose}\n      value={value}\n      onChange={handleChange}\n      alias={alias}\n      setAlias={setAlias}\n      errorMsg={errorMsg}\n      extras={extras}\n    />\n  );\n};\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface ITooltipTableProps {\n  table: string[][];\n  children: any;\n}\n\nconst useStyles = makeStyles(_ => ({\n  keyColumn: { textAlign: 'right' },\n}));\n\nexport const TooltipTable: React.FC<ITooltipTableProps> = ({\n  table,\n  children,\n}) => {\n  const classes = useStyles();\n  const title = (\n    <table>\n      <tbody>\n        {table.map(([key, val]) => (\n          <tr key={key}>\n            <td className={classes.keyColumn}>\n              <strong>{key}</strong>:\n            </td>\n            <td>{val}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <Tooltip placement=\"top\" title={title}>\n      {children}\n    </Tooltip>\n  );\n};\n","import React from 'react';\nexport const AppDispatch = React.createContext(\n  (null as unknown) as React.Dispatch<React.ReducerAction<Reducer>>\n);\n","import React from 'react';\nimport shallowequal from 'shallowequal';\nimport Vega from 'react-vega';\nimport NativeVegaLite from 'react-vega-lite';\n\nexport const VegaLite = React.memo(\n  NativeVegaLite,\n  ({ spec: xSpec, ...xRest }, { spec: ySpec, ...yRest }) => {\n    return shallowequal(xRest, yRest) && Vega.isSameSpec(xSpec, ySpec);\n  }\n);\n","import React, { useState, useContext } from 'react';\nimport stringify from 'json-stringify-pretty-compact';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { TooltipTable } from './TooltipTable';\nimport Fab from '@material-ui/core/Fab';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AppDispatch } from '../contexts';\nimport { sidebarWidth, borderWidth } from '../variables';\nimport { VegaLite } from './VegaLite';\n\nexport interface ISpecPreviewProps {\n  spec: IBaseSpec;\n  operand1Id: number | null;\n  active: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    height: sidebarWidth,\n    '&::after': {\n      display: 'block',\n      position: 'absolute',\n      width: sidebarWidth - 2 * borderWidth,\n      backgroundImage:\n        'linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.75))',\n      height: '75%',\n      content: \"''\",\n      bottom: 0,\n      alignSelf: 'center',\n    },\n  },\n  image: {\n    overflow: 'hidden',\n    height: sidebarWidth,\n    width: sidebarWidth - 2 * borderWidth,\n  },\n  preview: {\n    position: 'relative',\n    userSelect: 'none',\n    width: sidebarWidth,\n    marginTop: 5,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    border: borderWidth,\n    borderColor: ((active: boolean) =>\n      active ? '#3caea3' : 'lightgrey') as any,\n    borderStyle: 'solid',\n    '&:hover': {\n      borderColor: ((active: boolean) =>\n        active ? '#3caea3' : 'darkgrey') as any,\n    },\n    '&:active': {\n      borderColor: ((active: boolean) => 'grey') as any,\n    },\n  },\n  center: {\n    position: 'absolute',\n    left: '50%',\n    transform: 'translate(-50%, 0)',\n  },\n  top: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    '& button': {\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(1),\n    },\n  },\n  bottom: {\n    bottom: 10,\n    color: 'white',\n  },\n}));\n\nexport const SpecPreview: React.FC<ISpecPreviewProps> = ({\n  spec,\n  operand1Id,\n  active,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const handleModify = () => {\n    setCurrentSpec(stringify(spec.spec));\n    setCurrentAlias(spec.alias);\n    setShowModal(true);\n  };\n\n  const dispatch = useContext(AppDispatch);\n\n  const handleDeleteMouseEnter = () => setIsDeleting(true);\n  const handleDeleteMouseLeave = () => setIsDeleting(false);\n\n  const handleDelete = () => {\n    dispatch({ type: 'delete-spec', id: spec.id });\n  };\n\n  const handleSuccess = (alias: string, json: any) => {\n    dispatch({ type: 'modify-spec', json, alias, id: spec.id });\n  };\n\n  const handleToggleActive = () => {\n    if (!isDeleting) {\n      const { id } = spec;\n      dispatch({ type: 'select-operand1', id: id === operand1Id ? null : id });\n    }\n  };\n\n  const classes = useStyles(active);\n\n  return (\n    <>\n      <ListItem\n        disableGutters\n        className={classes.preview}\n        onClick={handleToggleActive}\n      >\n        <TooltipTable\n          table={[\n            ['Data URL', spec.spec.data.url],\n            ['Mark Type', spec.spec.mark],\n          ]}\n        >\n          <div className={classes.wrapper}>\n            <div className={classes.image}>\n              <VegaLite\n                spec={spec.spec}\n                width={sidebarWidth}\n                height={sidebarWidth}\n              />\n            </div>\n          </div>\n        </TooltipTable>\n\n        <div className={classes.top}>\n          <Fab size=\"small\" color=\"primary\" onClick={handleModify}>\n            <Edit />\n          </Fab>\n          <Fab\n            size=\"small\"\n            color=\"secondary\"\n            onClick={handleDelete}\n            onMouseEnter={handleDeleteMouseEnter}\n            onMouseLeave={handleDeleteMouseLeave}\n          >\n            <Delete />\n          </Fab>\n        </div>\n\n        <div className={classes.center + ' ' + classes.bottom}>\n          {spec.alias}\n        </div>\n      </ListItem>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","export const sidebarWidth = 150;\nexport const borderWidth = 2;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SpecPreview } from './SpecPreview';\n\nexport interface INavigationBarProps {\n  currentState: IState;\n}\n\nconst useStyles = makeStyles(_ => ({\n  list: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexGrow: 1,\n    paddingTop: 0,\n    paddingBottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'center',\n  },\n}));\n\nexport const NavigationBar: React.FC<INavigationBarProps> = ({\n  currentState,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.list}>\n      {currentState.specs.map(spec => (\n        <SpecPreview\n          key={spec.id}\n          spec={spec}\n          operand1Id={currentState.operand1Id}\n          active={spec.id === currentState.operand1Id}\n        />\n      ))}\n    </List>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport PlaylistAdd from '@material-ui/icons/PlaylistAdd';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AppDispatch } from '../contexts';\nimport { VegaLiteEditor } from './VegaLiteEditor';\n\nconst useStyles = makeStyles(theme => ({\n  button: { marginBottom: theme.spacing(1) },\n}));\n\nexport const NewSpec: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const dispatch = useContext(AppDispatch);\n\n  const handleSuccess = (alias: string, json: any) => {\n    dispatch({ type: 'add-spec', json, alias });\n  };\n\n  const handleOpen = () => {\n    setCurrentSpec('');\n    setCurrentAlias('Untitled');\n    setShowModal(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button onClick={handleOpen} className={classes.button}>\n        <PlaylistAdd /> &nbsp; New Spec\n      </Button>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","import { ViewHolder } from '../../SyntaxTree/View';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { borderWidth } from '../../variables';\n\nexport const useStyles = makeStyles(theme => ({\n  main: {\n    padding: 10,\n    border: borderWidth,\n    borderColor: ((active: boolean) =>\n      active ? '#3caea3' : 'lightgrey') as any,\n    borderStyle: 'solid',\n    '&:hover': {\n      borderColor: ((active: boolean) =>\n        active ? '#3caea3' : 'darkgrey') as any,\n    },\n    '&:active': {\n      borderColor: ((active: boolean) => 'grey') as any,\n    },\n    backgroundColor: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport interface IViewComponentProps {\n  view: ViewHolder;\n  operand2Id: number | null;\n}\n","import React, { useContext } from 'react';\nimport { IViewComponentProps, useStyles } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\nimport { AppDispatch } from '../../contexts';\n\nexport const UnitComponent: React.FC<IViewComponentProps> = ({\n  view,\n  operand2Id,\n}) => {\n  const dispatch = useContext(AppDispatch);\n  const thisId = view.view.getId();\n\n  const handleToggleActive = () => {\n    dispatch({\n      type: 'select-operand2-id',\n      operandId: thisId === operand2Id ? null : thisId,\n    });\n  };\n\n  const classes = useStyles(thisId === operand2Id);\n\n  return (\n    <div className={classes.main} onClick={handleToggleActive}>\n      <VegaLite spec={view.export()} />\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { IViewComponentProps, useStyles } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\nimport { AppDispatch } from '../../contexts';\n\nexport const LayerComponent: React.FC<IViewComponentProps> = ({\n  view,\n  operand2Id,\n}) => {\n  const dispatch = useContext(AppDispatch);\n  const thisId = view.view.getId();\n\n  const handleToggleActive = () => {\n    dispatch({\n      type: 'select-operand2-id',\n      operandId: thisId === operand2Id ? null : thisId,\n    });\n  };\n\n  const classes = useStyles(thisId === operand2Id);\n  return (\n    <div className={classes.main} onClick={handleToggleActive}>\n      <VegaLite spec={view.export()} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ViewHolder } from '../SyntaxTree/View';\nimport { UnitComponent } from './views/UnitComponent';\nimport { LayerComponent } from './views/LayerComponent';\n\nexport interface IMainViewProps {\n  tree: ViewHolder;\n  operand2Id: number | null;\n}\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    backgroundColor: theme.palette.grey[200],\n    marginTop: theme.spacing(1),\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport const MainView: React.FC<IMainViewProps> = ({ tree, operand2Id }) => {\n  const classes = useStyles();\n\n  const makeViewComponent = (viewHolder: ViewHolder) => {\n    switch (viewHolder.view.getType()) {\n      case 'unit': {\n        return <UnitComponent view={viewHolder} operand2Id={operand2Id} />;\n      }\n      case 'layer': {\n        return <LayerComponent view={viewHolder} operand2Id={operand2Id} />;\n      }\n      default:\n        throw new Error(\n          `${viewHolder.view.getType()} view has not been implemented`\n        );\n    }\n  };\n\n  return (\n    <div className={classes.main}>\n      {tree ? makeViewComponent(tree) : 'Empty View'}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Undo from '@material-ui/icons/Undo';\nimport Redo from '@material-ui/icons/Redo';\nimport Grid from '@material-ui/core/Grid';\n\nimport { AppDispatch } from '../contexts';\nimport { ViewHolder } from '../SyntaxTree/View';\n\ninterface IOperationBarProps {\n  specs: IBaseSpec[];\n  operand1Id: number | null;\n  operand2Id: number | null;\n  tree: ViewHolder | null;\n}\n\nexport const OperationBar: React.FC<IOperationBarProps> = ({\n  specs,\n  operand1Id,\n  operand2Id,\n  tree,\n}) => {\n  const dispatch = useContext(AppDispatch);\n\n  const handleUndo = () => dispatch({ type: 'undo' });\n  const handleRedo = () => dispatch({ type: 'redo' });\n  const operate = (operator: Operator) => {\n    specs.forEach(spec => {\n      if (spec.id === operand1Id) {\n        dispatch({\n          type: 'operate',\n          operand1: spec.spec,\n          operand2Id,\n          operator,\n        });\n      }\n    });\n  };\n\n  const layerDisabled = operand1Id === null || operand2Id === null;\n  const concatDisabled = operand1Id === null || operand2Id === null;\n  const repeatDisabled = operand1Id !== null || operand2Id === null;\n  const facetDisabled = operand1Id !== null || operand2Id === null;\n  const placeDisabled =\n    operand1Id === null || operand2Id !== null || tree !== null;\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <Button onClick={() => operate('layer')} disabled={layerDisabled}>\n          Layer\n        </Button>\n        <Button onClick={() => operate('concat')} disabled={concatDisabled}>\n          Concat\n        </Button>\n        <Button onClick={() => operate('repeat')} disabled={repeatDisabled}>\n          Repeat\n        </Button>\n        <Button onClick={() => operate('facet')} disabled={facetDisabled}>\n          Facet\n        </Button>\n        <Button onClick={() => operate('place')} disabled={placeDisabled}>\n          Place\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button onClick={handleUndo}>\n          <Undo /> &nbsp; Undo\n        </Button>\n        <Button onClick={handleRedo}>\n          <Redo /> &nbsp; Redo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","/**\n * Move an element that index `from` to the index `to` and shift the rest to the\n * index `from`.\n * For example: in an array with 4 elements [0, 1, 2, 3], calling\n * rearrange(2, 0) result in the rearrangement of the elements to [2, 0, 1, 3]\n * @param {Array} arr array containing the elements to be moved.\n * @param {number} from the index of the element to be moved from.\n * @param {number} to the index of the element to be moved to.\n */\nexport function moveElement(arr: Array<any>, from: number, to: number) {\n  if (!(from in arr && to in arr)) {\n    throw new Error(\n      `from (=${from}) or to (=${to}) is out of arr bound (=[0,${arr.length -\n        1}])`\n    );\n  }\n\n  const fromElm = arr[from];\n  if (from < to) {\n    for (let i = from; i < to; i++) {\n      arr[i] = arr[i + 1];\n    }\n  } else {\n    for (let i = from; i > to; i--) {\n      arr[i] = arr[i - 1];\n    }\n  }\n  arr[to] = fromElm;\n}\n\nexport function jsonCopy(obj: {}) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\n// export function isFacetSpec(spec: any): boolean {\n//   return !!spec && spec['facet'] !== undefined;\n// }\n\n// export function isLayerSpec(spec: any): boolean {\n//   return !!spec && spec['layer'] !== undefined;\n// }\n\n// export function isRepeatSpec(spec: any): boolean {\n//   return !!spec && spec['repeat'] !== undefined;\n// }\n\n// export function isConcatSpec(spec: any): boolean {\n//   return !!spec && spec['concat'] !== undefined;\n// }\n\n// export function isVConcatSpec(spec: any): boolean {\n//   return !!spec && spec['vconcat'] !== undefined;\n// }\n\n// export function isHConcatSpec(spec: any): boolean {\n//   return !!spec && spec['hconcat'] !== undefined;\n// }\n\n// export function parse(spec: any): View {\n//   if (isLayerSpec(spec)) {\n//     return new LayerView(spec);\n//   }\n// }\n","import { jsonCopy } from './Utils';\n\nlet idCounter = 0;\n\nexport abstract class View {\n  protected id: number;\n  private type: string;\n\n  constructor(type) {\n    this.id = idCounter++;\n    this.type = type;\n  }\n\n  public getType() {\n    return this.type;\n  }\n\n  public getId() {\n    return this.id;\n  }\n\n  /**\n   * export Vega-Lite spec in vl.json format\n   * @returns exported Vega-Lite spec\n   */\n  abstract export(): object;\n\n  abstract clone(): View;\n\n  abstract findView(id: number): ViewHolder | null;\n}\n\nexport class ViewHolder {\n  view: View;\n\n  constructor(view: View) {\n    this.view = view;\n  }\n\n  /**\n   * export Vega-Lite spec of the holding view in vl.json format\n   * @returns exported Vega-Lite spec\n   */\n  export() {\n    return this.view.export();\n  }\n\n  clone() {\n    return new ViewHolder(this.view.clone());\n  }\n\n  findView(id: number): ViewHolder | null {\n    return this.view.getId() === id ? this : this.view.findView(id);\n  }\n}\n\n/**\n * An indicator for a view in CompositView.\n * Concat and Layer need a View and UnitView to indicate the appearance of the view,\n * while Repeat only need a string that specify a field to indicate\n * the appearance of the view.\n * Facet only need a field name for each axis to specify facet property, so\n * it should not have a parameter. Thus, we use null.\n * TODO: explain this better!\n */\ntype ViewIndocator = View | string | null;\n\nexport abstract class CompositeView<V extends ViewIndocator> extends View {\n  /**\n   * Move subview at the position `from` to position `to`.\n   * For example: in composite view with 4 subviews [0, 1, 2, 3], calling\n   * rearrange(2, 0) result in the rearrangement of the subview to [2, 0, 1, 3]\n   * @param {number} form the index of the view to be moved from.\n   * @param {number} to the index of the view to be moved to.\n   * @param {any} option an extra option for rearrangement.\n   */\n  abstract rearrange(from: number, to: number, option: any): void;\n\n  /**\n   * Append another view with a ViewIdicator `viewIndicator`\n   * @param {V} viewIndicator the ViewIndocator to be appended.\n   * @param {any} option an extra option for appending.\n   */\n  abstract append(viewIndicator: V, option: any): void;\n\n  /**\n   * Prepend another view with a ViewIdicator `viewIndicator`\n   * @param {V} viewIndicator the ViewIndocator to be prepended.\n   * @param {any} option an extra option for appending.\n   */\n  abstract prepend(viewIndicator: V, option: any): void;\n\n  /**\n   * Remove a view from composite view\n   * @param {number} the index of the view to be removed\n   * @param {any} option an extra option for removing\n   */\n  abstract remove(index: number, option: any): void;\n\n  /**\n   * Check if `viewIndicator` is competible with the current view\n   * @param {V} viewIndicator a view indicator to be checked\n   * @returns true if `viewIndicator` is competible with the current view\n   *          false otherwise.\n   */\n  abstract isCompatible(viewIndicator: V): boolean;\n}\n\nexport class UnitView extends View {\n  private spec: {};\n\n  /**\n   * Construct a unit view with a valid Vega-Lite spec.\n   * @param {object} spec Vega-Lite spec\n   */\n  public constructor(spec: {}) {\n    super('unit');\n    this.spec = jsonCopy(spec);\n  }\n\n  public edit(spec: {}) {\n    this.spec = jsonCopy(spec);\n  }\n\n  public export() {\n    return jsonCopy(this.spec);\n  }\n\n  public clone() {\n    const cloned = new UnitView(jsonCopy(this.spec));\n    cloned.id = this.id;\n    return cloned;\n  }\n\n  public findView(_id: number) {\n    return null;\n  }\n}\n","import { CompositeView, ViewHolder, UnitView } from './View';\nimport { moveElement } from './Utils';\n\nexport class LayerView extends CompositeView<UnitView> {\n  private layer: ViewHolder[];\n\n  public constructor() {\n    super('layer');\n    this.layer = [];\n  }\n\n  public export() {\n    return { layer: this.layer.map(l => l.export()) };\n  }\n\n  public append(view: UnitView) {\n    this.layer.push(new ViewHolder(view));\n  }\n\n  public prepend(view: UnitView) {\n    this.layer.unshift(new ViewHolder(view));\n  }\n\n  public remove(index: number) {\n    this.layer.splice(index, 1);\n  }\n\n  public isCompatible(view: UnitView): boolean {\n    const spec = view.export();\n    return (\n      !spec['spec'] &&\n      !spec['layer'] &&\n      !spec['concat'] &&\n      !spec['hconcat'] &&\n      !spec['vconcat']\n    );\n  }\n\n  public rearrange(from: number, to: number) {\n    moveElement(this.layer, from, to);\n  }\n\n  public clone() {\n    const cloned = new LayerView();\n    cloned.id = this.id;\n    this.layer.forEach((viewHolder: ViewHolder) => {\n      cloned.layer.push(viewHolder.clone());\n    });\n    return cloned;\n  }\n\n  public findView(id: number) {\n    this.layer.forEach((viewHolder: ViewHolder) => {\n      const result = viewHolder.findView(id);\n      if (result !== null) {\n        return result;\n      }\n    });\n    return null;\n  }\n}\n","import * as R from 'ramda';\nimport { UnitView, ViewHolder } from './SyntaxTree/View';\nimport { assertNever } from './utils';\nimport { LayerView } from './SyntaxTree/LayerView';\n\nconst newGlobalState = (\n  oldState: IGlobalState,\n  getCurrent: (current: IState) => IState\n) => {\n  return {\n    current: getCurrent(oldState.current),\n    undoStack: R.prepend(oldState.current, oldState.undoStack),\n    redoStack: [],\n  };\n};\n\nexport const reducer: Reducer = (globalState, action) => {\n  switch (action.type) {\n    case 'add-spec':\n      return newGlobalState(globalState, ({ specs, specCount, ...rest }) => ({\n        specs: R.append(\n          { id: specCount, spec: action.json, alias: action.alias },\n          specs\n        ),\n        specCount: specCount + 1,\n        ...rest,\n      }));\n\n    case 'modify-spec':\n      return newGlobalState(\n        globalState,\n        R.over(\n          R.lensProp('specs'),\n          R.map((spec: IBaseSpec) =>\n            spec.id === action.id\n              ? { id: action.id, spec: action.json, alias: action.alias }\n              : spec\n          )\n        )\n      );\n    case 'delete-spec':\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(\n            R.lensProp('specs'),\n            R.filter((spec: IBaseSpec) => spec.id !== action.id)\n          ),\n          R.over(R.lensProp('operand1Id'), operand1Id =>\n            operand1Id === action.id ? null : operand1Id\n          )\n        )\n      );\n    case 'undo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (undoStack.length > 0) {\n        return {\n          redoStack: R.prepend(current, redoStack),\n          current: undoStack[0],\n          undoStack: undoStack.slice(1),\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'redo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (redoStack.length > 0) {\n        return {\n          redoStack: redoStack.slice(1),\n          current: redoStack[0],\n          undoStack: R.prepend(current, undoStack),\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'select-operand1': {\n      return newGlobalState(\n        globalState,\n        R.over(R.lensProp('operand1Id'), R.always(action.id))\n      );\n    }\n    case 'select-operand2-id': {\n      return newGlobalState(\n        globalState,\n        R.over(R.lensProp('operand2Id'), R.always(action.operandId))\n      );\n    }\n    case 'operate': {\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(R.lensProp('tree'), (oldTree: ViewHolder) => {\n            if (action.operator === 'place') {\n              return new ViewHolder(new UnitView(action.operand1));\n            }\n\n            const newTree = oldTree.clone();\n            const operand2ViewHolder = newTree.findView(\n              action.operand2Id === null ? -1 : action.operand2Id\n            );\n\n            if (!operand2ViewHolder) {\n              throw new Error('focusing node is null expecting ViewHolder');\n            }\n\n            switch (action.operator) {\n              case 'layer':\n                const operand1View = new UnitView(action.operand1);\n                if (\n                  operand2ViewHolder.view instanceof LayerView &&\n                  operand2ViewHolder.view.isCompatible(operand1View)\n                ) {\n                  operand2ViewHolder.view.append(operand1View);\n                } else {\n                  const layer = new LayerView();\n                  if (\n                    layer.isCompatible(operand1View) &&\n                    operand2ViewHolder.view instanceof UnitView &&\n                    layer.isCompatible(operand2ViewHolder.view)\n                  ) {\n                    layer.append(operand2ViewHolder.view);\n                    layer.append(operand1View);\n                    operand2ViewHolder.view = layer;\n                  }\n                }\n                break;\n              case 'concat':\n                break;\n              case 'repeat':\n                break;\n              case 'facet':\n                break;\n              default:\n                return assertNever(action.operator);\n            }\n            return newTree;\n          }),\n          R.over(R.lensProp('operand1Id'), R.always(null)),\n          R.over(R.lensProp('operand2'), R.always(null))\n        )\n      );\n    }\n    default:\n      throw new Error('impossible');\n  }\n};\n\nexport const initialState: IGlobalState = {\n  current: {\n    specs: [],\n    specCount: 0,\n    operand1Id: null,\n    operand2Id: null,\n    tree: null,\n  },\n  undoStack: [],\n  redoStack: [],\n};\n","import React, { useReducer } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { NavigationBar } from './components/NavigationBar';\nimport { NewSpec } from './components/NewSpec';\nimport { MainView } from './components/MainView';\nimport { OperationBar } from './components/OperationBar';\nimport { sidebarWidth } from './variables';\nimport { AppDispatch } from './contexts';\nimport { reducer, initialState } from './reducer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 600,\n    display: 'flex',\n  },\n  left: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    width: sidebarWidth,\n    marginRight: theme.spacing(1),\n  },\n  right: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer<Reducer>(reducer, initialState);\n\n  const classes = useStyles();\n\n  return (\n    <AppDispatch.Provider value={dispatch}>\n      <div className={classes.root}>\n        <div className={classes.left}>\n          <NewSpec />\n          <NavigationBar currentState={state.current} />\n        </div>\n        <div className={classes.right}>\n          <OperationBar\n            specs={state.current.specs}\n            operand1Id={state.current.operand1Id}\n            operand2Id={state.current.operand2Id}\n            tree={state.current.tree}\n          />\n          <MainView\n            tree={state.current.tree}\n            operand2Id={state.current.operand2Id}\n          />\n        </div>\n      </div>\n    </AppDispatch.Provider>\n  );\n};\n\nexport default hot(module)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}