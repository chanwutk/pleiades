{"version":3,"sources":["utils.ts","components/PopupEditor.tsx","components/VegaLiteEditor.tsx","components/TooltipTable.tsx","components/VegaLite.tsx","components/SpecPreview.tsx","variables.ts","components/NavigationBar.tsx","components/NewSpec.tsx","components/views/ViewComponent.tsx","components/views/UnitComponent.tsx","components/views/LayerComponent.tsx","components/views/ConcatComponent.tsx","components/views/FacetComponent.tsx","components/views/RepeatConponent.tsx","components/views/Renderer.tsx","components/MainView.tsx","SyntaxTree/Utils.ts","SyntaxTree/View.ts","SyntaxTree/LayerView.ts","components/operations/Utils.tsx","components/operations/LayerButton.tsx","components/operations/ConcatButton.tsx","SyntaxTree/RepeatView.ts","components/popups/PopupRepeatOption.tsx","components/operations/RepeatButton.tsx","SyntaxTree/FacetView.ts","components/popups/PopupFacetOption.tsx","components/operations/FacetButton.tsx","components/operations/PlaceButton.tsx","components/operations/ExportButton.tsx","components/operations/ViewPreview.tsx","components/popups/PopupConcatOption.tsx","components/popups/PopupLayerOption.tsx","components/operations/EditButton.tsx","components/OperationBar.tsx","SyntaxTree/ConcatView.ts","store.ts","components/InnerSpecNevigator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["failure","x","tag","value","addMarkdownProps","key","description","markdownDescription","hasOwnProperty","vegaLiteSchema","useStyles","makeStyles","theme","textField","marginTop","spacing","marginBottom","width","closeButton","position","right","top","errorMessage","fontStyle","color","schema","uri","PopupEditor","_ref","isOpen","onClose","onChange","alias","setAlias","errorMsg","extras","classes","react_default","a","createElement","Dialog","open","aria-labelledby","maxWidth","fullWidth","DialogTitle","disableTypography","TextField","id","label","className","event","target","margin","Button","onClick","Save_default","IconButton","Close_default","DialogContent","lib_default","language","height","editorDidMount","editor","focus","editorWillMount","monaco","languages","json","jsonDefaults","setDiagnosticsOptions","allowComments","enableSchemaRequest","schemas","validate","options","automaticLayout","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","Fragment","examples","$schema","data","url","mark","encoding","field","type","y","extent","transform","filter","scale","rangeStep","aggregate","axis","title","stringToSpec","JSON","parse","vl","e","message","VegaLiteEditor","showModal","setShowModal","setValue","onSuccess","_useState","useState","_useState2","Object","slicedToArray","setErrorMsg","map","example","i","stringify","PopupEditor_PopupEditor","toSave","result","txt","_","keyColumn","textAlign","TooltipTable","table","children","_ref2","_ref3","val","Tooltip","placement","VegaLite","React","memo","NativeVegaLite","xSpec","spec","xRest","objectWithoutProperties","ySpec","yRest","shallowEqual","Vega","isSameSpec","wrapper","&::after","display","sidebarWidth","backgroundImage","content","bottom","alignSelf","image","overflow","preview","userSelect","marginLeft","marginRight","border","borderColor","active","borderStyle","&:hover","&:active","center","left","& button","SpecPreview","_useState3","_useState4","currentSpec","setCurrentSpec","_useState5","_useState6","currentAlias","setCurrentAlias","_useState7","_useState8","isDeleting","setIsDeleting","dispatch","useDispatch","useSelector","state","current","operands","includes","ListItem","disableGutters","operand","TooltipTable_TooltipTable","Fab","size","Edit_default","onMouseEnter","onMouseLeave","Delete_default","VegaLiteEditor_VegaLiteEditor","list","overflowY","overflowX","flexGrow","paddingTop","paddingBottom","flexDirection","alignContent","NavigationBar","specs","List","SpecPreview_SpecPreview","button","NewSpec","PlaylistAdd_default","main","padding","backgroundColor","justifyContent","alignItems","makeViewComponent","View","view","setIsHovering","thisId","isHoveringChild","setIsHoveringChild","isOperandIncluded","UnitComponent","export","LayerComponent","ConcatComponent","concatView","subViews","getSubViews","style","getOrient","subView","render","FacetComponent","RepeatComponent","Renderer","Error","concat","getRenderer","palette","grey","emptyView","fontSize","MainView","tree","moveElement","arr","from","to","length","fromElm","containsDifferentData","datasets","getData","isUnitSpec","isRepeatSpec","isFacetSpec","toConsumableArray","isLayerSpec","layer","isConcatSpec","isHConcatSpec","hconcat","isVConcatSpec","vconcat","innerSpec","flat","check","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","dataset","R","err","return","extractData","_extractData","newSpec","_extractData2","extractedData","extractedSpec","outputData","_extractData3","push","apply","jsonCopy","findViewInArray","views","currentView","parent","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","findView","objectSpread","replaceViewInArray","obj","idCounter","classCallCheck","this","_id","_type","createClass","get","CompositeView","_View","possibleConstructorReturn","getPrototypeOf","arguments","inherits","UnitView","_View2","_this","call","cloned","_view","LayerView","_CompositeView","l","unshift","index","splice","deepClone","getEncoding","operateFactory","operator","extra","buttonNormal","buttonWarn","error","LayerButton","navBarOperands","mainViewOperands","operate","anchorEl","setAnchorEl","layerDisabled","mainViewOperand","layerDisabledCheck","layerWarn","encodings","mainViewEncodings","currentEncodingField","currentEncodingType","_i","_Object$keys","keys","layerWarnCheck","handleClickLayer","currentTarget","handleSelectOption","option","handleMenuClose","aria-owns","aria-haspopup","ErrorOutlineOutlined_default","disabled","Menu","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ConcatButton","orient","concatDisabled","RepeatView","repeatInfo","repeat","applyRepeat","channel","addAxis","removeAxis","isRepeating","remove","clone","info","RepeatInfo","row","column","rowChannel","columnChannel","nestedTypes","nestedType","forEach","_jsonCopy","nestedSpecs","output","_toPropertyKey","nestedSpec","applyRepeatToEncoding","fieldText","minWidth","fieldTexts","addAndRemove","checkBox","axisConfig","PopupRepeatOption","currentRepeat","checkRow","setCheckRow","checkColumn","setCheckColumn","rowFields","setRowFields","setRowChannel","_useState9","_useState10","columnFields","setColumnFields","_useState11","_useState12","setColumnChannel","handleTextChangeFactory","setter","newFields","axisConfigFactory","checkSetter","channelSetter","fields","fieldsSetter","Checkbox","checked","Add_default","Remove_default","onEntering","DialogContentText","DialogActions","autoFocus","RepeatButton","useWarningStyles","setIsOpen","repeatDisabled","repeatWarn","PopupRepeatOption_PopupRepeatOption","FacetView","facetInfo","facet","swapAxis","FacetInfo","typeSelector","PopupFacetOption","currentFacet","rowField","setRowField","rowType","setRowType","columnField","setColumnField","columnType","setColumnType","fieldSetter","typeSetter","FormControl","InputLabel","htmlFor","Select","inputProps","name","FacetButton","facetDisabled","facetWarn","PopupFacetOption_PopupFacetOption","PlaceButton","placeDisabled","ExportButton","exportDisabled","element","document","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","Launch_default","ViewPreview","selectedSubViewId","setSelectedSubViewId","direction","actions","paddingLeft","PopupConcatOption","subViewIdsOrder","setSubViewIdsOrder","currentOrient","setCurrentOrient","subViewsMap","setSubViewsMap","operateDisabled","_subViewMap","ViewPreview_ViewPreview","Switch","aria-label","newOrder","ArrowBack_default","ArrowUpward_default","ArrowForward_default","ArrowDownward_default","order","PopupLayerOption","EditButton","isLayerPopupOpen","setIsLayerPopupOpen","isConcatPopupOpen","setIsConcatPopupOpen","isRepeatPopupOpen","setIsRepeatPopupOpen","isFacetPopupOpen","setIsFacetPopupOpen","setCurrentView","setters","unit","alert","PopupLayerOption_PopupLayerOption","PopupConcatOption_PopupConcatOption","getInfo","OperationBar","undoDisabled","undoStack","redoDisabled","redoStack","Grid","container","justify","item","LayerButton_LayerButton","ConcatButton_ConcatButton","RepeatButton_RepeatButton","FacetButton_FacetButton","PlaceButton_PlaceButton","Undo_default","Redo_default","EditButton_EditButton","ExportButton_ExportButton","ConcatView","defineProperty","newGlobalState","oldState","getCurrent","initialState","lastSpecId","store","createStore","globalState","action","rest","slice","findInNav","find","newTree","rightViewResult","leftView","oldViewId","append","replaceChild","_action$extra","assertNever","_view$getSubViews","changeInfo","_ref4","newView","subViewMap","subViewId","console","InnerViewNavigator","toShowInner","setToShowInner","findResult","root","App","es","NewSpec_NewSpec","NavigationBar_NavigationBar","OperationBar_OperationBar","MainView_MainView","InnerSpecNevigator_InnerViewNavigator","window","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d2724ac.chunk.js","sourcesContent":["export const success = <T>(x: T): ISuccess<T> => ({ tag: 'success', value: x });\nexport const failure = <T>(x: T): IFailure<T> => ({ tag: 'failure', value: x });\nexport const last = <T>(xs: T[]) => xs[xs.length - 1];\nexport const assertNever = (x: never): never => {\n  throw new Error('Unexpected object: ' + x);\n};\n","import React from 'react';\nimport MonacoEditor, {\n  EditorDidMount,\n  EditorWillMount,\n  DiffChangeHandler,\n} from 'react-monaco-editor';\nimport Close from '@material-ui/icons/Close';\nimport Save from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport vegaLiteSchema from 'vega-lite/build/vega-lite-schema.json';\n\n/**\n * Adds markdownDescription props to a schema. See https://github.com/Microsoft/monaco-editor/issues/885\n */\nconst addMarkdownProps = value => {\n  if (typeof value === 'object' && value !== null) {\n    if (value.description) {\n      value.markdownDescription = value.description;\n    }\n\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        value[key] = addMarkdownProps(value[key]);\n      }\n    }\n  }\n  return value;\n};\n\naddMarkdownProps(vegaLiteSchema);\n\nexport interface IPopupEditorProps {\n  isOpen: boolean;\n  onClose: (toSave: boolean) => void;\n  value: string;\n  onChange: DiffChangeHandler;\n  alias: string;\n  setAlias: (txt: string) => void;\n  errorMsg?: string;\n  extras: React.ReactNode[];\n}\n\nconst editorHeight = 400;\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(4),\n    width: 300,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n  },\n  errorMessage: {\n    fontStyle: 'italic',\n    color: 'red',\n  },\n}));\n\nconst schema = [\n  {\n    schema: vegaLiteSchema,\n    uri: 'https://vega.github.io/schema/vega-lite/v3.json',\n  },\n];\n\nexport const PopupEditor: React.FC<IPopupEditorProps> = ({\n  isOpen,\n  onClose,\n  value,\n  onChange,\n  alias,\n  setAlias,\n  errorMsg,\n  extras,\n}) => {\n  const classes = useStyles();\n\n  const handleEditorDidMount: EditorDidMount = editor => {\n    editor.focus();\n  };\n\n  const handleEditorWillMount: EditorWillMount = monaco => {\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      allowComments: false,\n      enableSchemaRequest: true,\n      schemas: schema,\n      validate: true,\n    });\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"lg\"\n      fullWidth={true}\n    >\n      <DialogTitle disableTypography>\n        <TextField\n          id=\"standard-name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={alias}\n          onChange={event => setAlias(event.target.value)}\n          margin=\"normal\"\n        />\n        <Button onClick={() => onClose(true)}>\n          <Save />\n          &nbsp; Save\n        </Button>\n        {extras}\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => onClose(false)}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className=\"editor\">\n          <MonacoEditor\n            language=\"json\"\n            value={value}\n            height={editorHeight}\n            onChange={onChange}\n            editorDidMount={handleEditorDidMount}\n            editorWillMount={handleEditorWillMount}\n            options={{\n              automaticLayout: true,\n              cursorBlinking: 'smooth',\n              folding: true,\n              lineNumbersMinChars: 4,\n              minimap: { enabled: false },\n              scrollBeyondLastLine: false,\n              wordWrap: 'on',\n            }}\n          />\n        </div>\n        <span className={classes.errorMessage}>\n          {errorMsg !== null ? <>{errorMsg} &nbsp;</> : null}\n        </span>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport * as vl from 'vega-lite';\nimport stringify from 'json-stringify-pretty-compact';\nimport Button from '@material-ui/core/Button';\n\nimport { success, failure } from '../utils';\nimport { PopupEditor } from './PopupEditor';\n\nexport interface IVegaLiteEditorProps {\n  showModal: boolean;\n  setShowModal: (val: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  onSuccess: (alias: string, json: IRawSpec) => void;\n}\n\nconst examples = [\n  {\n    $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n    data: { url: 'https://vega.github.io/editor/data/cars.json' },\n    mark: 'point',\n    encoding: {\n      x: { field: 'Horsepower', type: 'quantitative' },\n      y: { field: 'Miles_per_Gallon', type: 'quantitative' },\n    },\n  },\n  {\n    $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n    data: { url: 'https://vega.github.io/editor/data/cars.json' },\n    mark: { type: 'errorband', extent: 'stdev' },\n    encoding: {\n      y: { field: 'Miles_per_Gallon', type: 'quantitative' },\n    },\n  },\n\n  {\n    $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n    data: { url: 'https://vega.github.io/editor/data/population.json' },\n    transform: [{ filter: 'datum.year == 2000' }],\n    mark: 'bar',\n    encoding: {\n      y: {\n        field: 'age',\n        type: 'ordinal',\n        scale: { rangeStep: 17 },\n      },\n      x: {\n        aggregate: 'sum',\n        field: 'people',\n        type: 'quantitative',\n        axis: { title: 'population' },\n      },\n    },\n  },\n];\n\nconst stringToSpec = (value: string) => {\n  try {\n    const json = JSON.parse(value);\n    if (!('data' in json) || !('url' in json.data || 'values' in json.data)) {\n      return failure('data field must exist and must be url.');\n    }\n\n    // TODO: can we do anything with the output of the compilation?\n    // currently we only call it for side-effect (to see if it errors or not)\n    vl.compile(json);\n    return success(json);\n  } catch (e) {\n    return failure(e.message);\n  }\n};\n\nexport const VegaLiteEditor: React.FC<IVegaLiteEditorProps> = ({\n  showModal,\n  setShowModal,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  onSuccess,\n}) => {\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleClose = (toSave: boolean) => {\n    if (toSave) {\n      const result = stringToSpec(value);\n      switch (result.tag) {\n        case 'success':\n          setErrorMsg('');\n          onSuccess(alias, result.value);\n          setShowModal(false);\n          return;\n        case 'failure':\n          setErrorMsg(result.value);\n          // NOTE: this does not close the dialog\n          return;\n      }\n    } else {\n      setErrorMsg('');\n      setShowModal(false);\n      return;\n    }\n  };\n\n  const handleChange = (txt: string) => {\n    // NOTE: need to setValue before setErrorMsg\n    setValue(txt);\n    const result = stringToSpec(txt);\n    switch (result.tag) {\n      case 'success':\n        setErrorMsg('');\n        break;\n      case 'failure':\n        setErrorMsg(result.value);\n        break;\n    }\n  };\n\n  const extras = examples.map((example, i) => (\n    <Button key={i} onClick={() => setValue(stringify(example))}>\n      Example {i + 1}\n    </Button>\n  ));\n\n  return (\n    <PopupEditor\n      isOpen={showModal}\n      onClose={handleClose}\n      value={value}\n      onChange={handleChange}\n      alias={alias}\n      setAlias={setAlias}\n      errorMsg={errorMsg}\n      extras={extras}\n    />\n  );\n};\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface ITooltipTableProps {\n  table: string[][];\n  children: any;\n}\n\nconst useStyles = makeStyles(_ => ({\n  keyColumn: { textAlign: 'right' },\n}));\n\nexport const TooltipTable: React.FC<ITooltipTableProps> = ({\n  table,\n  children,\n}) => {\n  const classes = useStyles();\n  const title = (\n    <table>\n      <tbody>\n        {table.map(([key, val]) => (\n          <tr key={key}>\n            <td className={classes.keyColumn}>\n              <strong>{key}</strong>:\n            </td>\n            <td>{val}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <Tooltip placement=\"top\" title={title}>\n      {children}\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { shallowEqual } from 'react-redux';\nimport Vega from 'react-vega';\nimport NativeVegaLite from 'react-vega-lite';\n\nexport const VegaLite = React.memo(\n  NativeVegaLite,\n  ({ spec: xSpec, ...xRest }, { spec: ySpec, ...yRest }) => {\n    return shallowEqual(xRest, yRest) && Vega.isSameSpec(xSpec, ySpec);\n  }\n);\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport stringify from 'json-stringify-pretty-compact';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { TooltipTable } from './TooltipTable';\nimport Fab from '@material-ui/core/Fab';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { sidebarWidth, borderWidth } from '../variables';\nimport { VegaLite } from './VegaLite';\n\nexport interface ISpecPreviewProps {\n  spec: IBaseSpec;\n}\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    height: sidebarWidth,\n    '&::after': {\n      display: 'block',\n      position: 'absolute',\n      width: sidebarWidth - 2 * borderWidth,\n      backgroundImage:\n        'linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.75))',\n      height: '75%',\n      content: \"''\",\n      bottom: 0,\n      alignSelf: 'center',\n    },\n  },\n  image: {\n    overflow: 'hidden',\n    height: sidebarWidth,\n    width: sidebarWidth - 2 * borderWidth,\n  },\n  preview: {\n    position: 'relative',\n    userSelect: 'none',\n    width: sidebarWidth,\n    marginTop: 5,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    border: borderWidth,\n    borderColor: ((active: boolean) =>\n      active ? '#3caea3' : 'lightgrey') as any,\n    borderStyle: 'solid',\n    '&:hover': {\n      borderColor: ((active: boolean) =>\n        active ? '#3caea3' : 'darkgrey') as any,\n    },\n    '&:active': {\n      borderColor: 'grey',\n    },\n  },\n  center: {\n    position: 'absolute',\n    left: '50%',\n    transform: 'translate(-50%, 0)',\n  },\n  top: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    '& button': {\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(1),\n    },\n  },\n  bottom: {\n    bottom: 10,\n    color: 'white',\n  },\n}));\n\nexport const SpecPreview: React.FC<ISpecPreviewProps> = ({ spec }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const active = useSelector((state: IGlobalState) =>\n    state.current.operands.includes(spec.id)\n  );\n\n  const handleModify = () => {\n    setCurrentSpec(stringify(spec.spec));\n    setCurrentAlias(spec.alias);\n    setShowModal(true);\n  };\n\n  const handleDeleteMouseEnter = () => setIsDeleting(true);\n  const handleDeleteMouseLeave = () => setIsDeleting(false);\n\n  const handleDelete = () => {\n    dispatch({ type: 'delete-spec', id: spec.id });\n  };\n\n  const handleSuccess = (alias: string, json: IRawSpec) => {\n    dispatch({ type: 'modify-spec', json, alias, id: spec.id });\n  };\n\n  const handleToggleActive = () => {\n    if (!isDeleting) {\n      dispatch({ type: 'select-operand', operand: spec.id });\n    }\n  };\n\n  const markToString = (mark: string | { type: string }) => {\n    if (typeof mark === 'string') {\n      return mark;\n    } else {\n      return mark.type;\n    }\n  };\n\n  const dataToString = (data: IRawData) => {\n    return 'url' in data ? data['url'] : 'Embeded data';\n  };\n\n  const classes = useStyles(active);\n  const table = [\n    ['Data URL', dataToString(spec.spec.data)],\n    ['Mark Type', markToString(spec.spec.mark)],\n  ];\n\n  return (\n    <>\n      <ListItem\n        disableGutters\n        className={classes.preview}\n        onClick={handleToggleActive}\n      >\n        <TooltipTable table={table}>\n          <div className={classes.wrapper}>\n            <div className={classes.image}>\n              <VegaLite\n                spec={spec.spec}\n                // This size restriction makes the elements in visualized spec layed out incorrectly\n                width={sidebarWidth}\n                height={sidebarWidth}\n              />\n            </div>\n          </div>\n        </TooltipTable>\n\n        <div className={classes.top}>\n          <Fab size=\"small\" color=\"primary\" onClick={handleModify}>\n            <Edit />\n          </Fab>\n          <Fab\n            size=\"small\"\n            color=\"secondary\"\n            onClick={handleDelete}\n            onMouseEnter={handleDeleteMouseEnter}\n            onMouseLeave={handleDeleteMouseLeave}\n          >\n            <Delete />\n          </Fab>\n        </div>\n\n        <div className={classes.center + ' ' + classes.bottom}>\n          {spec.alias}\n        </div>\n      </ListItem>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","export const sidebarWidth = 150;\nexport const borderWidth = 2;\nexport const defaultVegaLiteHeight = 200;\nexport const defaultVegaLiteWidth = 200;\nexport const defaultVegaLiteShortHeight = 20;\nexport const defaultVegaLiteShortWidth = 20;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SpecPreview } from './SpecPreview';\n\nconst useStyles = makeStyles(_ => ({\n  list: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexGrow: 1,\n    paddingTop: 0,\n    paddingBottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'center',\n  },\n}));\n\nexport const NavigationBar: React.FC = () => {\n  const classes = useStyles();\n  const specs = useSelector((state: IGlobalState) => state.current.specs);\n\n  return (\n    <List className={classes.list}>\n      {specs.map(spec => (\n        <SpecPreview key={spec.id} spec={spec} />\n      ))}\n    </List>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PlaylistAdd from '@material-ui/icons/PlaylistAdd';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { VegaLiteEditor } from './VegaLiteEditor';\n\nconst useStyles = makeStyles(theme => ({\n  button: { marginBottom: theme.spacing(1) },\n}));\n\nexport const NewSpec: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleSuccess = (alias: string, json: IRawSpec) => {\n    dispatch({ type: 'add-spec', json, alias });\n  };\n\n  const handleOpen = () => {\n    setCurrentSpec('');\n    setCurrentAlias('Untitled');\n    setShowModal(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button onClick={handleOpen} className={classes.button}>\n        <PlaylistAdd /> &nbsp; New Spec\n      </Button>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nimport { borderWidth } from '../../variables';\n\nexport const useStyles = makeStyles(_ => ({\n  main: {\n    padding: 10,\n    border: borderWidth,\n    borderColor: ((active: boolean) =>\n      active ? '#3caea3' : 'lightgrey') as any,\n    borderStyle: 'solid',\n    '&:hover': {\n      borderColor: ((active: boolean) =>\n        active ? '#3caea3' : 'darkgrey') as any,\n    },\n    '&:active': {\n      borderColor: 'grey',\n    },\n    backgroundColor: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport interface IViewComponentProps {\n  view: View;\n  setIsHovering?: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const makeViewComponent = (\n  View: React.FC<IViewComponentProps>\n): React.FC<IViewComponentProps> => ({ view, setIsHovering }) => {\n  const thisId = view.id;\n  const dispatch = useDispatch();\n  const [isHoveringChild, setIsHoveringChild] = useState(false);\n  const isOperandIncluded = useSelector((state: IGlobalState) =>\n    state.current.operands.includes(thisId)\n  );\n  const handleToggleActive = () => {\n    if (!isHoveringChild) {\n      dispatch({\n        type: 'select-operand',\n        operand: thisId,\n      });\n    }\n  };\n  const classes = useStyles(isOperandIncluded);\n  return (\n    <div\n      className={classes.main}\n      onClick={handleToggleActive}\n      onMouseEnter={() => setIsHovering && setIsHovering(true)}\n      onMouseLeave={() => setIsHovering && setIsHovering(false)}\n    >\n      <View view={view} setIsHovering={setIsHoveringChild} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\n\nexport const UnitComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view }) => <VegaLite spec={view.export()} />\n);\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\n\nexport const LayerComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view }) => <VegaLite spec={view.export()} />\n);\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { render } from './Renderer';\nimport { ConcatView } from '../../SyntaxTree/ConcatView';\n\nexport const ConcatComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view, setIsHovering }) => {\n    const concatView = view as ConcatView;\n    const subViews = concatView.getSubViews();\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: concatView.getOrient() === 'h' ? 'row' : 'column',\n        }}\n      >\n        {subViews.map(subView => render(subView, setIsHovering))}\n      </div>\n    );\n  }\n);\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\n\nexport const FacetComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view }) => <VegaLite spec={view.export()} />\n);\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\n\nexport const RepeatComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view }) => <VegaLite spec={view.export()} />\n);\n","import React from 'react';\nimport { UnitComponent } from './UnitComponent';\nimport { LayerComponent } from './LayerComponent';\nimport { ConcatComponent } from './ConcatComponent';\nimport { FacetComponent } from './FacetComponent';\nimport { RepeatComponent } from './RepeatConponent';\n\nexport const render = (\n  view: View,\n  setIsHovering?: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  const getRenderer = () => {\n    switch (view.type) {\n      case 'unit':\n        return UnitComponent;\n      case 'layer':\n        return LayerComponent;\n      case 'concat':\n        return ConcatComponent;\n      case 'facet':\n        return FacetComponent;\n      case 'repeat':\n        return RepeatComponent;\n      default:\n        throw new Error(`${view.type} view has not been implemented`);\n    }\n  };\n  const Renderer = getRenderer();\n  return <Renderer view={view} setIsHovering={setIsHovering} />;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { render } from './views/Renderer';\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    backgroundColor: theme.palette.grey[200],\n    marginTop: theme.spacing(1),\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  emptyView: {\n    color: 'darkgrey',\n    fontSize: 20,\n  },\n}));\n\nexport const MainView: React.FC = () => {\n  const classes = useStyles();\n  const tree = useSelector((state: IGlobalState) => state.current.tree);\n  return (\n    <div className={classes.main}>\n      {tree ? (\n        render(tree)\n      ) : (\n        <div className={classes.emptyView}>Empty View</div>\n      )}\n    </div>\n  );\n};\n","import { View } from './View';\nimport {\n  isUnitSpec,\n  isLayerSpec,\n  isRepeatSpec,\n  isFacetSpec,\n} from 'vega-lite/build/src/spec';\nimport {\n  isConcatSpec,\n  isHConcatSpec,\n  isVConcatSpec,\n} from 'vega-lite/build/src/spec/concat';\nimport * as R from 'ramda';\n\n/**\n * Move an element that index `from` to the index `to` and shift the rest to the\n * index `from`.\n * For example: in an array with 4 elements [0, 1, 2, 3], calling\n * rearrange(2, 0) result in the rearrangement of the elements to [2, 0, 1, 3]\n * @param {Array} arr array containing the elements to be moved.\n * @param {number} from the index of the element to be moved from.\n * @param {number} to the index of the element to be moved to.\n */\nexport function moveElement(arr: Array<any>, from: number, to: number) {\n  if (!(from in arr && to in arr)) {\n    throw new Error(\n      `from (=${from}) or to (=${to}) is out of arr bound (=[0,${arr.length -\n        1}])`\n    );\n  }\n\n  const fromElm = arr[from];\n  if (from < to) {\n    for (let i = from; i < to; i++) {\n      arr[i] = arr[i + 1];\n    }\n  } else {\n    for (let i = from; i > to; i--) {\n      arr[i] = arr[i - 1];\n    }\n  }\n  arr[to] = fromElm;\n}\n\nexport function getData(spec: IRawSpec): IRawData[] {\n  if (isUnitSpec(spec)) {\n    return spec.data ? [spec.data] : [];\n  }\n  if (isRepeatSpec(spec) || isFacetSpec(spec)) {\n    return [...getData(spec.spec), ...(spec.data ? [spec.data] : [])];\n  }\n\n  let specs: any[] = [];\n\n  if (isLayerSpec(spec)) {\n    specs = spec.layer;\n  } else if (isConcatSpec(spec)) {\n    specs = spec.concat;\n  } else if (isHConcatSpec(spec)) {\n    specs = spec.hconcat;\n  } else if (isVConcatSpec(spec)) {\n    specs = spec.vconcat;\n  }\n\n  return [\n    ...specs\n      .map(innerSpec => {\n        return getData(innerSpec);\n      })\n      .flat(),\n    ...(spec.data ? [spec.data] : []),\n  ];\n}\n\nexport function containsDifferentData(spec: IRawSpec): boolean {\n  const datasets = getData(spec);\n  if (datasets.length === 0) return true;\n  const check = datasets[0];\n  for (const dataset of datasets) {\n    if (!R.equals(dataset, check)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function extractData(spec: IRawSpec): { spec: {}; data: IRawData[] } {\n  return _extractData(jsonCopy(spec));\n}\n\nfunction _extractData(spec: IRawSpec): { spec: {}; data: IRawData[] } {\n  if (isUnitSpec(spec)) {\n    const { data, ...newSpec } = spec;\n    return { data: data ? [data] : [], spec: newSpec };\n  }\n  if (isRepeatSpec(spec) || isFacetSpec(spec)) {\n    const { data } = spec;\n    const { data: extractedData, spec: extractedSpec } = _extractData(\n      spec.spec\n    );\n    spec.spec = extractedSpec;\n    return { data: [...(data ? [data] : []), ...extractedData], spec };\n  }\n\n  let key: string = '';\n  if (isLayerSpec(spec)) {\n    key = 'layer';\n  } else if (isConcatSpec(spec)) {\n    key = 'concat';\n  } else if (isHConcatSpec(spec)) {\n    key = 'hconcat';\n  } else if (isVConcatSpec(spec)) {\n    key = 'vconcat';\n  }\n\n  const { data } = spec;\n  const outputData: IRawData[] = data ? [data] : [];\n  for (let i = 0; i < spec[key].length; i++) {\n    const { data: extractedData, spec: extractedSpec } = _extractData(\n      spec[key][i]\n    );\n    outputData.push(...extractedData);\n    spec[key][i] = extractedSpec;\n  }\n  return { data: outputData, spec };\n}\n\nexport function findViewInArray(id: number, views: View[], currentView: View) {\n  if (id === currentView.id) return { parent: null, view: currentView };\n  for (const view of views) {\n    const result = view.findView(id);\n    if (result !== null) {\n      return result.parent !== null\n        ? result\n        : { ...result, parent: currentView };\n    }\n  }\n  return null;\n}\n\nexport function replaceViewInArray(\n  view: View,\n  views: View[],\n  id: number\n): boolean {\n  for (let i = 0; i < views.length; i++) {\n    if (views[i].id === id) {\n      views[i] = view;\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function jsonCopy(obj: {}) {\n  return JSON.parse(JSON.stringify(obj));\n}\n","import { jsonCopy } from './Utils';\n\nlet idCounter = 1;\n\nexport abstract class View {\n  protected _id: number;\n  private _type: ViewType;\n\n  constructor(type: ViewType) {\n    // NOTE: if possible, get rid of this mutation, but if not, that's fine\n    this._id = idCounter++;\n    this._type = type;\n  }\n\n  public get type(): ViewType {\n    return this._type;\n  }\n\n  public get id(): number {\n    return this._id;\n  }\n\n  /**\n   * export Vega-Lite spec in vl.json format\n   * @returns exported Vega-Lite spec\n   */\n  abstract export(): object;\n\n  abstract clone(): View;\n\n  abstract deepClone(): View;\n\n  abstract findView(id: number): { parent: View | null; view: View } | null;\n\n  abstract replaceChild(view: View, id: number): boolean;\n}\n\n/**\n * An indicator for a view in CompositView.\n * Concat and Layer need a View and UnitView to indicate the appearance of the view,\n * while Repeat only need a string that specify a field to indicate\n * the appearance of the view.\n * Facet only need a field name for each axis to specify facet property, so\n * it should not have a parameter. Thus, we use null.\n * TODO: explain this better!\n */\ntype ViewIndicator = View | string | null;\n\nexport abstract class CompositeView<V extends ViewIndicator> extends View {\n  /**\n   * Move subview at the position `from` to position `to`.\n   * For example: in composite view with 4 subviews [0, 1, 2, 3], calling\n   * rearrange(2, 0) result in the rearrangement of the subview to [2, 0, 1, 3]\n   * @param {number} form the index of the view to be moved from.\n   * @param {number} to the index of the view to be moved to.\n   * @param {any} option an extra option for rearrangement.\n   */\n  abstract rearrange(from: number, to: number, option: any): void;\n\n  /**\n   * Append another view with a ViewIdicator `viewIndicator`\n   * @param {V} viewIndicator the ViewIndicator to be appended.\n   * @param {any} option an extra option for appending.\n   */\n  abstract append(viewIndicator: V, option: any): void;\n\n  /**\n   * Prepend another view with a ViewIdicator `viewIndicator`\n   * @param {V} viewIndicator the ViewIndicator to be prepended.\n   * @param {any} option an extra option for appending.\n   */\n  abstract prepend(viewIndicator: V, option: any): void;\n\n  /**\n   * Remove a view from composite view\n   * @param {number} the index of the view to be removed\n   * @param {any} option an extra option for removing\n   */\n  abstract remove(index: number, option: any): void;\n\n  /**\n   * Check if `viewIndicator` is competible with the current view\n   * @param {V} viewIndicator a view indicator to be checked\n   * @returns true if `viewIndicator` is competible with the current view\n   *          false otherwise.\n   */\n  abstract isCompatible(viewIndicator: V): boolean;\n\n  abstract getSubViews(): View[];\n}\n\nexport class UnitView extends View {\n  private spec: IRawSpec;\n\n  /**\n   * Construct a unit view with a valid Vega-Lite spec.\n   * @param {object} spec Vega-Lite spec\n   */\n  public constructor(spec: IRawSpec) {\n    super('unit');\n    this.spec = spec;\n  }\n\n  public edit(spec: IRawSpec) {\n    this.spec = spec;\n  }\n\n  public export() {\n    return jsonCopy(this.spec);\n  }\n\n  public clone() {\n    const cloned = new UnitView(this.spec);\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new UnitView(jsonCopy(this.spec));\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return this._id === id ? { parent: null, view: this } : null;\n  }\n\n  public replaceChild(_view: View, _id: number): boolean {\n    throw new Error('UnitView cannot replace child');\n  }\n\n  public getEncoding() {\n    return this.spec['encoding'];\n  }\n}\n","import { CompositeView, UnitView } from './View';\nimport { moveElement, findViewInArray, replaceViewInArray } from './Utils';\n\nexport class LayerView extends CompositeView<UnitView> {\n  private layer: UnitView[];\n\n  public constructor() {\n    super('layer');\n    this.layer = [];\n  }\n\n  public export() {\n    return { layer: this.layer.map(l => l.export()) };\n  }\n\n  public append(view: UnitView) {\n    this.layer.push(view);\n  }\n\n  public prepend(view: UnitView) {\n    this.layer.unshift(view);\n  }\n\n  public remove(index: number) {\n    this.layer.splice(index, 1);\n  }\n\n  public isCompatible(view: UnitView): boolean {\n    const spec = view.export();\n    return (\n      !spec['spec'] &&\n      !spec['layer'] &&\n      !spec['concat'] &&\n      !spec['hconcat'] &&\n      !spec['vconcat']\n    );\n  }\n\n  public rearrange(from: number, to: number) {\n    moveElement(this.layer, from, to);\n  }\n\n  public clone() {\n    const cloned = new LayerView();\n    cloned._id = this._id;\n    cloned.layer = [...this.layer];\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new LayerView();\n    cloned._id = this._id;\n    cloned.layer = this.layer.map(view => view.deepClone());\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return findViewInArray(id, this.layer, this);\n  }\n\n  public replaceChild(view: View, id: number) {\n    return replaceViewInArray(view, this.layer, id);\n  }\n\n  public getEncoding() {\n    return this.layer.map(l => l.getEncoding());\n  }\n\n  public getSubViews(): View[] {\n    return [...this.layer];\n  }\n}\n","import { Dispatch } from 'react';\nimport { AnyAction } from 'redux';\n\nexport const operateFactory = (\n  dispatch: Dispatch<AnyAction>,\n  operands: number[]\n) => {\n  return (operator: Operator, extra?: ExtraOperator) => {\n    // make sure that disabled functions properly, and we won't need to\n    // write a check here\n    dispatch({\n      type: 'operate',\n      operands,\n      operator,\n      ...(extra ? { extra } : {}),\n    });\n  };\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport ErrorOutlineOutlined from '@material-ui/icons/ErrorOutlineOutlined';\nimport { isUnitSpec } from 'vega-lite/build/src/spec';\nimport { LayerView } from '../../SyntaxTree/LayerView';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UnitView } from '../../SyntaxTree/View';\nimport { operateFactory } from './Utils';\nimport { IOperationProps } from '../OperationBar';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { TooltipTable } from '../TooltipTable';\n\nconst useStyles = makeStyles(() => ({\n  buttonNormal: {},\n  buttonWarn: {\n    '&:hover': {\n      backgroundColor: '#ffd800',\n    },\n  },\n  error: {\n    width: 22,\n    height: 22,\n    color: '#ed1c1c',\n  },\n}));\n\nexport const LayerButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n}) => {\n  const classes = useStyles();\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const tree = useSelector((state: IGlobalState) => state.current.tree);\n  const specs = useSelector((state: IGlobalState) => state.current.specs);\n  const operate = operateFactory(useDispatch(), operands);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const layerDisabled = layerDisabledCheck(\n    mainViewOperands,\n    navBarOperands,\n    specs,\n    tree\n  );\n  const layerWarn = layerWarnCheck(\n    layerDisabled,\n    specs,\n    navBarOperands,\n    mainViewOperands,\n    tree\n  );\n\n  const handleClickLayer = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleSelectOption = (option: InsertOrder) => () => {\n    handleMenuClose();\n    operate('layer', option);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      {layerWarn ? (\n        <TooltipTable\n          table={[['Warning', 'Operands have different encoding(s)']]}\n        >\n          <Button\n            onClick={handleClickLayer}\n            className={classes.buttonWarn}\n            aria-owns={anchorEl ? 'layer-menu' : undefined}\n            aria-haspopup=\"true\"\n          >\n            <ErrorOutlineOutlined className={classes.error} /> &nbsp; Layer\n          </Button>\n        </TooltipTable>\n      ) : (\n        <Button\n          onClick={handleClickLayer}\n          disabled={layerDisabled}\n          className={classes.buttonNormal}\n          aria-owns={anchorEl ? 'layer-menu' : undefined}\n          aria-haspopup=\"true\"\n        >\n          Layer\n        </Button>\n      )}\n      <Menu\n        id=\"layer-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <MenuItem onClick={handleSelectOption('prepend')}>Under</MenuItem>\n        <MenuItem onClick={handleSelectOption('append')}>Over</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nfunction layerDisabledCheck(\n  mainViewOperands: number[],\n  navBarOperands: number[],\n  specs: IBaseSpec[],\n  tree: View | null\n): boolean {\n  if (\n    mainViewOperands.length !== 1 ||\n    navBarOperands.length !== 1 ||\n    specs.filter(\n      spec => navBarOperands.includes(spec.id) && !isUnitSpec(spec.spec)\n    ).length !== 0\n  ) {\n    return true;\n  }\n\n  const mainViewOperand = tree!.findView(mainViewOperands[0]);\n  return (\n    mainViewOperand === null ||\n    (!(mainViewOperand.view instanceof LayerView) &&\n      !isUnitSpec(mainViewOperand.view.export()))\n  );\n}\n\nfunction layerWarnCheck(\n  layerDisabled: boolean,\n  specs: IBaseSpec[],\n  navBarOperands: number[],\n  mainViewOperands: number[],\n  tree: View | null\n): boolean {\n  if (layerDisabled) {\n    return false;\n  }\n\n  const encodings: any[] = [];\n  for (const spec of specs) {\n    if (navBarOperands.includes(spec.id)) {\n      encodings.push(new UnitView(spec.spec).getEncoding());\n    }\n  }\n\n  const mainViewOperand = tree!.findView(mainViewOperands[0])!.view;\n  let mainViewEncodings: any[] = [];\n  if (mainViewOperand instanceof UnitView) {\n    mainViewEncodings = [mainViewOperand.getEncoding()];\n  } else if (mainViewOperand instanceof LayerView) {\n    mainViewEncodings = mainViewOperand.getEncoding();\n  }\n\n  const currentEncodingField = {};\n  const currentEncodingType = {};\n  for (const encoding of encodings.concat(mainViewEncodings)) {\n    for (const key of Object.keys(encoding)) {\n      if (\n        key in currentEncodingField &&\n        (currentEncodingField[key] !== encoding[key].field ||\n          (encoding[key].type &&\n            currentEncodingType[key] !== encoding[key].type))\n      ) {\n        return true;\n      }\n      currentEncodingField[key] = encoding[key].field;\n      currentEncodingType[key] = encoding[key].type;\n    }\n  }\n  return false;\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { operateFactory } from './Utils';\nimport { IOperationProps } from '../OperationBar';\nimport { Menu, MenuItem } from '@material-ui/core';\n\nexport const ConcatButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n}) => {\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const operate = operateFactory(useDispatch(), operands);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClickConcat = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleSelectOption = (\n    option: InsertOrder,\n    orient: ConcatOrient\n  ) => () => {\n    handleMenuClose();\n    operate('concat', { option, orient });\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const concatDisabled =\n    mainViewOperands.length !== 1 || navBarOperands.length !== 1;\n\n  return (\n    <>\n      <Button\n        onClick={handleClickConcat}\n        disabled={concatDisabled}\n        aria-owns={anchorEl ? 'layer-menu' : undefined}\n        aria-haspopup=\"true\"\n      >\n        Concat\n      </Button>\n\n      <Menu\n        id=\"layer-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <MenuItem onClick={handleSelectOption('prepend', 'h')}>\n          On Left\n        </MenuItem>\n        <MenuItem onClick={handleSelectOption('append', 'h')}>\n          On Right\n        </MenuItem>\n        <MenuItem onClick={handleSelectOption('prepend', 'v')}>On Top</MenuItem>\n        <MenuItem onClick={handleSelectOption('append', 'v')}>\n          On Bottom\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n","import { CompositeView } from './View';\nimport { moveElement, findViewInArray, jsonCopy } from './Utils';\n\nexport class RepeatView extends CompositeView<string> {\n  private repeatInfo: RepeatInfo;\n  private view: View;\n\n  public constructor(view: View, repeatInfo: RepeatInfo) {\n    super('repeat');\n    this.repeatInfo = repeatInfo;\n    this.view = view;\n  }\n\n  public export() {\n    return {\n      repeat: this.repeatInfo.export(),\n      spec: applyRepeat(this.view.export(), this.repeatInfo),\n    };\n  }\n\n  /**\n   * Add a repeating axis\n   * @param channel encoding channel for the axis to be repeated\n   * @param orient orient of the added axis\n   */\n  public addAxis(channel: string, orient: 'row' | 'column') {\n    this.repeatInfo.addAxis(channel, orient);\n  }\n\n  /**\n   * Remove a repeating axis\n   * @param orient orient of the removed axis\n   */\n  public removeAxis(orient: 'row' | 'column') {\n    this.repeatInfo.removeAxis(orient);\n  }\n\n  public append(field: string, option: 'row' | 'column') {\n    if (this.repeatInfo.isRepeating(option)) {\n      this.repeatInfo[option].push(field);\n    }\n  }\n\n  public prepend(field: string, option: 'row' | 'column') {\n    if (this.repeatInfo.isRepeating(option)) {\n      this.repeatInfo[option].unshift(field);\n    }\n  }\n\n  public remove(index: number, axis: 'row' | 'column') {\n    this.repeatInfo.remove(index, axis);\n  }\n\n  public isCompatible(_: string): boolean {\n    // repeat is always compatible\n    return true;\n  }\n\n  public rearrange(from: number, to: number, option: 'row' | 'column') {\n    if (this.repeatInfo.isRepeating(option)) {\n      moveElement(this.repeatInfo[option], from, to);\n    }\n  }\n\n  public clone() {\n    const cloned = new RepeatView(this.view, this.repeatInfo);\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new RepeatView(\n      this.view.deepClone(),\n      this.repeatInfo.clone()\n    );\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return findViewInArray(id, [this.view], this);\n  }\n\n  public replaceChild(view: View, id: number) {\n    if (this.view.id === id) {\n      this.view = view;\n      return true;\n    }\n    return false;\n  }\n\n  public getSubViews(): View[] {\n    return [this.view];\n  }\n\n  public changeInfo(info: RepeatInfo) {\n    this.repeatInfo = info;\n  }\n\n  public getInfo() {\n    return this.repeatInfo.clone();\n  }\n}\n\ninterface ChannelInfo {\n  rowChannel?: string;\n  columnChannel?: string;\n}\n\n/**\n * This class contains information for repeat\n */\nexport class RepeatInfo {\n  public row: string[];\n  public column: string[];\n  public rowChannel?: string;\n  public columnChannel?: string;\n\n  public constructor(row: string[], column: string[], info: ChannelInfo) {\n    this.row = info.rowChannel ? row : [];\n    this.column = info.columnChannel ? column : [];\n    this.rowChannel = info.rowChannel;\n    this.columnChannel = info.columnChannel;\n  }\n\n  /**\n   * Add an orient to repeat `channel`\n   * @param orient an orient to be added\n   * @param channel the encoding channel the orient is repeating\n   */\n  public repeat(orient: 'row' | 'column', channel: string) {\n    if (!this.isRepeating(orient)) {\n      this[orient] = [];\n      (this as any)[`${orient}Channel`] = channel;\n    }\n  }\n\n  /**\n   * Check if repeating the `axis`\n   * @param orient orient to be checked if repeating\n   */\n  public isRepeating(orient: 'row' | 'column'): boolean {\n    return !!(this as any)[`${orient}Channel`];\n  }\n\n  public export() {\n    return {\n      ...(this.isRepeating('row') ? { row: jsonCopy(this.row) } : {}),\n      ...(this.isRepeating('column') ? { column: jsonCopy(this.column) } : {}),\n    };\n  }\n\n  public remove(index: number, axis: 'row' | 'column') {\n    this[axis].splice(index, 1);\n  }\n\n  /**\n   * Add a repeating axis\n   * @param channel encoding channel for the axis to be repeated\n   * @param orient orient of the added axis\n   */\n  public addAxis(channel: string, orient: 'row' | 'column') {\n    this[orient] = [];\n    (this as any)[`${orient}Channel`] = channel;\n  }\n\n  /**\n   * Remove a repeating axis\n   * @param orient orient of the removed axis\n   */\n  public removeAxis(orient: 'row' | 'column') {\n    this[orient] = [];\n    (this as any)[`${orient}Channel`] = undefined;\n  }\n\n  public getChannelInfo(): ChannelInfo {\n    return {\n      ...(this.rowChannel ? { rowChannel: this.rowChannel } : {}),\n      ...(this.columnChannel ? { columnChannel: this.columnChannel } : {}),\n    };\n  }\n\n  public clone() {\n    return new RepeatInfo(this.row, this.column, {\n      ...(this.rowChannel ? { rowChannel: this.rowChannel } : {}),\n      ...(this.columnChannel ? { columnChannel: this.columnChannel } : {}),\n    });\n  }\n}\n\n/**\n * list of keys for nested spec\n */\nconst nestedTypes = ['layer', 'concat', 'hconcat', 'vconcat', 'spec'];\n\n/**\n * Apply repeat information `repeat` to `spec`\n * @param spec the spec the repeat information `repeat` to be applied\n * @param repeat the repeat information to apply to `spec`\n */\nfunction applyRepeat(spec: any, repeat: RepeatInfo) {\n  let nestedType: string | undefined = undefined;\n  nestedTypes.forEach(type => {\n    if (spec[type]) {\n      nestedType = type;\n    }\n  });\n\n  const {\n    [nestedType || '$invalid-vl-field$']: nestedSpecs,\n    ...output\n  } = jsonCopy(spec);\n  if (nestedType) {\n    output[nestedType] = nestedSpecs.map((nestedSpec: any) =>\n      applyRepeat(nestedSpec, repeat)\n    );\n  }\n\n  if (output.encoding) {\n    applyRepeatToEncoding(output.encoding, repeat);\n  }\n  return output;\n}\n\n/**\n * Apply repeat information `repeat` to `encoding`\n * @param encoding the encoding repeat information `repeat` to be applied\n * @param repeat the repeat information applying\n */\nfunction applyRepeatToEncoding(encoding: any, repeat: RepeatInfo) {\n  if (repeat.rowChannel && encoding[repeat.rowChannel]) {\n    encoding[repeat.rowChannel].field = { repeat: 'row' };\n  }\n  if (repeat.columnChannel && encoding[repeat.columnChannel]) {\n    encoding[repeat.columnChannel].field = { repeat: 'column' };\n  }\n}\n","import React, { useState, SetStateAction } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { operateFactory } from '../operations/Utils';\nimport {\n  Dialog,\n  DialogTitle,\n  IconButton,\n  DialogActions,\n  DialogContent,\n  Checkbox,\n  TextField,\n  DialogContentText,\n} from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport Remove from '@material-ui/icons/Remove';\nimport Add from '@material-ui/icons/Add';\nimport makeStyles from '@material-ui/styles/makeStyles';\nimport { RepeatInfo } from '../../SyntaxTree/RepeatView';\n\nexport interface IPopupRepeatOptionProps {\n  isOpen: boolean;\n  onClose: () => void;\n  currentRepeat?: RepeatInfo;\n}\n\nconst useStyles = makeStyles(() => ({\n  channel: {\n    width: 80,\n  },\n  fieldText: {\n    minWidth: 100,\n  },\n  fieldTexts: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: 200,\n  },\n  addAndRemove: {\n    top: 10,\n    width: 40,\n    height: 40,\n  },\n  checkBox: {\n    top: 10,\n    width: 30,\n    height: 30,\n  },\n  axisConfig: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'flex-start',\n  },\n}));\n\nexport const PopupRepeatOption: React.FC<IPopupRepeatOptionProps> = ({\n  isOpen,\n  onClose,\n  currentRepeat,\n}) => {\n  const classes = useStyles();\n  const [checkRow, setCheckRow] = useState(false);\n  const [checkColumn, setCheckColumn] = useState(false);\n  const [rowFields, setRowFields] = useState<string[]>(['']);\n  const [rowChannel, setRowChannel] = useState('');\n  const [columnFields, setColumnFields] = useState<string[]>(['']);\n  const [columnChannel, setColumnChannel] = useState('');\n\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const dispatch = useDispatch();\n  const operate = operateFactory(dispatch, operands);\n\n  const handleEntering = () => {\n    setCheckRow(false);\n    setCheckColumn(false);\n    setRowFields(['']);\n    setRowChannel('');\n    setColumnFields(['']);\n    setColumnChannel('');\n\n    if (currentRepeat) {\n      if (currentRepeat.isRepeating('row')) {\n        setCheckRow(true);\n        setRowFields(currentRepeat.row);\n        setRowChannel(currentRepeat.rowChannel as string);\n      }\n      if (currentRepeat.isRepeating('column')) {\n        setCheckColumn(true);\n        setColumnFields(currentRepeat.column);\n        setColumnChannel(currentRepeat.columnChannel as string);\n      }\n    }\n  };\n\n  const operateDisabled = () =>\n    (!(checkRow && rowFields.length !== 0 && rowChannel !== '') &&\n      !(checkColumn && columnFields.length !== 0 && columnChannel !== '')) ||\n    ((checkRow && (rowFields.length === 0 || rowChannel === '')) ||\n      (checkColumn && (columnFields.length === 0 || columnChannel === '')));\n\n  const handleTextChangeFactory = (\n    current: string[],\n    setter: React.Dispatch<React.SetStateAction<string[]>>,\n    index: number\n  ) => event => {\n    const newFields = [...current];\n    newFields[index] = event.target.value;\n    setter(newFields);\n  };\n\n  const axisConfigFactory = (\n    check: boolean,\n    checkSetter: React.Dispatch<SetStateAction<boolean>>,\n    channel: string,\n    channelSetter: React.Dispatch<SetStateAction<string>>,\n    fields: string[],\n    fieldsSetter: React.Dispatch<SetStateAction<string[]>>,\n    axis: string\n  ) => (\n    <div className={classes.axisConfig}>\n      <Checkbox\n        checked={check}\n        onChange={() => checkSetter(!check)}\n        className={classes.checkBox}\n      />\n      <TextField\n        label=\"Channel\"\n        value={channel}\n        onChange={event => channelSetter(event.target.value)}\n        className={classes.channel}\n      />\n      &nbsp; &nbsp;\n      <div className={classes.fieldTexts}>\n        {fields.map((field, index) => (\n          <TextField\n            label={`${axis} Field`}\n            value={field}\n            onChange={handleTextChangeFactory(fields, fieldsSetter, index)}\n            className={classes.fieldText}\n          />\n        ))}\n      </div>\n      &nbsp; &nbsp;\n      <IconButton\n        onClick={() => fieldsSetter([...fields, ''])}\n        className={classes.addAndRemove}\n      >\n        <Add />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          if (fields.length > 1) {\n            const newFields = [...fields];\n            newFields.splice(-1);\n            fieldsSetter(newFields);\n          }\n        }}\n        className={classes.addAndRemove}\n      >\n        <Remove />\n      </IconButton>\n    </div>\n  );\n\n  const handleRepeat = () => {\n    const info = new RepeatInfo(rowFields, columnFields, {\n      rowChannel,\n      columnChannel,\n    });\n    if (currentRepeat) {\n      dispatch({ type: 'modify-info', operand: operands[0], info });\n    } else {\n      operate('repeat', info);\n    }\n    onClose();\n  };\n\n  const handleDecompose = () => {\n    dispatch({\n      type: 'decompose',\n      operand: operands[0],\n    });\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onEntering={handleEntering}\n      aria-labelledby=\"repeat-dialog-title\"\n    >\n      <DialogTitle id=\"repeat-dialog-title\">\n        <>Repeat</>\n        <IconButton\n          onClick={onClose}\n          style={{ right: 10, top: 7, position: 'absolute' }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Choose Field(s) and Encoding Channel(s) to repeat.\n        </DialogContentText>\n        {axisConfigFactory(\n          checkRow,\n          setCheckRow,\n          rowChannel,\n          setRowChannel,\n          rowFields,\n          setRowFields,\n          'Row'\n        )}\n        {axisConfigFactory(\n          checkColumn,\n          setCheckColumn,\n          columnChannel,\n          setColumnChannel,\n          columnFields,\n          setColumnFields,\n          'Column'\n        )}\n      </DialogContent>\n      <DialogActions>\n        {currentRepeat ? (\n          <Button onClick={handleDecompose} color=\"secondary\">\n            Decompose\n          </Button>\n        ) : (\n          <></>\n        )}\n        <Button onClick={handleRepeat} autoFocus disabled={operateDisabled()}>\n          Repeat\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { IOperationProps, useWarningStyles } from '../OperationBar';\nimport { PopupRepeatOption } from '../popups/PopupRepeatOption';\nimport { containsDifferentData } from '../../SyntaxTree/Utils';\nimport ErrorOutlineOutlined from '@material-ui/icons/ErrorOutlineOutlined';\nimport { TooltipTable } from '../TooltipTable';\n\nexport const RepeatButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n  tree,\n}) => {\n  const classes = useWarningStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const repeatDisabled =\n    mainViewOperands.length !== 1 || navBarOperands.length > 0;\n\n  const repeatWarn =\n    !repeatDisabled &&\n    containsDifferentData(tree!\n      .findView(mainViewOperands[0])!\n      .view.export() as IRawSpec);\n\n  return (\n    <>\n      {repeatWarn ? (\n        <TooltipTable\n          table={[['Warning', 'Not all views are using the same data source']]}\n        >\n          <Button\n            onClick={() => setIsOpen(true)}\n            className={classes.buttonWarn}\n          >\n            <ErrorOutlineOutlined className={classes.error} /> &nbsp; Repeat\n          </Button>\n        </TooltipTable>\n      ) : (\n        <Button\n          onClick={() => setIsOpen(true)}\n          disabled={repeatDisabled}\n          className={classes.buttonNormal}\n        >\n          Repeat\n        </Button>\n      )}\n      <PopupRepeatOption isOpen={isOpen} onClose={() => setIsOpen(false)} />\n    </>\n  );\n};\n","import { View, CompositeView } from './View';\nimport { jsonCopy, findViewInArray, extractData } from './Utils';\n\nexport class FacetView extends CompositeView<null> {\n  private view: View;\n  private facetInfo: FacetInfo;\n\n  public constructor(view: View, facetInfo: FacetInfo) {\n    super('facet');\n    this.facetInfo = facetInfo;\n    this.view = view;\n  }\n\n  public export() {\n    // need a better way to extract data from composed specs\n    const { data, ...spec } = extractData(this.view.export() as IRawSpec);\n    return {\n      data: data[0],\n      facet: this.facetInfo.export(),\n      ...spec,\n    };\n  }\n\n  public append(_: null, option: {}) {\n    // add facet to an available axis\n    if (!this.facetInfo['column']) {\n      this.facetInfo.column = option;\n    } else if (!this.facetInfo['row']) {\n      this.facetInfo.row = option;\n    }\n  }\n\n  public prepend() {\n    throw new Error('prepend is not supported for FacetView');\n  }\n\n  public remove(_: number, axis: 'row' | 'column') {\n    this.facetInfo.remove(axis);\n  }\n\n  public isCompatible(_: any): boolean {\n    // facet is always compatible\n    return true;\n  }\n\n  public rearrange() {\n    // switch between row and column\n    if (this.facetInfo['row'] && this.facetInfo['column']) {\n      this.facetInfo.swapAxis();\n    }\n  }\n\n  public clone() {\n    const cloned = new FacetView(this.view, this.facetInfo);\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new FacetView(this.view.deepClone(), this.facetInfo.clone());\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return findViewInArray(id, [this.view], this);\n  }\n\n  public replaceChild(view: View, id: number) {\n    if (this.view.id === id) {\n      this.view = view;\n      return true;\n    }\n    return false;\n  }\n\n  public getSubViews(): View[] {\n    return [this.view];\n  }\n\n  public changeInfo(info: FacetInfo) {\n    this.facetInfo = info;\n  }\n\n  public getInfo() {\n    return this.facetInfo.clone();\n  }\n}\n\n/**\n * This class contains information for facet\n */\nexport class FacetInfo {\n  row?: {};\n  column?: {};\n\n  constructor(info: { row?: {}; column?: {} }) {\n    this.row = info.row;\n    this.column = info.column;\n  }\n\n  public export() {\n    return {\n      ...(this.row ? { row: this.row } : {}),\n      ...(this.column ? { column: this.column } : {}),\n    };\n  }\n\n  public swapAxis() {\n    [this.row, this.column] = [this.column, this.row];\n  }\n\n  public remove(axis: 'row' | 'column') {\n    this[axis] = undefined;\n  }\n\n  public clone() {\n    return new FacetInfo({\n      ...(this.row ? { row: jsonCopy(this.row) } : {}),\n      ...(this.column ? { column: jsonCopy(this.column) } : {}),\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { FacetInfo } from '../../SyntaxTree/FacetView';\nimport { operateFactory } from '../operations/Utils';\nimport {\n  Dialog,\n  DialogTitle,\n  IconButton,\n  DialogActions,\n  DialogContent,\n  Checkbox,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  DialogContentText,\n} from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport makeStyles from '@material-ui/styles/makeStyles';\n\nexport interface IPopupFacetOptionProps {\n  isOpen: boolean;\n  onClose: () => void;\n  currentFacet?: FacetInfo;\n}\n\nconst useStyles = makeStyles(() => ({\n  typeSelector: {\n    minWidth: 60,\n  },\n  checkBox: {\n    top: 10,\n  },\n}));\n\nexport const PopupFacetOption: React.FC<IPopupFacetOptionProps> = ({\n  isOpen,\n  onClose,\n  currentFacet,\n}) => {\n  const classes = useStyles();\n  const [checkRow, setCheckRow] = useState(false);\n  const [checkColumn, setCheckColumn] = useState(false);\n  const [rowField, setRowField] = useState('');\n  const [rowType, setRowType] = useState('');\n  const [columnField, setColumnField] = useState('');\n  const [columnType, setColumnType] = useState('');\n\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const dispatch = useDispatch();\n  const operate = operateFactory(dispatch, operands);\n\n  const handleEntering = () => {\n    setCheckRow(false);\n    setCheckColumn(false);\n    setRowField('');\n    setRowType('');\n    setColumnField('');\n    setColumnType('');\n\n    if (currentFacet) {\n      if (currentFacet['row']) {\n        setCheckRow(true);\n        setRowField(currentFacet['row']['field']);\n        setRowType(currentFacet['row']['type']);\n      }\n      if (currentFacet['column']) {\n        setCheckColumn(true);\n        setColumnField(currentFacet['column']['field']);\n        setColumnType(currentFacet['column']['type']);\n      }\n    }\n  };\n\n  const axisConfigFactory = (\n    check: boolean,\n    checkSetter: React.Dispatch<React.SetStateAction<boolean>>,\n    field: string,\n    fieldSetter: React.Dispatch<React.SetStateAction<string>>,\n    type: string,\n    typeSetter: React.Dispatch<React.SetStateAction<string>>,\n    axis: 'Row' | 'Column'\n  ) => (\n    <div>\n      <Checkbox\n        checked={check}\n        onChange={() => checkSetter(!check)}\n        className={classes.checkBox}\n      />\n      <TextField\n        label={`${axis} Field`}\n        value={field}\n        onChange={event => fieldSetter(event.target.value)}\n      />\n      &nbsp; &nbsp;\n      <FormControl>\n        <InputLabel htmlFor=\"row-type\">Type</InputLabel>\n        <Select\n          value={type}\n          onChange={event => typeSetter(event.target.value as string)}\n          inputProps={{\n            name: 'type',\n            id: 'row-type',\n          }}\n          className={classes.typeSelector}\n        >\n          <MenuItem value={'nominal'}>Nominal</MenuItem>\n          <MenuItem value={'ordinal'}>Ordinal</MenuItem>\n          <MenuItem value={'quantitative'}>Quantitative</MenuItem>\n          <MenuItem value={'temporal'}>Temporal</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n\n  const handleFacet = () => {\n    const info = new FacetInfo({\n      ...(checkColumn\n        ? { column: { field: columnField, type: columnType } }\n        : {}),\n      ...(checkRow ? { row: { field: rowField, type: rowType } } : {}),\n    });\n    if (currentFacet) {\n      dispatch({ type: 'modify-info', operand: operands[0], info });\n    } else {\n      operate('facet', info);\n    }\n    onClose();\n  };\n\n  const handleDecompose = () => {\n    dispatch({\n      type: 'decompose',\n      operand: operands[0],\n    });\n    onClose();\n  };\n\n  const operateDisabled = () =>\n    (!(checkRow && rowField !== '' && rowType !== '') &&\n      !(checkColumn && columnField !== '' && columnType !== '')) ||\n    ((checkRow && (rowField === '' || rowType === '')) ||\n      (checkColumn && (columnField === '' || columnType === '')));\n\n  return (\n    <Dialog\n      open={isOpen}\n      onEntering={handleEntering}\n      aria-labelledby=\"facet-dialog-title\"\n    >\n      <DialogTitle id=\"facet-dialog-title\">\n        <>Facet</>\n        <IconButton\n          onClick={onClose}\n          style={{ right: 10, top: 7, position: 'absolute' }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Choose Field(s) and Type(s) to facet.\n        </DialogContentText>\n        {axisConfigFactory(\n          checkRow,\n          setCheckRow,\n          rowField,\n          setRowField,\n          rowType,\n          setRowType,\n          'Row'\n        )}\n        {axisConfigFactory(\n          checkColumn,\n          setCheckColumn,\n          columnField,\n          setColumnField,\n          columnType,\n          setColumnType,\n          'Column'\n        )}\n      </DialogContent>\n      <DialogActions>\n        {currentFacet ? (\n          <Button onClick={handleDecompose} color=\"secondary\">\n            Decompose\n          </Button>\n        ) : (\n          <></>\n        )}\n        <Button onClick={handleFacet} autoFocus disabled={operateDisabled()}>\n          Facet\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { PopupFacetOption } from '../popups/PopupFacetOption';\nimport { IOperationProps, useWarningStyles } from '../OperationBar';\nimport { containsDifferentData } from '../../SyntaxTree/Utils';\nimport ErrorOutlineOutlined from '@material-ui/icons/ErrorOutlineOutlined';\nimport { TooltipTable } from '../TooltipTable';\n\nexport const FacetButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n  tree,\n}) => {\n  const classes = useWarningStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const facetDisabled =\n    mainViewOperands.length !== 1 || navBarOperands.length > 0;\n\n  const facetWarn =\n    !facetDisabled &&\n    containsDifferentData(tree!\n      .findView(mainViewOperands[0])!\n      .view.export() as IRawSpec);\n\n  return (\n    <>\n      {facetWarn ? (\n        <TooltipTable\n          table={[['Warning', 'Not all views are using the same data source']]}\n        >\n          <Button\n            onClick={() => setIsOpen(true)}\n            className={classes.buttonWarn}\n          >\n            <ErrorOutlineOutlined className={classes.error} /> &nbsp; Facet\n          </Button>\n        </TooltipTable>\n      ) : (\n        <Button\n          onClick={() => setIsOpen(true)}\n          disabled={facetDisabled}\n          className={classes.buttonNormal}\n        >\n          Facet\n        </Button>\n      )}\n      <PopupFacetOption isOpen={isOpen} onClose={() => setIsOpen(false)} />\n    </>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { operateFactory } from './Utils';\nimport { IOperationProps } from '../OperationBar';\n\nexport const PlaceButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n}) => {\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const tree = useSelector((state: IGlobalState) => state.current.tree);\n\n  const operate = operateFactory(useDispatch(), operands);\n\n  const placeDisabled =\n    tree !== null || mainViewOperands.length > 0 || navBarOperands.length !== 1;\n\n  return (\n    <Button onClick={() => operate('place')} disabled={placeDisabled}>\n      Place\n    </Button>\n  );\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Launch from '@material-ui/icons/Launch';\n\nexport interface IExportButtonProps {\n  tree: View | null;\n}\n\nexport const ExportButton: React.FC<IExportButtonProps> = ({ tree }) => {\n  const exportDisabled = tree === null;\n  const doanloadJson = () => {\n    const element = document.createElement('a');\n    const file = new Blob([JSON.stringify(tree!.export(), null, 2)], {\n      type: 'application/json',\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = 'visualization.json';\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  return (\n    <Button onClick={doanloadJson} color=\"primary\" disabled={exportDisabled}>\n      <Launch /> &nbsp; Export\n    </Button>\n  );\n};\n","import React, { SetStateAction } from 'react';\nimport { VegaLite } from '../VegaLite';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { borderWidth } from '../../variables';\n\nexport interface IViewPreviewProps {\n  view: View;\n  selectedSubViewId: number | null;\n  setSelectedSubViewId: React.Dispatch<SetStateAction<number | null>>;\n}\nconst useStyles = makeStyles(() => ({\n  preview: {\n    border: borderWidth,\n    borderColor: ((active: boolean) =>\n      active ? '#3caea3' : 'lightgrey') as any,\n    borderStyle: 'solid',\n    '&:hover': {\n      borderColor: ((active: boolean) =>\n        active ? '#3caea3' : 'darkgrey') as any,\n    },\n    '&:active': {\n      borderColor: 'grey',\n    },\n  },\n}));\n\nexport const ViewPreview: React.FC<IViewPreviewProps> = ({\n  view,\n  selectedSubViewId,\n  setSelectedSubViewId,\n}) => {\n  const classes = useStyles(selectedSubViewId === view.id);\n\n  const onToggleActive = () => {\n    setSelectedSubViewId(selectedSubViewId !== view.id ? view.id : null);\n  };\n\n  return (\n    <div className={classes.preview} onClick={onToggleActive}>\n      <VegaLite spec={view.export()} />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport {\n  Dialog,\n  DialogTitle,\n  IconButton,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  Switch,\n} from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport { ConcatView } from '../../SyntaxTree/ConcatView';\nimport { ViewPreview } from '../operations/ViewPreview';\nimport makeStyles from '@material-ui/styles/makeStyles';\n\nexport interface IPopupConcatOptionProps {\n  isOpen: boolean;\n  onClose: () => void;\n  tree: View | null;\n}\n\nconst useStyles = makeStyles(() => ({\n  views: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: (direction => (direction ? 'row' : 'column')) as any,\n    alignItems: 'center',\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    paddingLeft: 20,\n  },\n}));\n\nexport const PopupConcatOption: React.FC<IPopupConcatOptionProps> = ({\n  isOpen,\n  onClose,\n  tree,\n}) => {\n  const [subViewIdsOrder, setSubViewIdsOrder] = useState<number[]>([]);\n  const [currentOrient, setCurrentOrient] = useState<ConcatOrient>('h');\n  const [subViewsMap, setSubViewsMap] = useState({});\n  const [selectedSubViewId, setSelectedSubViewId] = useState<number | null>(\n    null\n  );\n  const classes = useStyles(currentOrient === 'h');\n\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const dispatch = useDispatch();\n\n  const handleEntering = () => {\n    const { view } = tree!.findView(operands[0])!;\n    const subViews = (view as ConcatView).getSubViews();\n    const _subViewMap = {};\n    subViews.forEach(subView => {\n      _subViewMap[subView.id] = subView;\n    });\n    setSubViewsMap(_subViewMap);\n    setSubViewIdsOrder(subViews.map(subViews => subViews.id));\n    setCurrentOrient((view as ConcatView).getOrient());\n    setSelectedSubViewId(null);\n  };\n\n  const handleOrientChange = event => {\n    setCurrentOrient(event.target.checked ? 'h' : 'v');\n  };\n\n  const handleMoveFront = () => {\n    for (let i = 1; i < subViewIdsOrder.length; i++) {\n      if (subViewIdsOrder[i] === selectedSubViewId) {\n        const newOrder = [...subViewIdsOrder];\n        newOrder[i - 1] = subViewIdsOrder[i];\n        newOrder[i] = subViewIdsOrder[i - 1];\n        setSubViewIdsOrder(newOrder);\n        return;\n      }\n    }\n  };\n\n  const handleMoveBack = () => {\n    for (let i = 0; i < subViewIdsOrder.length - 1; i++) {\n      if (subViewIdsOrder[i] === selectedSubViewId) {\n        const newOrder = [...subViewIdsOrder];\n        newOrder[i + 1] = subViewIdsOrder[i];\n        newOrder[i] = subViewIdsOrder[i + 1];\n        setSubViewIdsOrder(newOrder);\n        return;\n      }\n    }\n  };\n\n  const handleRemove = () => {\n    setSubViewIdsOrder(\n      subViewIdsOrder.filter(subView => subView !== selectedSubViewId)\n    );\n    setSelectedSubViewId(null);\n  };\n\n  const handleConcat = () => {\n    dispatch({\n      type: 'rearrange-subview',\n      operand: operands[0],\n      order: subViewIdsOrder,\n      orient: currentOrient,\n    });\n    onClose();\n  };\n\n  const operateDisabled = subViewIdsOrder.length === 0;\n\n  return (\n    <Dialog\n      open={isOpen}\n      onEntering={handleEntering}\n      aria-labelledby=\"concat-dialog-title\"\n    >\n      <DialogTitle id=\"concat-dialog-title\">\n        <>Concat</>\n        <IconButton\n          onClick={onClose}\n          style={{ right: 10, top: 7, position: 'absolute' }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Rearrange or remove sub views. Or change concat orientation.\n        </DialogContentText>\n        <div className={classes.views}>\n          {subViewIdsOrder.map(subView => (\n            <ViewPreview\n              view={subViewsMap[subView] as View}\n              selectedSubViewId={selectedSubViewId}\n              setSelectedSubViewId={setSelectedSubViewId}\n            />\n          ))}\n        </div>\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <div>\n          {'v'}\n          <Switch\n            checked={currentOrient === 'h'}\n            onChange={handleOrientChange}\n            color=\"default\"\n            inputProps={{ 'aria-label': 'checkbox with default color' }}\n          />\n          {'h'}\n        </div>\n        <div>\n          <IconButton\n            disabled={\n              selectedSubViewId === null ||\n              selectedSubViewId === subViewIdsOrder[0]\n            }\n            onClick={handleMoveFront}\n          >\n            {currentOrient === 'h' ? <ArrowBack /> : <ArrowUpward />}\n          </IconButton>\n          <IconButton\n            disabled={\n              selectedSubViewId === null ||\n              selectedSubViewId === subViewIdsOrder[subViewIdsOrder.length - 1]\n            }\n            onClick={handleMoveBack}\n          >\n            {currentOrient === 'h' ? <ArrowForward /> : <ArrowDownward />}\n          </IconButton>\n        </div>\n        <div>\n          <Button\n            onClick={handleRemove}\n            color=\"secondary\"\n            disabled={selectedSubViewId === null || subViewIdsOrder.length <= 1}\n          >\n            Remove\n          </Button>\n          <Button onClick={handleConcat} autoFocus disabled={operateDisabled}>\n            Concat\n          </Button>\n        </div>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport {\n  Dialog,\n  DialogTitle,\n  IconButton,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport { ViewPreview } from '../operations/ViewPreview';\nimport { LayerView } from '../../SyntaxTree/LayerView';\nimport makeStyles from '@material-ui/styles/makeStyles';\n\nexport interface IPopupLayerOptionProps {\n  isOpen: boolean;\n  onClose: () => void;\n  tree: View | null;\n}\n\nconst useStyles = makeStyles(() => ({\n  views: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    paddingLeft: 20,\n  },\n}));\n\nexport const PopupLayerOption: React.FC<IPopupLayerOptionProps> = ({\n  isOpen,\n  onClose,\n  tree,\n}) => {\n  const classes = useStyles();\n  const [subViewIdsOrder, setSubViewIdsOrder] = useState<number[]>([]);\n  const [subViewsMap, setSubViewsMap] = useState({});\n  const [selectedSubViewId, setSelectedSubViewId] = useState<number | null>(\n    null\n  );\n\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const dispatch = useDispatch();\n\n  const handleEntering = () => {\n    const { view } = tree!.findView(operands[0])!;\n    const subViews = (view as LayerView).getSubViews();\n    const _subViewMap = {};\n    subViews.forEach(subView => {\n      _subViewMap[subView.id] = subView;\n    });\n    setSubViewsMap(_subViewMap);\n    setSubViewIdsOrder(subViews.map(subViews => subViews.id));\n    setSelectedSubViewId(null);\n  };\n\n  const handleMoveFront = () => {\n    for (let i = 1; i < subViewIdsOrder.length; i++) {\n      if (subViewIdsOrder[i] === selectedSubViewId) {\n        const newOrder = [...subViewIdsOrder];\n        newOrder[i - 1] = subViewIdsOrder[i];\n        newOrder[i] = subViewIdsOrder[i - 1];\n        setSubViewIdsOrder(newOrder);\n        return;\n      }\n    }\n  };\n\n  const handleMoveBack = () => {\n    for (let i = 0; i < subViewIdsOrder.length - 1; i++) {\n      if (subViewIdsOrder[i] === selectedSubViewId) {\n        const newOrder = [...subViewIdsOrder];\n        newOrder[i + 1] = subViewIdsOrder[i];\n        newOrder[i] = subViewIdsOrder[i + 1];\n        setSubViewIdsOrder(newOrder);\n        return;\n      }\n    }\n  };\n\n  const handleRemove = () => {\n    setSubViewIdsOrder(\n      subViewIdsOrder.filter(subView => subView !== selectedSubViewId)\n    );\n    setSelectedSubViewId(null);\n  };\n\n  const handleLayer = () => {\n    dispatch({\n      type: 'rearrange-subview',\n      operand: operands[0],\n      order: subViewIdsOrder,\n    });\n    onClose();\n  };\n\n  const operateDisabled = subViewIdsOrder.length === 0;\n\n  return (\n    <Dialog\n      open={isOpen}\n      onEntering={handleEntering}\n      aria-labelledby=\"layer-dialog-title\"\n    >\n      <DialogTitle id=\"layer-dialog-title\">\n        <>Layer</>\n        <IconButton\n          onClick={onClose}\n          style={{ right: 10, top: 7, position: 'absolute' }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>Rearrange or remove sub views.</DialogContentText>\n        <div className={classes.views}>\n          {subViewIdsOrder.map(subView => (\n            <ViewPreview\n              view={subViewsMap[subView] as View}\n              selectedSubViewId={selectedSubViewId}\n              setSelectedSubViewId={setSelectedSubViewId}\n            />\n          ))}\n        </div>\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <div>\n          <IconButton\n            disabled={\n              selectedSubViewId === null ||\n              selectedSubViewId === subViewIdsOrder[0]\n            }\n            onClick={handleMoveFront}\n          >\n            <ArrowUpward />\n          </IconButton>\n          <IconButton\n            disabled={\n              selectedSubViewId === null ||\n              selectedSubViewId === subViewIdsOrder[subViewIdsOrder.length - 1]\n            }\n            onClick={handleMoveBack}\n          >\n            <ArrowDownward />\n          </IconButton>\n        </div>\n        <div>\n          <Button\n            onClick={handleRemove}\n            color=\"secondary\"\n            disabled={selectedSubViewId === null || subViewIdsOrder.length <= 1}\n          >\n            Remove\n          </Button>\n          <Button onClick={handleLayer} autoFocus disabled={operateDisabled}>\n            Layer\n          </Button>\n        </div>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Edit from '@material-ui/icons/Edit';\nimport { IOperationProps } from '../OperationBar';\nimport { PopupFacetOption } from '../popups/PopupFacetOption';\nimport { PopupRepeatOption } from '../popups/PopupRepeatOption';\nimport { RepeatView } from '../../SyntaxTree/RepeatView';\nimport { FacetView } from '../../SyntaxTree/FacetView';\nimport { PopupConcatOption } from '../popups/PopupConcatOption';\nimport { PopupLayerOption } from '../popups/PopupLayerOption';\n\nexport interface IEditButtonProps {}\n\nexport const EditButton: React.FC<IOperationProps & IEditButtonProps> = ({\n  navBarOperands,\n  mainViewOperands,\n  tree,\n}) => {\n  const [isLayerPopupOpen, setIsLayerPopupOpen] = useState(false);\n  const [isConcatPopupOpen, setIsConcatPopupOpen] = useState(false);\n  const [isRepeatPopupOpen, setIsRepeatPopupOpen] = useState(false);\n  const [isFacetPopupOpen, setIsFacetPopupOpen] = useState(false);\n\n  const [currentView, setCurrentView] = useState<View | null>(null);\n  const setters = {\n    layer: setIsLayerPopupOpen,\n    concat: setIsConcatPopupOpen,\n    repeat: setIsRepeatPopupOpen,\n    facet: setIsFacetPopupOpen,\n    unit: () => {\n      alert('Edit is currently not working for unit spec');\n    },\n  };\n\n  const exportDisabled =\n    mainViewOperands.length !== 1 ||\n    navBarOperands.length !== 0 ||\n    tree === null;\n\n  const handleClick = () => {\n    const { view } = tree!.findView(mainViewOperands[0])!;\n    setCurrentView(view);\n    setters[view.type](true);\n  };\n\n  return (\n    <>\n      <Button disabled={exportDisabled} onClick={handleClick}>\n        <Edit /> &nbsp; Edit\n      </Button>\n      <PopupLayerOption\n        isOpen={isLayerPopupOpen}\n        onClose={() => setters.layer(false)}\n        tree={tree!}\n      />\n      <PopupConcatOption\n        isOpen={isConcatPopupOpen}\n        onClose={() => setters.concat(false)}\n        tree={tree!}\n      />\n      <PopupRepeatOption\n        isOpen={isRepeatPopupOpen}\n        onClose={() => setters.repeat(false)}\n        currentRepeat={\n          currentView instanceof RepeatView ? currentView.getInfo() : undefined\n        }\n      />\n      <PopupFacetOption\n        isOpen={isFacetPopupOpen}\n        onClose={() => setters.facet(false)}\n        currentFacet={\n          currentView instanceof FacetView ? currentView.getInfo() : undefined\n        }\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Undo from '@material-ui/icons/Undo';\nimport Redo from '@material-ui/icons/Redo';\nimport Grid from '@material-ui/core/Grid';\nimport { LayerButton } from './operations/LayerButton';\nimport { ConcatButton } from './operations/ConcatButton';\nimport { RepeatButton } from './operations/RepeatButton';\nimport { FacetButton } from './operations/FacetButton';\nimport { PlaceButton } from './operations/PlaceButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExportButton } from './operations/ExportButton';\nimport { EditButton } from './operations/EditButton';\n\nexport interface IOperationProps {\n  navBarOperands: number[];\n  mainViewOperands: number[];\n  tree?: View | null;\n}\n\nexport const useWarningStyles = makeStyles(() => ({\n  buttonNormal: {},\n  buttonWarn: {\n    '&:hover': {\n      backgroundColor: '#ffd800',\n    },\n  },\n  error: {\n    width: 22,\n    height: 22,\n    color: '#ed1c1c',\n  },\n}));\n\nexport const OperationBar: React.FC = () => {\n  const dispatch = useDispatch();\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const tree = useSelector((state: IGlobalState) => state.current.tree);\n  const undoDisabled = useSelector(\n    (state: IGlobalState) => state.undoStack.length === 0\n  );\n  const redoDisabled = useSelector(\n    (state: IGlobalState) => state.redoStack.length === 0\n  );\n\n  const handleUndo = () => dispatch({ type: 'undo' });\n  const handleRedo = () => dispatch({ type: 'redo' });\n\n  const navBarOperands = operands.filter(x => x < 0);\n  const mainViewOperands = operands.filter(x => x > 0);\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <LayerButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n        />\n        <ConcatButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n        />\n        <RepeatButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n          tree={tree}\n        />\n        <FacetButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n          tree={tree}\n        />\n        <PlaceButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n        />\n      </Grid>\n      <Grid item>\n        <Button onClick={handleUndo} disabled={undoDisabled}>\n          <Undo /> &nbsp; Undo\n        </Button>\n        <Button onClick={handleRedo} disabled={redoDisabled}>\n          <Redo /> &nbsp; Redo\n        </Button>\n        &nbsp; &nbsp;\n        <EditButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n          tree={tree}\n        />\n        &nbsp; &nbsp;\n        <ExportButton tree={tree} />\n      </Grid>\n    </Grid>\n  );\n};\n","import { View, CompositeView } from './View';\nimport { moveElement, findViewInArray, replaceViewInArray } from './Utils';\n\nexport class ConcatView extends CompositeView<View> {\n  private concat: View[];\n  private orient: ConcatOrient;\n\n  public constructor(orient: ConcatOrient) {\n    super('concat');\n    this.concat = [];\n    this.orient = orient;\n  }\n\n  public export() {\n    return { [this.orient + 'concat']: this.concat.map(l => l.export()) };\n  }\n\n  public append(view: View) {\n    this.concat.push(view);\n  }\n\n  public prepend(view: View) {\n    this.concat.unshift(view);\n  }\n\n  public remove(index: number) {\n    this.concat.splice(index, 1);\n  }\n\n  public isCompatible(_: View): boolean {\n    // concat is always compatible\n    return true;\n  }\n\n  public rearrange(from: number, to: number) {\n    moveElement(this.concat, from, to);\n  }\n\n  public clone() {\n    const cloned = new ConcatView(this.orient);\n    cloned._id = this._id;\n    cloned.concat = [...this.concat];\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new ConcatView(this.orient);\n    cloned._id = this._id;\n    cloned.concat = this.concat.map(view => view.deepClone());\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return findViewInArray(id, this.concat, this);\n  }\n\n  public replaceChild(view: View, id: number) {\n    return replaceViewInArray(view, this.concat, id);\n  }\n\n  public getSubViews(): View[] {\n    return [...this.concat];\n  }\n\n  public getOrient() {\n    return this.orient;\n  }\n\n  public changeOrientation(orient: ConcatOrient) {\n    this.orient = orient;\n  }\n}\n","import { createStore } from 'redux';\nimport * as R from 'ramda';\nimport { UnitView, CompositeView } from './SyntaxTree/View';\nimport { assertNever } from './utils';\nimport { LayerView } from './SyntaxTree/LayerView';\nimport { View } from './SyntaxTree/View';\nimport { ConcatView } from './SyntaxTree/ConcatView';\nimport { RepeatView, RepeatInfo } from './SyntaxTree/RepeatView';\nimport { FacetView, FacetInfo } from './SyntaxTree/FacetView';\n\nconst newGlobalState = (\n  oldState: IGlobalState,\n  getCurrent: (current: IState) => IState\n) => {\n  return {\n    current: getCurrent(oldState.current),\n    undoStack: R.prepend(oldState.current, oldState.undoStack),\n    redoStack: [],\n  };\n};\n\nconst initialState: IGlobalState = {\n  current: {\n    specs: [],\n    lastSpecId: -1,\n    operands: [],\n    tree: null,\n  },\n  undoStack: [],\n  redoStack: [],\n};\n\nconst reducer = (globalState = initialState, action: Action): IGlobalState => {\n  switch (action.type) {\n    case 'add-spec':\n      return newGlobalState(globalState, ({ specs, lastSpecId, ...rest }) => ({\n        specs: R.append(\n          { id: lastSpecId, spec: action.json, alias: action.alias },\n          specs\n        ),\n        lastSpecId: lastSpecId - 1,\n        ...rest,\n      }));\n\n    case 'modify-spec':\n      return newGlobalState(\n        globalState,\n        R.over(\n          R.lensProp('specs'),\n          R.map((spec: IBaseSpec) =>\n            spec.id === action.id\n              ? { id: action.id, spec: action.json, alias: action.alias }\n              : spec\n          )\n        )\n      );\n    case 'delete-spec':\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(\n            R.lensProp('specs'),\n            R.filter((spec: IBaseSpec) => spec.id !== action.id)\n          ),\n          R.over(R.lensProp('operands'), (operands: number[]) =>\n            operands.filter(id => id !== action.id)\n          )\n        )\n      );\n    case 'undo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (undoStack.length > 0) {\n        return {\n          redoStack: R.prepend(current, redoStack),\n          current: undoStack[0],\n          undoStack: undoStack.slice(1),\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'redo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (redoStack.length > 0) {\n        return {\n          redoStack: redoStack.slice(1),\n          current: redoStack[0],\n          undoStack: R.prepend(current, undoStack),\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'select-operand': {\n      return newGlobalState(\n        globalState,\n        R.over(R.lensProp('operands'), operands => {\n          if (operands.includes(action.operand)) {\n            return R.without([action.operand], operands);\n          } else {\n            return R.append(\n              action.operand,\n              operands.filter(operand => operand * action.operand < 0)\n            );\n          }\n        })\n      );\n    }\n    case 'operate': {\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(R.lensProp('tree'), (tree: View) => {\n            const findInNav = (id: number) =>\n              globalState.current.specs.find(spec => spec.id === id)!.spec;\n\n            const left = action.operands.filter(id => id < 0);\n            const right = action.operands.filter(id => id > 0);\n\n            if (action.operator === 'place') {\n              return new UnitView(findInNav(left[0]));\n            }\n\n            let newTree = tree.deepClone();\n            const rightViewResult = newTree.findView(right[0]);\n            if (rightViewResult === null) {\n              throw new Error(\n                `Cannot find view in MainView with id=${right[0]}`\n              );\n            }\n\n            let { parent, view } = rightViewResult;\n\n            switch (action.operator) {\n              case 'layer': {\n                const leftView = new UnitView(findInNav(left[0]));\n                const oldViewId = view.id;\n                if (view instanceof UnitView) {\n                  const layer = new LayerView();\n                  layer.append(view);\n                  view = layer;\n                }\n                (view as LayerView)[action.extra](leftView);\n                if (parent) {\n                  parent.replaceChild(view, oldViewId);\n                } else {\n                  newTree = view;\n                }\n                break;\n              }\n              case 'concat': {\n                const leftView = new UnitView(findInNav(left[0]));\n                const oldViewId = view.id;\n                const { orient, option } = action.extra;\n\n                if (\n                  !(view instanceof ConcatView) ||\n                  view.getOrient() !== orient\n                ) {\n                  const concat = new ConcatView(orient);\n                  concat.append(view);\n                  view = concat;\n                }\n                (view as ConcatView)[option](leftView);\n                if (parent) {\n                  parent.replaceChild(view, oldViewId);\n                } else {\n                  newTree = view;\n                }\n                break;\n              }\n              case 'repeat':\n                const repeat = new RepeatView(view, action.extra as RepeatInfo);\n                if (parent) {\n                  parent.replaceChild(repeat, view.id);\n                } else {\n                  newTree = repeat;\n                }\n                break;\n              case 'facet':\n                const facet = new FacetView(view, action.extra as FacetInfo);\n                if (parent) {\n                  parent.replaceChild(facet, view.id);\n                } else {\n                  newTree = facet;\n                }\n                break;\n              default:\n                return assertNever(action.operator);\n            }\n            return newTree;\n          }),\n          R.over(R.lensProp('operands'), R.always([]))\n        )\n      );\n    }\n    case 'decompose': {\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(R.lensProp('tree'), tree => {\n            let newTree = (tree as View).deepClone();\n            const { parent, view } = newTree.findView(action.operand)!;\n            if (view instanceof CompositeView) {\n              const [subView] = view.getSubViews();\n              if (parent) {\n                parent.replaceChild(subView, action.operand);\n              } else {\n                newTree = subView;\n              }\n            }\n            return newTree;\n          }),\n          R.over(R.lensProp('operands'), R.always([]))\n        )\n      );\n    }\n    case 'modify-info': {\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(R.lensProp('tree'), tree => {\n            let newTree = (tree as View).deepClone();\n            const { view } = newTree.findView(action.operand)!;\n            if (view instanceof FacetView) {\n              view.changeInfo(action.info);\n            } else if (view instanceof RepeatView) {\n              view.changeInfo(action.info);\n            }\n            return newTree;\n          }),\n          R.over(R.lensProp('operands'), R.always([]))\n        )\n      );\n    }\n    case 'rearrange-subview': {\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(R.lensProp('tree'), tree => {\n            let newTree = (tree as View).deepClone();\n            const { parent, view } = newTree.findView(action.operand)!;\n            if (view instanceof ConcatView || view instanceof LayerView) {\n              const newView =\n                view instanceof LayerView\n                  ? new LayerView()\n                  : new ConcatView(action.orient ? action.orient : 'h');\n\n              const subViewMap = {};\n              view\n                .getSubViews()\n                .forEach(subView => (subViewMap[subView.id] = subView));\n\n              action.order.forEach(subViewId => {\n                if (subViewId in subViewMap) {\n                  newView.append(subViewMap[subViewId]);\n                } else {\n                  console.error('subViewId is not in subViewMap');\n                }\n              });\n\n              if (parent) {\n                parent.replaceChild(newView, action.operand);\n              } else {\n                newTree = newView;\n              }\n            }\n            return newTree;\n          }),\n          R.over(R.lensProp('operands'), R.always([]))\n        )\n      );\n    }\n    default:\n      return globalState;\n  }\n};\n\n// NOTE: invariants: navbar has negative id\n// and view has positive id\n\nexport const store = createStore<IGlobalState, Action, {}, {}>(reducer);\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { render } from './views/Renderer';\nimport { FacetView } from '../SyntaxTree/FacetView';\nimport { RepeatView } from '../SyntaxTree/RepeatView';\nimport { Switch } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    backgroundColor: theme.palette.grey[200],\n    marginTop: theme.spacing(1),\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  emptyView: {\n    color: 'darkgrey',\n    fontSize: 20,\n  },\n}));\n\nexport const InnerViewNavigator: React.FC = () => {\n  const classes = useStyles();\n  const [toShowInner, setToShowInner] = useState(false);\n  const tree = useSelector((state: IGlobalState) => state.current.tree);\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const mainViewOperands = operands.filter(x => x > 0);\n\n  const findResult =\n    !!tree &&\n    mainViewOperands.length === 1 &&\n    tree.findView(mainViewOperands[0]);\n  const currentView = !!findResult && findResult.view;\n\n  const handleSwitchChange = event => setToShowInner(event.target.checked);\n\n  return (\n    <>\n      <div style={{ height: 37 }}>\n        Inner View Navigator\n        <Switch checked={toShowInner} onChange={handleSwitchChange} />\n      </div>\n      <div className={classes.main}>\n        {!!currentView && toShowInner ? (\n          render(\n            currentView instanceof RepeatView ||\n              currentView instanceof FacetView\n              ? (currentView as RepeatView | FacetView).getSubViews()[0]\n              : currentView\n          )\n        ) : (\n          <div className={classes.emptyView}>\n            {toShowInner ? 'No View Selected' : 'Disabled'}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { NavigationBar } from './components/NavigationBar';\nimport { NewSpec } from './components/NewSpec';\nimport { MainView } from './components/MainView';\nimport { OperationBar } from './components/OperationBar';\nimport { sidebarWidth } from './variables';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { InnerViewNavigator } from './components/InnerSpecNevigator';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 540,\n    display: 'flex',\n  },\n  left: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    width: sidebarWidth,\n    marginRight: theme.spacing(1),\n  },\n  center: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  right: {\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: sidebarWidth * 2,\n    alignItems: 'center',\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Provider store={store}>\n      <div className={classes.root}>\n        <div className={classes.left}>\n          <NewSpec />\n          <NavigationBar />\n        </div>\n        <div className={classes.center}>\n          <OperationBar />\n          <MainView />\n        </div>\n        &nbsp;\n        <div className={classes.right}>\n          <InnerViewNavigator />\n        </div>\n      </div>\n    </Provider>\n  );\n};\n\nexport default hot(module)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}