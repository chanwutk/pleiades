{"version":3,"sources":["utils.ts","components/PopupEditor.tsx","components/VegaLiteEditor.tsx","components/TooltipTable.tsx","components/VegaLite.tsx","components/SpecPreview.tsx","variables.ts","components/NavigationBar.tsx","components/NewSpec.tsx","components/views/ViewComponent.tsx","components/views/UnitComponent.tsx","components/views/LayerComponent.tsx","components/views/ConcatComponent.tsx","components/views/FacetComponent.tsx","components/views/RepeatConponent.tsx","components/MainView.tsx","components/views/Renderer.tsx","SyntaxTree/Utils.ts","SyntaxTree/View.ts","SyntaxTree/LayerView.ts","components/operations/Utils.tsx","components/operations/LayerButton.tsx","components/operations/ConcatButton.tsx","SyntaxTree/RepeatView.ts","components/operations/PopupRepeatOption.tsx","components/operations/RepeatButton.tsx","SyntaxTree/FacetView.ts","components/operations/PopupFacetOption.tsx","components/operations/FacetButton.tsx","components/operations/PlaceButton.tsx","components/OperationBar.tsx","SyntaxTree/ConcatView.ts","store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["failure","x","tag","value","addMarkdownProps","key","description","markdownDescription","hasOwnProperty","vegaLiteSchema","useStyles","makeStyles","theme","textField","marginTop","spacing","marginBottom","width","closeButton","position","right","top","errorMessage","fontStyle","color","schema","uri","PopupEditor","_ref","isOpen","onClose","onChange","alias","setAlias","errorMsg","extras","classes","react_default","a","createElement","Dialog","open","aria-labelledby","maxWidth","fullWidth","DialogTitle","disableTypography","TextField","id","label","className","event","target","margin","Button","onClick","Save_default","IconButton","Close_default","DialogContent","lib_default","language","height","editorDidMount","editor","focus","editorWillMount","monaco","languages","json","jsonDefaults","setDiagnosticsOptions","allowComments","enableSchemaRequest","schemas","validate","options","automaticLayout","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","Fragment","examples","$schema","data","url","mark","encoding","field","type","y","extent","transform","filter","scale","rangeStep","aggregate","axis","title","stringToSpec","JSON","parse","vl","e","message","VegaLiteEditor","showModal","setShowModal","setValue","onSuccess","_useState","useState","_useState2","Object","slicedToArray","setErrorMsg","map","example","i","stringify","PopupEditor_PopupEditor","toSave","result","txt","_","keyColumn","textAlign","TooltipTable","table","children","_ref2","_ref3","val","Tooltip","placement","VegaLite","React","memo","NativeVegaLite","xSpec","spec","xRest","objectWithoutProperties","ySpec","yRest","shallowEqual","Vega","isSameSpec","wrapper","&::after","display","sidebarWidth","backgroundImage","content","bottom","alignSelf","image","overflow","preview","userSelect","marginLeft","marginRight","border","borderColor","active","borderStyle","&:hover","&:active","center","left","& button","SpecPreview","_useState3","_useState4","currentSpec","setCurrentSpec","_useState5","_useState6","currentAlias","setCurrentAlias","_useState7","_useState8","isDeleting","setIsDeleting","dispatch","useDispatch","useSelector","state","current","operands","includes","ListItem","disableGutters","operand","TooltipTable_TooltipTable","Fab","size","Edit_default","onMouseEnter","onMouseLeave","Delete_default","VegaLiteEditor_VegaLiteEditor","list","overflowY","overflowX","flexGrow","paddingTop","paddingBottom","flexDirection","alignContent","NavigationBar","specs","List","SpecPreview_SpecPreview","button","NewSpec","PlaylistAdd_default","main","padding","backgroundColor","justifyContent","alignItems","makeViewComponent","View","view","thisId","isOperandIncluded","UnitComponent","export","LayerComponent","ConcatComponent","FacetComponent","RepeatComponent","palette","grey","emptyView","fontSize","MainView","tree","Renderer","Error","concat","getRenderer","render","moveElement","arr","from","to","length","fromElm","containsDifferentData","datasets","getData","isUnitSpec","isRepeatSpec","isFacetSpec","toConsumableArray","isLayerSpec","layer","isConcatSpec","isHConcatSpec","hconcat","isVConcatSpec","vconcat","innerSpec","flat","check","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","dataset","R","err","return","extractData","_extractData","newSpec","_extractData2","extractedData","extractedSpec","outputData","_extractData3","push","apply","jsonCopy","findViewInArray","views","currentView","parent","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","findView","objectSpread","replaceViewInArray","obj","idCounter","classCallCheck","this","_id","_type","createClass","get","CompositeView","_View","possibleConstructorReturn","getPrototypeOf","arguments","inherits","UnitView","_View2","_this","call","cloned","_view","LayerView","_CompositeView","l","unshift","index","splice","deepClone","getEncoding","operateFactory","operator","extra","buttonNormal","buttonWarn","error","LayerButton","navBarOperands","mainViewOperands","operate","anchorEl","setAnchorEl","layerDisabled","mainViewOperand","layerDisabledCheck","layerWarn","encodings","mainViewEncodings","currentEncodingField","_i","_Object$keys","keys","layerWarnCheck","handleSelectOption","option","handleMenuClose","currentTarget","disabled","aria-owns","aria-haspopup","ErrorOutlineOutlined_default","Menu","Boolean","MenuItem","ConcatButton","concatDisabled","RepeatView","repeatInfo","repeat","applyRepeat","channel","orient","addAxis","removeAxis","isRepeating","remove","clone","RepeatInfo","row","column","info","rowChannel","columnChannel","nestedTypes","nestedType","forEach","_jsonCopy","nestedSpecs","output","_toPropertyKey","nestedSpec","applyRepeatToEncoding","channelSelector","minWidth","checkBox","PopupRepeatOption","checkRow","setCheckRow","checkColumn","setCheckColumn","rowFields","setRowFields","displayRowFields","setDisplayRowFields","_useState9","_useState10","setRowChannel","_useState11","_useState12","columnFields","setColumnFields","_useState13","_useState14","displayColumnFields","setDisplayColumnFields","_useState15","_useState16","setColumnChannel","handleTextChangeFactory","setter","displaySetter","parsed","array","Array","isArray","isStringArray","onEntering","style","DialogContentText","Checkbox","checked","DialogActions","autoFocus","RepeatButton","useWarningStyles","setIsOpen","repeatDisabled","repeatWarn","PopupRepeatOption_PopupRepeatOption","FacetView","facet","swapAxis","FacetInfo","typeSelector","PopupFacetOption","rowField","setRowField","rowType","setRowType","columnField","setColumnField","columnType","setColumnType","FormControl","InputLabel","htmlFor","Select","inputProps","name","FacetButton","facetDisabled","facetWarn","PopupFacetOption_PopupFacetOption","PlaceButton","placeDisabled","OperationBar","undoDisabled","undoStack","redoDisabled","redoStack","Grid","container","justify","item","LayerButton_LayerButton","ConcatButton_ConcatButton","RepeatButton_RepeatButton","FacetButton_FacetButton","PlaceButton_PlaceButton","Undo_default","Redo_default","ConcatView","defineProperty","newGlobalState","oldState","getCurrent","initialState","lastSpecId","store","createStore","globalState","action","rest","slice","findInNav","find","newTree","rightViewResult","leftView","oldViewId","append","replaceChild","assertNever","root","App","es","NewSpec_NewSpec","NavigationBar_NavigationBar","OperationBar_OperationBar","MainView_MainView","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ab12244.chunk.js","sourcesContent":["export const success = <T>(x: T): ISuccess<T> => ({ tag: 'success', value: x });\nexport const failure = <T>(x: T): IFailure<T> => ({ tag: 'failure', value: x });\nexport const last = <T>(xs: T[]) => xs[xs.length - 1];\nexport const assertNever = (x: never): never => {\n  throw new Error('Unexpected object: ' + x);\n};\n","import React from 'react';\nimport MonacoEditor, {\n  EditorDidMount,\n  EditorWillMount,\n  DiffChangeHandler,\n} from 'react-monaco-editor';\nimport Close from '@material-ui/icons/Close';\nimport Save from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport vegaLiteSchema from 'vega-lite/build/vega-lite-schema.json';\n\n/**\n * Adds markdownDescription props to a schema. See https://github.com/Microsoft/monaco-editor/issues/885\n */\nconst addMarkdownProps = value => {\n  if (typeof value === 'object' && value !== null) {\n    if (value.description) {\n      value.markdownDescription = value.description;\n    }\n\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        value[key] = addMarkdownProps(value[key]);\n      }\n    }\n  }\n  return value;\n};\n\naddMarkdownProps(vegaLiteSchema);\n\nexport interface IPopupEditorProps {\n  isOpen: boolean;\n  onClose: (toSave: boolean) => void;\n  value: string;\n  onChange: DiffChangeHandler;\n  alias: string;\n  setAlias: (txt: string) => void;\n  errorMsg?: string;\n  extras: React.ReactNode[];\n}\n\nconst editorHeight = 400;\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(4),\n    width: 300,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n  },\n  errorMessage: {\n    fontStyle: 'italic',\n    color: 'red',\n  },\n}));\n\nconst schema = [\n  {\n    schema: vegaLiteSchema,\n    uri: 'https://vega.github.io/schema/vega-lite/v3.json',\n  },\n];\n\nexport const PopupEditor: React.FC<IPopupEditorProps> = ({\n  isOpen,\n  onClose,\n  value,\n  onChange,\n  alias,\n  setAlias,\n  errorMsg,\n  extras,\n}) => {\n  const classes = useStyles();\n\n  const handleEditorDidMount: EditorDidMount = editor => {\n    editor.focus();\n  };\n\n  const handleEditorWillMount: EditorWillMount = monaco => {\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      allowComments: false,\n      enableSchemaRequest: true,\n      schemas: schema,\n      validate: true,\n    });\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"lg\"\n      fullWidth={true}\n    >\n      <DialogTitle disableTypography>\n        <TextField\n          id=\"standard-name\"\n          label=\"Name\"\n          className={classes.textField}\n          value={alias}\n          onChange={event => setAlias(event.target.value)}\n          margin=\"normal\"\n        />\n        <Button onClick={() => onClose(true)}>\n          <Save />\n          &nbsp; Save\n        </Button>\n        {extras}\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => onClose(false)}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className=\"editor\">\n          <MonacoEditor\n            language=\"json\"\n            value={value}\n            height={editorHeight}\n            onChange={onChange}\n            editorDidMount={handleEditorDidMount}\n            editorWillMount={handleEditorWillMount}\n            options={{\n              automaticLayout: true,\n              cursorBlinking: 'smooth',\n              folding: true,\n              lineNumbersMinChars: 4,\n              minimap: { enabled: false },\n              scrollBeyondLastLine: false,\n              wordWrap: 'on',\n            }}\n          />\n        </div>\n        <span className={classes.errorMessage}>\n          {errorMsg !== null ? <>{errorMsg} &nbsp;</> : null}\n        </span>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport * as vl from 'vega-lite';\nimport stringify from 'json-stringify-pretty-compact';\nimport Button from '@material-ui/core/Button';\n\nimport { success, failure } from '../utils';\nimport { PopupEditor } from './PopupEditor';\n\nexport interface IVegaLiteEditorProps {\n  showModal: boolean;\n  setShowModal: (val: boolean) => void;\n  value: string;\n  setValue: (txt: string) => void;\n  alias: string;\n  setAlias: (txt: string) => void;\n  onSuccess: (alias: string, json: IRawSpec) => void;\n}\n\nconst examples = [\n  {\n    $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n    data: { url: 'https://vega.github.io/editor/data/cars.json' },\n    mark: 'point',\n    encoding: {\n      x: { field: 'Horsepower', type: 'quantitative' },\n      y: { field: 'Miles_per_Gallon', type: 'quantitative' },\n    },\n  },\n  {\n    $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n    data: { url: 'https://vega.github.io/editor/data/cars.json' },\n    mark: { type: 'errorband', extent: 'stdev' },\n    encoding: {\n      y: { field: 'Miles_per_Gallon', type: 'quantitative' },\n    },\n  },\n\n  {\n    $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n    data: { url: 'https://vega.github.io/editor/data/population.json' },\n    transform: [{ filter: 'datum.year == 2000' }],\n    mark: 'bar',\n    encoding: {\n      y: {\n        field: 'age',\n        type: 'ordinal',\n        scale: { rangeStep: 17 },\n      },\n      x: {\n        aggregate: 'sum',\n        field: 'people',\n        type: 'quantitative',\n        axis: { title: 'population' },\n      },\n    },\n  },\n];\n\nconst stringToSpec = (value: string) => {\n  try {\n    const json = JSON.parse(value);\n    if (!('data' in json) || !('url' in json.data || 'values' in json.data)) {\n      return failure('data field must exist and must be url.');\n    }\n\n    // TODO: can we do anything with the output of the compilation?\n    // currently we only call it for side-effect (to see if it errors or not)\n    vl.compile(json);\n    return success(json);\n  } catch (e) {\n    return failure(e.message);\n  }\n};\n\nexport const VegaLiteEditor: React.FC<IVegaLiteEditorProps> = ({\n  showModal,\n  setShowModal,\n  value,\n  setValue,\n  alias,\n  setAlias,\n  onSuccess,\n}) => {\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleClose = (toSave: boolean) => {\n    if (toSave) {\n      const result = stringToSpec(value);\n      switch (result.tag) {\n        case 'success':\n          setErrorMsg('');\n          onSuccess(alias, result.value);\n          setShowModal(false);\n          return;\n        case 'failure':\n          setErrorMsg(result.value);\n          // NOTE: this does not close the dialog\n          return;\n      }\n    } else {\n      setErrorMsg('');\n      setShowModal(false);\n      return;\n    }\n  };\n\n  const handleChange = (txt: string) => {\n    // NOTE: need to setValue before setErrorMsg\n    setValue(txt);\n    const result = stringToSpec(txt);\n    switch (result.tag) {\n      case 'success':\n        setErrorMsg('');\n        break;\n      case 'failure':\n        setErrorMsg(result.value);\n        break;\n    }\n  };\n\n  const extras = examples.map((example, i) => (\n    <Button key={i} onClick={() => setValue(stringify(example))}>\n      Example {i + 1}\n    </Button>\n  ));\n\n  return (\n    <PopupEditor\n      isOpen={showModal}\n      onClose={handleClose}\n      value={value}\n      onChange={handleChange}\n      alias={alias}\n      setAlias={setAlias}\n      errorMsg={errorMsg}\n      extras={extras}\n    />\n  );\n};\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface ITooltipTableProps {\n  table: string[][];\n  children: any;\n}\n\nconst useStyles = makeStyles(_ => ({\n  keyColumn: { textAlign: 'right' },\n}));\n\nexport const TooltipTable: React.FC<ITooltipTableProps> = ({\n  table,\n  children,\n}) => {\n  const classes = useStyles();\n  const title = (\n    <table>\n      <tbody>\n        {table.map(([key, val]) => (\n          <tr key={key}>\n            <td className={classes.keyColumn}>\n              <strong>{key}</strong>:\n            </td>\n            <td>{val}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  return (\n    <Tooltip placement=\"top\" title={title}>\n      {children}\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { shallowEqual } from 'react-redux';\nimport Vega from 'react-vega';\nimport NativeVegaLite from 'react-vega-lite';\n\nexport const VegaLite = React.memo(\n  NativeVegaLite,\n  ({ spec: xSpec, ...xRest }, { spec: ySpec, ...yRest }) => {\n    return shallowEqual(xRest, yRest) && Vega.isSameSpec(xSpec, ySpec);\n  }\n);\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport stringify from 'json-stringify-pretty-compact';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport { VegaLiteEditor } from './VegaLiteEditor';\nimport { TooltipTable } from './TooltipTable';\nimport Fab from '@material-ui/core/Fab';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { sidebarWidth, borderWidth } from '../variables';\nimport { VegaLite } from './VegaLite';\n\nexport interface ISpecPreviewProps {\n  spec: IBaseSpec;\n}\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    height: sidebarWidth,\n    '&::after': {\n      display: 'block',\n      position: 'absolute',\n      width: sidebarWidth - 2 * borderWidth,\n      backgroundImage:\n        'linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.75))',\n      height: '75%',\n      content: \"''\",\n      bottom: 0,\n      alignSelf: 'center',\n    },\n  },\n  image: {\n    overflow: 'hidden',\n    height: sidebarWidth,\n    width: sidebarWidth - 2 * borderWidth,\n  },\n  preview: {\n    position: 'relative',\n    userSelect: 'none',\n    width: sidebarWidth,\n    marginTop: 5,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    border: borderWidth,\n    borderColor: ((active: boolean) =>\n      active ? '#3caea3' : 'lightgrey') as any,\n    borderStyle: 'solid',\n    '&:hover': {\n      borderColor: ((active: boolean) =>\n        active ? '#3caea3' : 'darkgrey') as any,\n    },\n    '&:active': {\n      borderColor: 'grey',\n    },\n  },\n  center: {\n    position: 'absolute',\n    left: '50%',\n    transform: 'translate(-50%, 0)',\n  },\n  top: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    '& button': {\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(1),\n    },\n  },\n  bottom: {\n    bottom: 10,\n    color: 'white',\n  },\n}));\n\nexport const SpecPreview: React.FC<ISpecPreviewProps> = ({ spec }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const active = useSelector((state: IGlobalState) =>\n    state.current.operands.includes(spec.id)\n  );\n\n  const handleModify = () => {\n    setCurrentSpec(stringify(spec.spec));\n    setCurrentAlias(spec.alias);\n    setShowModal(true);\n  };\n\n  const handleDeleteMouseEnter = () => setIsDeleting(true);\n  const handleDeleteMouseLeave = () => setIsDeleting(false);\n\n  const handleDelete = () => {\n    dispatch({ type: 'delete-spec', id: spec.id });\n  };\n\n  const handleSuccess = (alias: string, json: IRawSpec) => {\n    dispatch({ type: 'modify-spec', json, alias, id: spec.id });\n  };\n\n  const handleToggleActive = () => {\n    if (!isDeleting) {\n      dispatch({ type: 'select-operand', operand: spec.id });\n    }\n  };\n\n  const markToString = (mark: string | { type: string }) => {\n    if (typeof mark === 'string') {\n      return mark;\n    } else {\n      return mark.type;\n    }\n  };\n\n  const dataToString = (data: IRawData) => {\n    return 'url' in data ? data['url'] : 'Embeded data';\n  };\n\n  const classes = useStyles(active);\n  const table = [\n    ['Data URL', dataToString(spec.spec.data)],\n    ['Mark Type', markToString(spec.spec.mark)],\n  ];\n\n  return (\n    <>\n      <ListItem\n        disableGutters\n        className={classes.preview}\n        onClick={handleToggleActive}\n      >\n        <TooltipTable table={table}>\n          <div className={classes.wrapper}>\n            <div className={classes.image}>\n              <VegaLite\n                spec={spec.spec}\n                // This size restriction makes the elements in visualized spec layed out incorrectly\n                width={sidebarWidth}\n                height={sidebarWidth}\n              />\n            </div>\n          </div>\n        </TooltipTable>\n\n        <div className={classes.top}>\n          <Fab size=\"small\" color=\"primary\" onClick={handleModify}>\n            <Edit />\n          </Fab>\n          <Fab\n            size=\"small\"\n            color=\"secondary\"\n            onClick={handleDelete}\n            onMouseEnter={handleDeleteMouseEnter}\n            onMouseLeave={handleDeleteMouseLeave}\n          >\n            <Delete />\n          </Fab>\n        </div>\n\n        <div className={classes.center + ' ' + classes.bottom}>\n          {spec.alias}\n        </div>\n      </ListItem>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","export const sidebarWidth = 150;\nexport const borderWidth = 2;\nexport const defaultVegaLiteHeight = 200;\nexport const defaultVegaLiteWidth = 200;\nexport const defaultVegaLiteShortHeight = 20;\nexport const defaultVegaLiteShortWidth = 20;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SpecPreview } from './SpecPreview';\n\nconst useStyles = makeStyles(_ => ({\n  list: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexGrow: 1,\n    paddingTop: 0,\n    paddingBottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'center',\n  },\n}));\n\nexport const NavigationBar: React.FC = () => {\n  const classes = useStyles();\n  const specs = useSelector((state: IGlobalState) => state.current.specs);\n\n  return (\n    <List className={classes.list}>\n      {specs.map(spec => (\n        <SpecPreview key={spec.id} spec={spec} />\n      ))}\n    </List>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PlaylistAdd from '@material-ui/icons/PlaylistAdd';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { VegaLiteEditor } from './VegaLiteEditor';\n\nconst useStyles = makeStyles(theme => ({\n  button: { marginBottom: theme.spacing(1) },\n}));\n\nexport const NewSpec: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentSpec, setCurrentSpec] = useState('');\n  const [currentAlias, setCurrentAlias] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleSuccess = (alias: string, json: IRawSpec) => {\n    dispatch({ type: 'add-spec', json, alias });\n  };\n\n  const handleOpen = () => {\n    setCurrentSpec('');\n    setCurrentAlias('Untitled');\n    setShowModal(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button onClick={handleOpen} className={classes.button}>\n        <PlaylistAdd /> &nbsp; New Spec\n      </Button>\n      <VegaLiteEditor\n        showModal={showModal}\n        setShowModal={setShowModal}\n        onSuccess={handleSuccess}\n        value={currentSpec}\n        setValue={setCurrentSpec}\n        alias={currentAlias}\n        setAlias={setCurrentAlias}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nimport { borderWidth } from '../../variables';\n\nexport const useStyles = makeStyles(_ => ({\n  main: {\n    padding: 10,\n    border: borderWidth,\n    borderColor: ((active: boolean) =>\n      active ? '#3caea3' : 'lightgrey') as any,\n    borderStyle: 'solid',\n    '&:hover': {\n      borderColor: ((active: boolean) =>\n        active ? '#3caea3' : 'darkgrey') as any,\n    },\n    '&:active': {\n      borderColor: 'grey',\n    },\n    backgroundColor: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport interface IViewComponentProps {\n  view: View;\n}\n\nexport const makeViewComponent = (\n  View: React.FC<IViewComponentProps>\n): React.FC<IViewComponentProps> => ({ view }) => {\n  const thisId = view.id;\n  const dispatch = useDispatch();\n  const isOperandIncluded = useSelector((state: IGlobalState) =>\n    state.current.operands.includes(thisId)\n  );\n  const handleToggleActive = () => {\n    dispatch({\n      type: 'select-operand',\n      operand: thisId,\n    });\n  };\n  const classes = useStyles(isOperandIncluded);\n  return (\n    <div className={classes.main} onClick={handleToggleActive}>\n      <View view={view} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\n\nexport const UnitComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view }) => {\n    return <VegaLite spec={view.export()} />;\n  }\n);\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\n\nexport const LayerComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view }) => {\n    return <VegaLite spec={view.export()} />;\n  }\n);\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\n\nexport const ConcatComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view }) => {\n    return <VegaLite spec={view.export()} />;\n  }\n);\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\n\nexport const FacetComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view }) => {\n    return <VegaLite spec={view.export()} />;\n  }\n);\n","import React from 'react';\nimport { IViewComponentProps, makeViewComponent } from './ViewComponent';\nimport { VegaLite } from '../VegaLite';\n\nexport const RepeatComponent: React.FC<IViewComponentProps> = makeViewComponent(\n  ({ view }) => {\n    return <VegaLite spec={view.export()} />;\n  }\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { render } from './views/Renderer';\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    backgroundColor: theme.palette.grey[200],\n    marginTop: theme.spacing(1),\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  emptyView: {\n    color: 'darkgrey',\n    fontSize: 20,\n  },\n}));\n\nexport const MainView: React.FC = () => {\n  const classes = useStyles();\n  const tree = useSelector((state: IGlobalState) => state.current.tree);\n  return (\n    <div className={classes.main}>\n      {tree ? (\n        render(tree)\n      ) : (\n        <div className={classes.emptyView}>Empty View</div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { UnitComponent } from './UnitComponent';\nimport { LayerComponent } from './LayerComponent';\nimport { ConcatComponent } from './ConcatComponent';\nimport { FacetComponent } from './FacetComponent';\nimport { RepeatComponent } from './RepeatConponent';\n\nexport const render = (view: View) => {\n  const getRenderer = () => {\n    switch (view.type) {\n      case 'unit':\n        return UnitComponent;\n      case 'layer':\n        return LayerComponent;\n      case 'concat':\n        return ConcatComponent;\n      case 'facet':\n        return FacetComponent;\n      case 'repeat':\n        return RepeatComponent;\n      default:\n        throw new Error(`${view.type} view has not been implemented`);\n    }\n  };\n  const Renderer = getRenderer();\n  return <Renderer view={view} />;\n};\n","import { View } from './View';\nimport {\n  isUnitSpec,\n  isLayerSpec,\n  isRepeatSpec,\n  isFacetSpec,\n} from 'vega-lite/build/src/spec';\nimport {\n  isConcatSpec,\n  isHConcatSpec,\n  isVConcatSpec,\n} from 'vega-lite/build/src/spec/concat';\nimport * as R from 'ramda';\n\n/**\n * Move an element that index `from` to the index `to` and shift the rest to the\n * index `from`.\n * For example: in an array with 4 elements [0, 1, 2, 3], calling\n * rearrange(2, 0) result in the rearrangement of the elements to [2, 0, 1, 3]\n * @param {Array} arr array containing the elements to be moved.\n * @param {number} from the index of the element to be moved from.\n * @param {number} to the index of the element to be moved to.\n */\nexport function moveElement(arr: Array<any>, from: number, to: number) {\n  if (!(from in arr && to in arr)) {\n    throw new Error(\n      `from (=${from}) or to (=${to}) is out of arr bound (=[0,${arr.length -\n        1}])`\n    );\n  }\n\n  const fromElm = arr[from];\n  if (from < to) {\n    for (let i = from; i < to; i++) {\n      arr[i] = arr[i + 1];\n    }\n  } else {\n    for (let i = from; i > to; i--) {\n      arr[i] = arr[i - 1];\n    }\n  }\n  arr[to] = fromElm;\n}\n\nexport function getData(spec: IRawSpec): IRawData[] {\n  if (isUnitSpec(spec)) {\n    return spec.data ? [spec.data] : [];\n  }\n  if (isRepeatSpec(spec) || isFacetSpec(spec)) {\n    return [...getData(spec.spec), ...(spec.data ? [spec.data] : [])];\n  }\n\n  let specs: any[] = [];\n\n  if (isLayerSpec(spec)) {\n    specs = spec.layer;\n  } else if (isConcatSpec(spec)) {\n    specs = spec.concat;\n  } else if (isHConcatSpec(spec)) {\n    specs = spec.hconcat;\n  } else if (isVConcatSpec(spec)) {\n    specs = spec.vconcat;\n  }\n\n  return [\n    ...specs\n      .map(innerSpec => {\n        return getData(innerSpec);\n      })\n      .flat(),\n    ...(spec.data ? [spec.data] : []),\n  ];\n}\n\nexport function containsDifferentData(spec: IRawSpec): boolean {\n  const datasets = getData(spec);\n  if (datasets.length === 0) return true;\n  const check = datasets[0];\n  for (const dataset of datasets) {\n    if (!R.equals(dataset, check)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function extractData(spec: IRawSpec): { spec: {}; data: IRawData[] } {\n  return _extractData(jsonCopy(spec));\n}\n\nfunction _extractData(spec: IRawSpec): { spec: {}; data: IRawData[] } {\n  if (isUnitSpec(spec)) {\n    const { data, ...newSpec } = spec;\n    return { data: data ? [data] : [], spec: newSpec };\n  }\n  if (isRepeatSpec(spec) || isFacetSpec(spec)) {\n    const { data } = spec;\n    const { data: extractedData, spec: extractedSpec } = _extractData(\n      spec.spec\n    );\n    spec.spec = extractedSpec;\n    return { data: [...(data ? [data] : []), ...extractedData], spec };\n  }\n\n  let key: string = '';\n  if (isLayerSpec(spec)) {\n    key = 'layer';\n  } else if (isConcatSpec(spec)) {\n    key = 'concat';\n  } else if (isHConcatSpec(spec)) {\n    key = 'hconcat';\n  } else if (isVConcatSpec(spec)) {\n    key = 'vconcat';\n  }\n\n  const { data } = spec;\n  const outputData: IRawData[] = data ? [data] : [];\n  for (let i = 0; i < spec[key].length; i++) {\n    const { data: extractedData, spec: extractedSpec } = _extractData(\n      spec[key][i]\n    );\n    outputData.push(...extractedData);\n    spec[key][i] = extractedSpec;\n  }\n  return { data: outputData, spec };\n}\n\nexport function findViewInArray(id: number, views: View[], currentView: View) {\n  if (id === currentView.id) return { parent: null, view: currentView };\n  for (const view of views) {\n    const result = view.findView(id);\n    if (result !== null) {\n      return result.parent !== null\n        ? result\n        : { ...result, parent: currentView };\n    }\n  }\n  return null;\n}\n\nexport function replaceViewInArray(\n  view: View,\n  views: View[],\n  id: number\n): boolean {\n  for (let i = 0; i < views.length; i++) {\n    if (views[i].id === id) {\n      views[i] = view;\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function jsonCopy(obj: {}) {\n  return JSON.parse(JSON.stringify(obj));\n}\n","import { jsonCopy } from './Utils';\n\nlet idCounter = 1;\n\nexport abstract class View {\n  protected _id: number;\n  private _type: ViewType;\n\n  constructor(type: ViewType) {\n    // NOTE: if possible, get rid of this mutation, but if not, that's fine\n    this._id = idCounter++;\n    this._type = type;\n  }\n\n  public get type(): ViewType {\n    return this._type;\n  }\n\n  public get id(): number {\n    return this._id;\n  }\n\n  /**\n   * export Vega-Lite spec in vl.json format\n   * @returns exported Vega-Lite spec\n   */\n  abstract export(): object;\n\n  abstract clone(): View;\n\n  abstract deepClone(): View;\n\n  abstract findView(id: number): { parent: View | null; view: View } | null;\n\n  abstract replaceChild(view: View, id: number): boolean;\n}\n\n/**\n * An indicator for a view in CompositView.\n * Concat and Layer need a View and UnitView to indicate the appearance of the view,\n * while Repeat only need a string that specify a field to indicate\n * the appearance of the view.\n * Facet only need a field name for each axis to specify facet property, so\n * it should not have a parameter. Thus, we use null.\n * TODO: explain this better!\n */\ntype ViewIndicator = View | string | null;\n\nexport abstract class CompositeView<V extends ViewIndicator> extends View {\n  /**\n   * Move subview at the position `from` to position `to`.\n   * For example: in composite view with 4 subviews [0, 1, 2, 3], calling\n   * rearrange(2, 0) result in the rearrangement of the subview to [2, 0, 1, 3]\n   * @param {number} form the index of the view to be moved from.\n   * @param {number} to the index of the view to be moved to.\n   * @param {any} option an extra option for rearrangement.\n   */\n  abstract rearrange(from: number, to: number, option: any): void;\n\n  /**\n   * Append another view with a ViewIdicator `viewIndicator`\n   * @param {V} viewIndicator the ViewIndicator to be appended.\n   * @param {any} option an extra option for appending.\n   */\n  abstract append(viewIndicator: V, option: any): void;\n\n  /**\n   * Prepend another view with a ViewIdicator `viewIndicator`\n   * @param {V} viewIndicator the ViewIndicator to be prepended.\n   * @param {any} option an extra option for appending.\n   */\n  abstract prepend(viewIndicator: V, option: any): void;\n\n  /**\n   * Remove a view from composite view\n   * @param {number} the index of the view to be removed\n   * @param {any} option an extra option for removing\n   */\n  abstract remove(index: number, option: any): void;\n\n  /**\n   * Check if `viewIndicator` is competible with the current view\n   * @param {V} viewIndicator a view indicator to be checked\n   * @returns true if `viewIndicator` is competible with the current view\n   *          false otherwise.\n   */\n  abstract isCompatible(viewIndicator: V): boolean;\n}\n\nexport class UnitView extends View {\n  private spec: IRawSpec;\n\n  /**\n   * Construct a unit view with a valid Vega-Lite spec.\n   * @param {object} spec Vega-Lite spec\n   */\n  public constructor(spec: IRawSpec) {\n    super('unit');\n    this.spec = spec;\n  }\n\n  public edit(spec: IRawSpec) {\n    this.spec = spec;\n  }\n\n  public export() {\n    return jsonCopy(this.spec);\n  }\n\n  public clone() {\n    const cloned = new UnitView(this.spec);\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new UnitView(jsonCopy(this.spec));\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return this._id === id ? { parent: null, view: this } : null;\n  }\n\n  public replaceChild(_view: View, _id: number): boolean {\n    throw new Error('UnitView cannot replace child');\n  }\n\n  public getEncoding() {\n    return this.spec['encoding'];\n  }\n}\n","import { CompositeView, UnitView } from './View';\nimport { moveElement, findViewInArray, replaceViewInArray } from './Utils';\n\nexport class LayerView extends CompositeView<UnitView> {\n  private layer: UnitView[];\n\n  public constructor() {\n    super('layer');\n    this.layer = [];\n  }\n\n  public export() {\n    return { layer: this.layer.map(l => l.export()) };\n  }\n\n  public append(view: UnitView) {\n    this.layer.push(view);\n  }\n\n  public prepend(view: UnitView) {\n    this.layer.unshift(view);\n  }\n\n  public remove(index: number) {\n    this.layer.splice(index, 1);\n  }\n\n  public isCompatible(view: UnitView): boolean {\n    const spec = view.export();\n    return (\n      !spec['spec'] &&\n      !spec['layer'] &&\n      !spec['concat'] &&\n      !spec['hconcat'] &&\n      !spec['vconcat']\n    );\n  }\n\n  public rearrange(from: number, to: number) {\n    moveElement(this.layer, from, to);\n  }\n\n  public clone() {\n    const cloned = new LayerView();\n    cloned._id = this._id;\n    cloned.layer = [...this.layer];\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new LayerView();\n    cloned._id = this._id;\n    cloned.layer = this.layer.map(view => view.deepClone());\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return findViewInArray(id, this.layer, this);\n  }\n\n  public replaceChild(view: View, id: number) {\n    return replaceViewInArray(view, this.layer, id);\n  }\n\n  public getEncoding() {\n    return this.layer.map(l => l.getEncoding());\n  }\n}\n","import { FacetInfo } from '../../SyntaxTree/FacetView';\nimport { RepeatInfo } from '../../SyntaxTree/RepeatView';\nimport { Dispatch } from 'react';\nimport { AnyAction } from 'redux';\n\nexport const operateFactory = (\n  dispatch: Dispatch<AnyAction>,\n  operands: number[]\n) => {\n  return (operator: Operator, extra?: RepeatInfo | FacetInfo | string) => {\n    // make sure that disabled functions properly, and we won't need to\n    // write a check here\n    dispatch({\n      type: 'operate',\n      operands,\n      operator,\n      ...(extra ? { extra } : {}),\n    });\n  };\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport ErrorOutlineOutlined from '@material-ui/icons/ErrorOutlineOutlined';\nimport { isUnitSpec } from 'vega-lite/build/src/spec';\nimport { LayerView } from '../../SyntaxTree/LayerView';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UnitView } from '../../SyntaxTree/View';\nimport { operateFactory } from './Utils';\nimport { IOperationProps } from '../OperationBar';\nimport { Menu, MenuItem } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  buttonNormal: {},\n  buttonWarn: {\n    '&:hover': {\n      backgroundColor: '#ffd800',\n    },\n  },\n  error: {\n    width: 22,\n    height: 22,\n    color: '#ed1c1c',\n  },\n}));\n\nexport const LayerButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n}) => {\n  const classes = useStyles();\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const tree = useSelector((state: IGlobalState) => state.current.tree);\n  const specs = useSelector((state: IGlobalState) => state.current.specs);\n  const operate = operateFactory(useDispatch(), operands);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const layerDisabled = layerDisabledCheck(\n    mainViewOperands,\n    navBarOperands,\n    specs,\n    tree\n  );\n  const layerWarn = layerWarnCheck(\n    layerDisabled,\n    specs,\n    navBarOperands,\n    mainViewOperands,\n    tree\n  );\n\n  const handleClickLayer = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleSelectOption = (option: 'append' | 'prepend') => () => {\n    handleMenuClose();\n    operate('layer', option);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Button\n        // onClick={() => operate('layer')}\n        onClick={handleClickLayer}\n        disabled={layerDisabled}\n        className={layerWarn ? classes.buttonWarn : classes.buttonNormal}\n        aria-owns={anchorEl ? 'layer-menu' : undefined}\n        aria-haspopup=\"true\"\n      >\n        {layerWarn ? (\n          <>\n            <ErrorOutlineOutlined className={classes.error} /> &nbsp;\n          </>\n        ) : (\n          <></>\n        )}\n        Layer\n      </Button>\n      <Menu\n        id=\"layer-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleSelectOption('prepend')}>Under</MenuItem>\n        <MenuItem onClick={handleSelectOption('append')}>Over</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nfunction layerDisabledCheck(\n  mainViewOperands: number[],\n  navBarOperands: number[],\n  specs: IBaseSpec[],\n  tree: View | null\n): boolean {\n  if (\n    mainViewOperands.length !== 1 ||\n    navBarOperands.length !== 1 ||\n    specs.filter(\n      spec => navBarOperands.includes(spec.id) && !isUnitSpec(spec.spec)\n    ).length !== 0\n  ) {\n    return true;\n  }\n\n  const mainViewOperand = tree!.findView(mainViewOperands[0]);\n  return (\n    mainViewOperand === null ||\n    (!(mainViewOperand.view instanceof LayerView) &&\n      !isUnitSpec(mainViewOperand.view.export()))\n  );\n}\n\nfunction layerWarnCheck(\n  layerDisabled: boolean,\n  specs: IBaseSpec[],\n  navBarOperands: number[],\n  mainViewOperands: number[],\n  tree: View | null\n): boolean {\n  if (layerDisabled) {\n    return false;\n  }\n\n  const encodings: any[] = [];\n  for (const spec of specs) {\n    if (navBarOperands.includes(spec.id)) {\n      encodings.push(new UnitView(spec.spec).getEncoding());\n    }\n  }\n\n  const mainViewOperand = tree!.findView(mainViewOperands[0])!.view;\n  let mainViewEncodings: any[] = [];\n  if (mainViewOperand instanceof UnitView) {\n    mainViewEncodings = [mainViewOperand.getEncoding()];\n  } else if (mainViewOperand instanceof LayerView) {\n    mainViewEncodings = mainViewOperand.getEncoding();\n  }\n\n  const currentEncodingField = {};\n  for (const encoding of encodings.concat(mainViewEncodings)) {\n    for (const key of Object.keys(encoding)) {\n      if (\n        key in currentEncodingField &&\n        currentEncodingField[key] !== encoding[key].field\n      ) {\n        return true;\n      }\n      currentEncodingField[key] = encoding[key].field;\n    }\n  }\n  return false;\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { operateFactory } from './Utils';\nimport { IOperationProps } from '../OperationBar';\n\nexport const ConcatButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n}) => {\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const operate = operateFactory(useDispatch(), operands);\n\n  const concatDisabled =\n    mainViewOperands.length !== 1 || navBarOperands.length !== 1;\n\n  return (\n    <Button onClick={() => operate('concat')} disabled={concatDisabled}>\n      Concat\n    </Button>\n  );\n};\n","import { View, CompositeView } from './View';\nimport { moveElement, findViewInArray, jsonCopy } from './Utils';\n\nexport class RepeatView extends CompositeView<string> {\n  private repeatInfo: RepeatInfo;\n  private view: View;\n\n  public constructor(view: View, repeatInfo: RepeatInfo) {\n    super('repeat');\n    this.repeatInfo = repeatInfo;\n    this.view = view;\n  }\n\n  public export() {\n    return {\n      repeat: this.repeatInfo.export(),\n      spec: applyRepeat(this.view.export(), this.repeatInfo),\n    };\n  }\n\n  /**\n   * Add a repeating axis\n   * @param channel encoding channel for the axis to be repeated\n   * @param orient orient of the added axis\n   */\n  public addAxis(channel: string, orient: 'row' | 'column') {\n    this.repeatInfo.addAxis(channel, orient);\n  }\n\n  /**\n   * Remove a repeating axis\n   * @param orient orient of the removed axis\n   */\n  public removeAxis(orient: 'row' | 'column') {\n    this.repeatInfo.removeAxis(orient);\n  }\n\n  public append(field: string, option: 'row' | 'column') {\n    if (this.repeatInfo.isRepeating(option)) {\n      this.repeatInfo[option].push(field);\n    }\n  }\n\n  public prepend(field: string, option: 'row' | 'column') {\n    if (this.repeatInfo.isRepeating(option)) {\n      this.repeatInfo[option].unshift(field);\n    }\n  }\n\n  public remove(index: number, axis: 'row' | 'column') {\n    this.repeatInfo.remove(index, axis);\n  }\n\n  public isCompatible(_: string): boolean {\n    // repeat is always compatible\n    return true;\n  }\n\n  public rearrange(from: number, to: number, option: 'row' | 'column') {\n    if (this.repeatInfo.isRepeating(option)) {\n      moveElement(this.repeatInfo[option], from, to);\n    }\n  }\n\n  public clone() {\n    const cloned = new RepeatView(this.view, this.repeatInfo);\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new RepeatView(\n      this.view.deepClone(),\n      this.repeatInfo.clone()\n    );\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return findViewInArray(id, [this.view], this);\n  }\n\n  public replaceChild(view: View, id: number) {\n    if (this.view.id === id) {\n      this.view = view;\n      return true;\n    }\n    return false;\n  }\n}\n\ninterface ChannelInfo {\n  rowChannel?: string;\n  columnChannel?: string;\n}\n\n/**\n * This class contains information for repeat\n */\nexport class RepeatInfo {\n  public row: string[];\n  public column: string[];\n  public rowChannel?: string;\n  public columnChannel?: string;\n\n  public constructor(row: string[], column: string[], info: ChannelInfo) {\n    this.row = info.rowChannel ? row : [];\n    this.column = info.columnChannel ? column : [];\n    this.rowChannel = info.rowChannel;\n    this.columnChannel = info.columnChannel;\n  }\n\n  /**\n   * Add an orient to repeat `channel`\n   * @param orient an orient to be added\n   * @param channel the encoding channel the orient is repeating\n   */\n  public repeat(orient: 'row' | 'column', channel: string) {\n    if (!this.isRepeating(orient)) {\n      this[orient] = [];\n      (this as any)[`${orient}Channel`] = channel;\n    }\n  }\n\n  /**\n   * Check if repeating the `axis`\n   * @param orient orient to be checked if repeating\n   */\n  public isRepeating(orient: 'row' | 'column'): boolean {\n    return !!(this as any)[`${orient}Channel`];\n  }\n\n  public export() {\n    return {\n      ...(this.isRepeating('row') ? { row: jsonCopy(this.row) } : {}),\n      ...(this.isRepeating('column') ? { column: jsonCopy(this.column) } : {}),\n    };\n  }\n\n  public remove(index: number, axis: 'row' | 'column') {\n    this[axis].splice(index, 1);\n  }\n\n  /**\n   * Add a repeating axis\n   * @param channel encoding channel for the axis to be repeated\n   * @param orient orient of the added axis\n   */\n  public addAxis(channel: string, orient: 'row' | 'column') {\n    this[orient] = [];\n    (this as any)[`${orient}Channel`] = channel;\n  }\n\n  /**\n   * Remove a repeating axis\n   * @param orient orient of the removed axis\n   */\n  public removeAxis(orient: 'row' | 'column') {\n    this[orient] = [];\n    (this as any)[`${orient}Channel`] = undefined;\n  }\n\n  public getChannelInfo(): ChannelInfo {\n    return {\n      ...(this.rowChannel ? { rowChannel: this.rowChannel } : {}),\n      ...(this.columnChannel ? { columnChannel: this.columnChannel } : {}),\n    };\n  }\n\n  public clone() {\n    return new RepeatInfo(this.row, this.column, {\n      ...(this.rowChannel ? { rowChannel: this.rowChannel } : {}),\n      ...(this.columnChannel ? { columnChannel: this.columnChannel } : {}),\n    });\n  }\n}\n\n/**\n * list of keys for nested spec\n */\nconst nestedTypes = ['layer', 'concat', 'hconcat', 'vconcat', 'spec'];\n\n/**\n * Apply repeat information `repeat` to `spec`\n * @param spec the spec the repeat information `repeat` to be applied\n * @param repeat the repeat information to apply to `spec`\n */\nfunction applyRepeat(spec: any, repeat: RepeatInfo) {\n  let nestedType: string | undefined = undefined;\n  nestedTypes.forEach(type => {\n    if (spec[type]) {\n      nestedType = type;\n    }\n  });\n\n  const {\n    [nestedType || '$invalid-vl-field$']: nestedSpecs,\n    ...output\n  } = jsonCopy(spec);\n  if (nestedType) {\n    output[nestedType] = nestedSpecs.map((nestedSpec: any) =>\n      applyRepeat(nestedSpec, repeat)\n    );\n  }\n\n  if (output.encoding) {\n    applyRepeatToEncoding(output.encoding, repeat);\n  }\n  return output;\n}\n\n/**\n * Apply repeat information `repeat` to `encoding`\n * @param encoding the encoding repeat information `repeat` to be applied\n * @param repeat the repeat information applying\n */\nfunction applyRepeatToEncoding(encoding: any, repeat: RepeatInfo) {\n  if (repeat.rowChannel && encoding[repeat.rowChannel]) {\n    encoding[repeat.rowChannel].field = { repeat: 'row' };\n  }\n  if (repeat.columnChannel && encoding[repeat.columnChannel]) {\n    encoding[repeat.columnChannel].field = { repeat: 'column' };\n  }\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { operateFactory } from './Utils';\nimport {\n  Dialog,\n  DialogTitle,\n  IconButton,\n  DialogActions,\n  DialogContent,\n  Checkbox,\n  TextField,\n  DialogContentText,\n} from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport makeStyles from '@material-ui/styles/makeStyles';\nimport { RepeatInfo } from '../../SyntaxTree/RepeatView';\n\nexport interface IPopupRepeatOptionProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst useStyles = makeStyles(() => ({\n  channelSelector: {\n    minWidth: 60,\n  },\n  checkBox: {\n    top: 10,\n  },\n}));\n\nfunction isStringArray(array: any): array is string[] {\n  if (!Array.isArray(array)) {\n    return false;\n  }\n\n  for (const elm of array) {\n    if (typeof elm !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport const PopupRepeatOption: React.FC<IPopupRepeatOptionProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const classes = useStyles();\n  const [checkRow, setCheckRow] = useState(false);\n  const [checkColumn, setCheckColumn] = useState(false);\n  const [rowFields, setRowFields] = useState<string[]>([]);\n  const [displayRowFields, setDisplayRowFields] = useState('');\n  const [rowChannel, setRowChannel] = useState('');\n  const [columnFields, setColumnFields] = useState<string[]>([]);\n  const [displayColumnFields, setDisplayColumnFields] = useState('');\n  const [columnChannel, setColumnChannel] = useState('');\n\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const operate = operateFactory(useDispatch(), operands);\n\n  const handleEntering = () => {\n    setCheckRow(false);\n    setCheckColumn(false);\n    setRowFields([]);\n    setDisplayRowFields('');\n    setRowChannel('');\n    setColumnFields([]);\n    setDisplayColumnFields('');\n    setColumnChannel('');\n  };\n\n  const operateDisabled = () =>\n    (!(checkRow && rowFields.length !== 0 && rowChannel !== '') &&\n      !(checkColumn && columnFields.length !== 0 && columnChannel !== '')) ||\n    ((checkRow && (rowFields.length === 0 || rowChannel === '')) ||\n      (checkColumn && (columnFields.length === 0 || columnChannel === '')));\n\n  const handleTextChangeFactory = (\n    setter: React.Dispatch<React.SetStateAction<string[]>>,\n    displaySetter: React.Dispatch<React.SetStateAction<string>>\n  ) => event => {\n    displaySetter(event.target.value);\n    try {\n      const parsed = JSON.parse(event.target.value);\n      setter(isStringArray(parsed) ? parsed : []);\n    } catch (error) {\n      setter([]);\n    }\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onEntering={handleEntering}\n      aria-labelledby=\"repeat-dialog-title\"\n    >\n      <DialogTitle id=\"repeat-dialog-title\">\n        <>Repeat</>\n        <IconButton\n          onClick={onClose}\n          style={{ right: 10, top: 7, position: 'absolute' }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Choose Field(s) and Encoding Channel(s) to repeat.\n        </DialogContentText>\n        <div>\n          <Checkbox\n            checked={checkRow}\n            onChange={() => setCheckRow(!checkRow)}\n            className={classes.checkBox}\n          />\n          <TextField\n            label=\"Row Fields\"\n            value={displayRowFields}\n            onChange={handleTextChangeFactory(\n              setRowFields,\n              setDisplayRowFields\n            )}\n          />\n          &nbsp; &nbsp;\n          <TextField\n            label=\"Channel\"\n            value={rowChannel}\n            onChange={event => setRowChannel(event.target.value)}\n          />\n        </div>\n        <div>\n          <Checkbox\n            checked={checkColumn}\n            onChange={() => setCheckColumn(!checkColumn)}\n            className={classes.checkBox}\n          />\n          <TextField\n            label=\"Column Fields\"\n            value={displayColumnFields}\n            onChange={handleTextChangeFactory(\n              setColumnFields,\n              setDisplayColumnFields\n            )}\n          />\n          &nbsp; &nbsp;\n          <TextField\n            label=\"Channel\"\n            value={columnChannel}\n            onChange={event => setColumnChannel(event.target.value)}\n          />\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            operate(\n              'repeat',\n              new RepeatInfo(rowFields, columnFields, {\n                rowChannel,\n                columnChannel,\n              })\n            );\n            onClose();\n          }}\n          autoFocus\n          disabled={operateDisabled()}\n        >\n          Operate\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { IOperationProps, useWarningStyles } from '../OperationBar';\nimport { PopupRepeatOption } from './PopupRepeatOption';\nimport { containsDifferentData } from '../../SyntaxTree/Utils';\nimport ErrorOutlineOutlined from '@material-ui/icons/ErrorOutlineOutlined';\n\nexport const RepeatButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n  tree,\n}) => {\n  const classes = useWarningStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const repeatDisabled =\n    mainViewOperands.length !== 1 || navBarOperands.length > 0;\n\n  const repeatWarn = () => {\n    return (\n      !repeatDisabled &&\n      containsDifferentData(tree!\n        .findView(mainViewOperands[0])!\n        .view.export() as IRawSpec)\n    );\n  };\n\n  return (\n    <>\n      <Button\n        onClick={() => setIsOpen(true)}\n        disabled={repeatDisabled}\n        className={repeatWarn() ? classes.buttonWarn : classes.buttonNormal}\n      >\n        {repeatWarn() ? (\n          <>\n            <ErrorOutlineOutlined className={classes.error} /> &nbsp;\n          </>\n        ) : (\n          <></>\n        )}\n        Repeat\n      </Button>\n      <PopupRepeatOption isOpen={isOpen} onClose={() => setIsOpen(false)} />\n    </>\n  );\n};\n","import { View, CompositeView } from './View';\nimport { jsonCopy, findViewInArray, extractData } from './Utils';\n\nexport class FacetView extends CompositeView<null> {\n  private view: View;\n  private facet: FacetInfo;\n\n  public constructor(view: View, facet: FacetInfo) {\n    super('facet');\n    this.facet = facet;\n    this.view = view;\n  }\n\n  public export() {\n    // need a better way to extract data from composed specs\n    const { data, ...spec } = extractData(this.view.export() as IRawSpec);\n    return {\n      data: data[0],\n      facet: this.facet.export(),\n      ...spec,\n    };\n  }\n\n  public append(_: null, option: {}) {\n    // add facet to an available axis\n    if (!this.facet['column']) {\n      this.facet.column = option;\n    } else if (!this.facet['row']) {\n      this.facet.row = option;\n    }\n  }\n\n  public prepend() {\n    throw new Error('prepend is not supported for FacetView');\n  }\n\n  public remove(_: number, axis: 'row' | 'column') {\n    this.facet.remove(axis);\n  }\n\n  public isCompatible(_: any): boolean {\n    // facet is always compatible\n    return true;\n  }\n\n  public rearrange() {\n    // switch between row and column\n    if (this.facet['row'] && this.facet['column']) {\n      this.facet.swapAxis();\n    }\n  }\n\n  public clone() {\n    const cloned = new FacetView(this.view, this.facet);\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new FacetView(this.view.deepClone(), this.facet.clone());\n    cloned._id = this._id;\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return findViewInArray(id, [this.view], this);\n  }\n\n  public replaceChild(view: View, id: number) {\n    if (this.view.id === id) {\n      this.view = view;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * This class contains information for facet\n */\nexport class FacetInfo {\n  row?: {};\n  column?: {};\n\n  constructor(info: { row?: {}; column?: {} }) {\n    this.row = info.row;\n    this.column = info.column;\n  }\n\n  public export() {\n    return {\n      ...(this.row ? { row: this.row } : {}),\n      ...(this.column ? { column: this.column } : {}),\n    };\n  }\n\n  public swapAxis() {\n    [this.row, this.column] = [this.column, this.row];\n  }\n\n  public remove(axis: 'row' | 'column') {\n    this[axis] = undefined;\n  }\n\n  public clone() {\n    return new FacetInfo({\n      ...(this.row ? { row: jsonCopy(this.row) } : {}),\n      ...(this.column ? { column: jsonCopy(this.column) } : {}),\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { FacetInfo } from '../../SyntaxTree/FacetView';\nimport { operateFactory } from './Utils';\nimport {\n  Dialog,\n  DialogTitle,\n  IconButton,\n  DialogActions,\n  DialogContent,\n  Checkbox,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  DialogContentText,\n} from '@material-ui/core';\nimport Close from '@material-ui/icons/Close';\nimport makeStyles from '@material-ui/styles/makeStyles';\n\nexport interface IPopupFacetOptionProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst useStyles = makeStyles(() => ({\n  typeSelector: {\n    minWidth: 60,\n  },\n  checkBox: {\n    top: 10,\n  },\n}));\n\nexport const PopupFacetOption: React.FC<IPopupFacetOptionProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const classes = useStyles();\n  const [checkRow, setCheckRow] = useState(false);\n  const [checkColumn, setCheckColumn] = useState(false);\n  const [rowField, setRowField] = useState('');\n  const [rowType, setRowType] = useState('');\n  const [columnField, setColumnField] = useState('');\n  const [columnType, setColumnType] = useState('');\n\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const operate = operateFactory(useDispatch(), operands);\n\n  const handleEntering = () => {\n    setCheckRow(false);\n    setCheckColumn(false);\n    setRowField('');\n    setRowType('');\n    setColumnField('');\n    setColumnType('');\n  };\n\n  const operateDisabled = () =>\n    (!(checkRow && rowField !== '' && rowType !== '') &&\n      !(checkColumn && columnField !== '' && columnType !== '')) ||\n    ((checkRow && (rowField === '' || rowType === '')) ||\n      (checkColumn && (columnField === '' || columnType === '')));\n\n  return (\n    <Dialog\n      open={isOpen}\n      onEntering={handleEntering}\n      aria-labelledby=\"facet-dialog-title\"\n    >\n      <DialogTitle id=\"facet-dialog-title\">\n        <>Facet</>\n        <IconButton\n          onClick={onClose}\n          style={{ right: 10, top: 7, position: 'absolute' }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Choose Field(s) and Type(s) to facet.\n        </DialogContentText>\n        <div>\n          <Checkbox\n            checked={checkRow}\n            onChange={() => setCheckRow(!checkRow)}\n            className={classes.checkBox}\n          />\n          <TextField\n            label=\"Row Field\"\n            value={rowField}\n            onChange={event => setRowField(event.target.value)}\n          />\n          &nbsp; &nbsp;\n          <FormControl>\n            <InputLabel htmlFor=\"row-type\">Type</InputLabel>\n            <Select\n              value={rowType}\n              onChange={event => setRowType(event.target.value as string)}\n              inputProps={{\n                name: 'type',\n                id: 'row-type',\n              }}\n              className={classes.typeSelector}\n            >\n              <MenuItem value={'nominal'}>Nominal</MenuItem>\n              <MenuItem value={'ordinal'}>Ordinal</MenuItem>\n              <MenuItem value={'quantitative'}>Quantitative</MenuItem>\n              <MenuItem value={'temporal'}>Temporal</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <Checkbox\n            checked={checkColumn}\n            onChange={() => setCheckColumn(!checkColumn)}\n            className={classes.checkBox}\n          />\n          <TextField\n            label=\"Column Field\"\n            value={columnField}\n            onChange={event => setColumnField(event.target.value)}\n          />\n          &nbsp; &nbsp;\n          <FormControl>\n            <InputLabel htmlFor=\"column-type\">Type</InputLabel>\n            <Select\n              value={columnType}\n              onChange={event => setColumnType(event.target.value as string)}\n              inputProps={{\n                name: 'type',\n                id: 'column-type',\n              }}\n              className={classes.typeSelector}\n            >\n              <MenuItem value={'nominal'}>Nominal</MenuItem>\n              <MenuItem value={'ordinal'}>Ordinal</MenuItem>\n              <MenuItem value={'quantitative'}>Quantitative</MenuItem>\n              <MenuItem value={'temporal'}>Temporal</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            operate(\n              'facet',\n              new FacetInfo({\n                ...(checkColumn\n                  ? { column: { field: columnField, type: columnType } }\n                  : {}),\n                ...(checkRow\n                  ? { row: { field: rowField, type: rowType } }\n                  : {}),\n              })\n            );\n            onClose();\n          }}\n          autoFocus\n          disabled={operateDisabled()}\n        >\n          Operate\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { PopupFacetOption } from './PopupFacetOption';\nimport { IOperationProps, useWarningStyles } from '../OperationBar';\nimport { containsDifferentData } from '../../SyntaxTree/Utils';\nimport ErrorOutlineOutlined from '@material-ui/icons/ErrorOutlineOutlined';\n\nexport const FacetButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n  tree,\n}) => {\n  const classes = useWarningStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const facetDisabled =\n    mainViewOperands.length !== 1 || navBarOperands.length > 0;\n\n  const facetWarn = () => {\n    return (\n      !facetDisabled &&\n      containsDifferentData(tree!\n        .findView(mainViewOperands[0])!\n        .view.export() as IRawSpec)\n    );\n  };\n\n  return (\n    <>\n      <Button\n        onClick={() => setIsOpen(true)}\n        disabled={facetDisabled}\n        className={facetWarn() ? classes.buttonWarn : classes.buttonNormal}\n      >\n        {facetWarn() ? (\n          <>\n            <ErrorOutlineOutlined className={classes.error} /> &nbsp;\n          </>\n        ) : (\n          <></>\n        )}\n        Facet\n      </Button>\n      <PopupFacetOption isOpen={isOpen} onClose={() => setIsOpen(false)} />\n    </>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { operateFactory } from './Utils';\nimport { IOperationProps } from '../OperationBar';\n\nexport const PlaceButton: React.FC<IOperationProps> = ({\n  navBarOperands,\n  mainViewOperands,\n}) => {\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const tree = useSelector((state: IGlobalState) => state.current.tree);\n\n  const operate = operateFactory(useDispatch(), operands);\n\n  const placeDisabled =\n    tree !== null || mainViewOperands.length > 0 || navBarOperands.length !== 1;\n\n  return (\n    <Button onClick={() => operate('place')} disabled={placeDisabled}>\n      Place\n    </Button>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Undo from '@material-ui/icons/Undo';\nimport Redo from '@material-ui/icons/Redo';\nimport Grid from '@material-ui/core/Grid';\nimport { LayerButton } from './operations/LayerButton';\nimport { ConcatButton } from './operations/ConcatButton';\nimport { RepeatButton } from './operations/RepeatButton';\nimport { FacetButton } from './operations/FacetButton';\nimport { PlaceButton } from './operations/PlaceButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface IOperationProps {\n  navBarOperands: number[];\n  mainViewOperands: number[];\n  tree?: View | null;\n}\n\nexport const useWarningStyles = makeStyles(() => ({\n  buttonNormal: {},\n  buttonWarn: {\n    '&:hover': {\n      backgroundColor: '#ffd800',\n    },\n  },\n  error: {\n    width: 22,\n    height: 22,\n    color: '#ed1c1c',\n  },\n}));\n\nexport const OperationBar: React.FC = () => {\n  const dispatch = useDispatch();\n  const operands = useSelector((state: IGlobalState) => state.current.operands);\n  const tree = useSelector((state: IGlobalState) => state.current.tree);\n  const undoDisabled = useSelector(\n    (state: IGlobalState) => state.undoStack.length === 0\n  );\n  const redoDisabled = useSelector(\n    (state: IGlobalState) => state.redoStack.length === 0\n  );\n\n  const handleUndo = () => dispatch({ type: 'undo' });\n  const handleRedo = () => dispatch({ type: 'redo' });\n\n  const navBarOperands = operands.filter(x => x < 0);\n  const mainViewOperands = operands.filter(x => x > 0);\n\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <LayerButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n        />\n        <ConcatButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n        />\n        <RepeatButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n          tree={tree}\n        />\n        <FacetButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n          tree={tree}\n        />\n        <PlaceButton\n          navBarOperands={navBarOperands}\n          mainViewOperands={mainViewOperands}\n        />\n      </Grid>\n      <Grid item>\n        <Button onClick={handleUndo} disabled={undoDisabled}>\n          <Undo /> &nbsp; Undo\n        </Button>\n        <Button onClick={handleRedo} disabled={redoDisabled}>\n          <Redo /> &nbsp; Redo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","import { View, CompositeView } from './View';\nimport { moveElement, findViewInArray, replaceViewInArray } from './Utils';\n\nexport class ConcatView extends CompositeView<View> {\n  private concat: View[];\n  private orient: 'h' | 'v';\n\n  public constructor(orient: 'h' | 'v') {\n    super('concat');\n    this.concat = [];\n    this.orient = orient;\n  }\n\n  public export() {\n    return { [this.orient + 'concat']: this.concat.map(l => l.export()) };\n  }\n\n  public append(view: View) {\n    this.concat.push(view);\n  }\n\n  public prepend(view: View) {\n    this.concat.unshift(view);\n  }\n\n  public remove(index: number) {\n    this.concat.splice(index, 1);\n  }\n\n  public isCompatible(_: View): boolean {\n    // concat is always compatible\n    return true;\n  }\n\n  public rearrange(from: number, to: number) {\n    moveElement(this.concat, from, to);\n  }\n\n  public clone() {\n    const cloned = new ConcatView(this.orient);\n    cloned._id = this._id;\n    cloned.concat = [...this.concat];\n    return cloned;\n  }\n\n  public deepClone() {\n    const cloned = new ConcatView(this.orient);\n    cloned._id = this._id;\n    cloned.concat = this.concat.map(view => view.deepClone());\n    return cloned;\n  }\n\n  public findView(id: number) {\n    return findViewInArray(id, this.concat, this);\n  }\n\n  public replaceChild(view: View, id: number) {\n    return replaceViewInArray(view, this.concat, id);\n  }\n}\n","import { createStore } from 'redux';\nimport * as R from 'ramda';\nimport { UnitView } from './SyntaxTree/View';\nimport { assertNever } from './utils';\nimport { LayerView } from './SyntaxTree/LayerView';\nimport { View } from './SyntaxTree/View';\nimport { ConcatView } from './SyntaxTree/ConcatView';\nimport { RepeatView, RepeatInfo } from './SyntaxTree/RepeatView';\nimport { FacetView, FacetInfo } from './SyntaxTree/FacetView';\n\nconst newGlobalState = (\n  oldState: IGlobalState,\n  getCurrent: (current: IState) => IState\n) => {\n  return {\n    current: getCurrent(oldState.current),\n    undoStack: R.prepend(oldState.current, oldState.undoStack),\n    redoStack: [],\n  };\n};\n\nconst initialState: IGlobalState = {\n  current: {\n    specs: [],\n    lastSpecId: -1,\n    operands: [],\n    tree: null,\n  },\n  undoStack: [],\n  redoStack: [],\n};\n\nconst reducer = (globalState = initialState, action: Action): IGlobalState => {\n  switch (action.type) {\n    case 'add-spec':\n      return newGlobalState(globalState, ({ specs, lastSpecId, ...rest }) => ({\n        specs: R.append(\n          { id: lastSpecId, spec: action.json, alias: action.alias },\n          specs\n        ),\n        lastSpecId: lastSpecId - 1,\n        ...rest,\n      }));\n\n    case 'modify-spec':\n      return newGlobalState(\n        globalState,\n        R.over(\n          R.lensProp('specs'),\n          R.map((spec: IBaseSpec) =>\n            spec.id === action.id\n              ? { id: action.id, spec: action.json, alias: action.alias }\n              : spec\n          )\n        )\n      );\n    case 'delete-spec':\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(\n            R.lensProp('specs'),\n            R.filter((spec: IBaseSpec) => spec.id !== action.id)\n          ),\n          R.over(R.lensProp('operands'), (operands: number[]) =>\n            operands.filter(id => id !== action.id)\n          )\n        )\n      );\n    case 'undo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (undoStack.length > 0) {\n        return {\n          redoStack: R.prepend(current, redoStack),\n          current: undoStack[0],\n          undoStack: undoStack.slice(1),\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'redo': {\n      const { current, undoStack, redoStack } = globalState;\n      if (redoStack.length > 0) {\n        return {\n          redoStack: redoStack.slice(1),\n          current: redoStack[0],\n          undoStack: R.prepend(current, undoStack),\n        };\n      } else {\n        return globalState;\n      }\n    }\n    case 'select-operand': {\n      return newGlobalState(\n        globalState,\n        R.over(R.lensProp('operands'), operands => {\n          if (operands.includes(action.operand)) {\n            return R.without([action.operand], operands);\n          } else {\n            return R.append(action.operand, operands);\n          }\n        })\n      );\n    }\n    case 'operate': {\n      return newGlobalState(\n        globalState,\n        R.pipe(\n          R.over(R.lensProp('tree'), (tree: View) => {\n            const findInNav = (id: number) =>\n              globalState.current.specs.find(spec => spec.id === id)!.spec;\n\n            const left = action.operands.filter(id => id < 0);\n            const right = action.operands.filter(id => id > 0);\n\n            if (action.operator === 'place') {\n              return new UnitView(findInNav(left[0]));\n            }\n\n            let newTree = tree.deepClone();\n            const rightViewResult = newTree.findView(right[0]);\n            if (rightViewResult === null) {\n              throw new Error(\n                `Cannot find view in MainView with id=${right[0]}`\n              );\n            }\n\n            let { parent, view } = rightViewResult;\n\n            switch (action.operator) {\n              case 'layer': {\n                const leftView = new UnitView(findInNav(left[0]));\n                const oldViewId = view.id;\n                if (view instanceof UnitView) {\n                  const layer = new LayerView();\n                  layer.append(view);\n                  view = layer;\n                }\n                (view as LayerView)[action.extra](leftView);\n                if (parent) {\n                  parent.replaceChild(view, oldViewId);\n                } else {\n                  newTree = view;\n                }\n                break;\n              }\n              case 'concat': {\n                const leftView = new UnitView(findInNav(left[0]));\n                const oldViewId = view.id;\n                if (!(view instanceof ConcatView)) {\n                  const concat = new ConcatView('h');\n                  concat.append(view);\n                  view = concat;\n                }\n                (view as ConcatView).append(leftView);\n                if (parent) {\n                  parent.replaceChild(view, oldViewId);\n                } else {\n                  newTree = view;\n                }\n                break;\n              }\n              case 'repeat':\n                const repeat = new RepeatView(view, action.extra as RepeatInfo);\n                if (parent) {\n                  parent.replaceChild(repeat, view.id);\n                } else {\n                  newTree = repeat;\n                }\n                break;\n              case 'facet':\n                const facet = new FacetView(view, action.extra as FacetInfo);\n                if (parent) {\n                  parent.replaceChild(facet, view.id);\n                } else {\n                  newTree = facet;\n                }\n                break;\n              default:\n                return assertNever(action.operator);\n            }\n            return newTree;\n          }),\n          R.over(R.lensProp('operands'), R.always([]))\n        )\n      );\n    }\n    default:\n      return globalState;\n  }\n};\n\n// NOTE: invariants: navbar has negative id\n// and view has positive id\n\nexport const store = createStore<IGlobalState, Action, {}, {}>(reducer);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { NavigationBar } from './components/NavigationBar';\nimport { NewSpec } from './components/NewSpec';\nimport { MainView } from './components/MainView';\nimport { OperationBar } from './components/OperationBar';\nimport { sidebarWidth } from './variables';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 600,\n    display: 'flex',\n  },\n  left: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    width: sidebarWidth,\n    marginRight: theme.spacing(1),\n  },\n  right: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Provider store={store}>\n      <div className={classes.root}>\n        <div className={classes.left}>\n          <NewSpec />\n          <NavigationBar />\n        </div>\n        <div className={classes.right}>\n          <OperationBar />\n          <MainView />\n        </div>\n      </div>\n    </Provider>\n  );\n};\n\nexport default hot(module)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}